<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Architecture on ChenSoul</title>
    <link>https://blog.chensoul.com/categories/architecture/</link>
    <description>Recent content in Architecture on ChenSoul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 16 Nov 2023 12:30:00 +0800</lastBuildDate><atom:link href="https://blog.chensoul.com/categories/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[译]《Grokking the System Design Interview》系统设计主模板</title>
      <link>https://blog.chensoul.com/posts/2023/11/16/system-design-master-template/</link>
      <pubDate>Thu, 16 Nov 2023 12:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/16/system-design-master-template/</guid>
      <description>这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 System Design Master Template 这篇章节。
System design interviews are unstructured by design. In these interviews, you are asked to take on an …</description>
    </item>
    
    <item>
      <title>[译]《Grokking the System Design Interview》系统设计访谈：分步指南</title>
      <link>https://blog.chensoul.com/posts/2023/11/16/sdi-a-step-by-step-guide/</link>
      <pubDate>Thu, 16 Nov 2023 06:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/16/sdi-a-step-by-step-guide/</guid>
      <description>这是一篇双语翻译的文章，原文出自 grok_system_design_interview.pdf 的一篇文章《System Design Interviews: A step by step guide》系统设计访谈：分步指南。
A lot of software engineers struggle with system design interviews (SDIs) primarily …</description>
    </item>
    
    <item>
      <title>分布式基础知识</title>
      <link>https://blog.chensoul.com/posts/2023/11/14/distributed-system-basic/</link>
      <pubDate>Tue, 14 Nov 2023 07:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/14/distributed-system-basic/</guid>
      <description>什么是分布式系统？ 分布式系统是指由多个独立的计算机节点（或服务器）通过网络相互连接和协作，共同完成某个任务或提供某个服务的系统。在分布式系统中，各个节点可以同时进行计算、存储和通信，并通过消息传递等方式进行协调和同步。
分布式系统的设计目标是提高系统的性能、可靠性和可扩展性，同时减少单点故障和提高系统的容错性。通过将任务和数据分布到多个节点上，分布式系统可以实现更高的并行性和处理能力。此外，分布 …</description>
    </item>
    
    <item>
      <title>[译]给年轻的工程师们的关于分布式系统的一些笔记</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/notes-on-distributed-systems-for-young-bloods/</link>
      <pubDate>Fri, 10 Nov 2023 08:40:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/notes-on-distributed-systems-for-young-bloods/</guid>
      <description>我一直在思考分布式系统工程师在工作中学到的教训。我们大部分的教导都来自于在生产环境中犯过的错误留下的伤痕。这些伤痕固然是有用的提醒，但让更多的工程师能够完整地保留手指会更好。
新的系统工程师在自我学习中会遇到分布式计算的谬论和CAP定理。但这些都是抽象的概念，缺乏针对经验不足的工程师直接可行的建议。让人惊讶的是，新工程师在开始工作时所了解到的背景信息是如此之少。
下面是我作为一名分布式系统工程师学 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》6.进一步阅读和附录</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-06/</link>
      <pubDate>Fri, 10 Nov 2023 08:34:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-06/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者Mikito Takada撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明分布 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》5.复制：弱一致性模型协议</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-05/</link>
      <pubDate>Fri, 10 Nov 2023 08:33:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-05/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》4.复制</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-04/</link>
      <pubDate>Fri, 10 Nov 2023 08:32:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-04/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》3.时间及顺序</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-03/</link>
      <pubDate>Fri, 10 Nov 2023 08:31:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-03/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》2.抽象层次的上下</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-02/</link>
      <pubDate>Fri, 10 Nov 2023 08:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-02/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》1.高层分布式系统</title>
      <link>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-01/</link>
      <pubDate>Fri, 10 Nov 2023 07:20:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/10/distributed-systems-01/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明 …</description>
    </item>
    
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》介绍</title>
      <link>https://blog.chensoul.com/posts/2023/11/09/distributed-systems-intro/</link>
      <pubDate>Thu, 09 Nov 2023 11:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/11/09/distributed-systems-intro/</guid>
      <description>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者Mikito Takada撰写，介绍了构建分布式系统的基本概念、原则和挑战。
这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。
在整本书中，作者提供了各种实际案例和案例研究，以说明分布 …</description>
    </item>
    
    <item>
      <title>用户故事如何应用到个人管理</title>
      <link>https://blog.chensoul.com/posts/2023/08/21/user-stories-in-self-manager/</link>
      <pubDate>Mon, 21 Aug 2023 11:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/08/21/user-stories-in-self-manager/</guid>
      <description>用户故事（User Stories）是敏捷软件开发中的一种需求表达方式，用于描述用户的需求、期望和价值。尽管用户故事主要应用于软件开发团队，但其原则和方法也可以应用到个人管理中，以帮助个人更好地管理自己的任务和目标。
在个人管理中，可以将用户故事的思维方式应用如下：
角色定义：将自己作为一个角色，例如“个人”或“自己的名字”。明确自己的身份和角色，以便更好地理解自己的需求和期望。 需求描述：将自己 …</description>
    </item>
    
    <item>
      <title>如何成为一名合格的架构师</title>
      <link>https://blog.chensoul.com/posts/2023/08/21/architecture/</link>
      <pubDate>Mon, 21 Aug 2023 09:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/08/21/architecture/</guid>
      <description>如何成为一名合格的架构师 成为一名合格的架构师需要不断学习和积累经验。以下是一些步骤和建议，可以帮助你成为一名合格的架构师：
学习基础知识：建立坚实的计算机科学和软件工程基础，包括数据结构、算法、操作系统、数据库等。深入学习编程语言和开发技术，了解不同技术栈的优缺点。
实践项目开发：通过参与实际的软件开发项目，积累项目管理和开发经验。亲身经历软件开发的各个阶段，从需求分析到设计、开发、测试和部署， …</description>
    </item>
    
    <item>
      <title>软件开发流程和常用开发方法</title>
      <link>https://blog.chensoul.com/posts/2023/08/21/the-software-development-process/</link>
      <pubDate>Mon, 21 Aug 2023 09:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/08/21/the-software-development-process/</guid>
      <description>软件开发流程和常用开发方法，如敏捷开发和 DevOps，对于架构师来说非常重要。下面我将简要介绍这些概念：
软件开发流程：
软件开发流程是指在开发软件时，按照一定的步骤和阶段进行工作的过程。常见的软件开发流程包括瀑布模型、迭代模型和增量模型等。这些流程以不同的方式组织和管理开发过程，包括需求分析、设计、编码、测试和部署等阶段。
敏捷开发：
敏捷开发是一种迭代和增量的软件开发方法，强调团队协作、快速 …</description>
    </item>
    
    <item>
      <title>[译]微服务设计模式</title>
      <link>https://blog.chensoul.com/posts/2023/06/26/microservice-design-patterns/</link>
      <pubDate>Mon, 26 Jun 2023 08:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/06/26/microservice-design-patterns/</guid>
      <description>基于微服务的应用程序的主要特征在 微服务、单体和 NoOps 中定义。它们是功能分解或领域驱动设计、定义良好的接口、明确发布的接口、单一责任原则和潜在的多语言。每项服务都是完全自主和全栈的。
因此，更改服务实现不会影响其他服务，因为它们使用定义良好的接口进行通信。这种应用程序有几个优点，但它不是 免费的午餐，需要在 NoOps 方面付出大量努力。
但是假设您了解构建此类应用程序所需的工作或至少其中 …</description>
    </item>
    
  </channel>
</rss>
