<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Database on ChenSoul</title>
    <link>https://chensoul.github.io/categories/database/</link>
    <description>Recent content in Database on ChenSoul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 15 Aug 2023 10:00:00 +0800</lastBuildDate><atom:link href="https://chensoul.github.io/categories/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据库如何设计树形结构</title>
      <link>https://chensoul.github.io/posts/2023/08/15/tree-structure-in-database/</link>
      <pubDate>Tue, 15 Aug 2023 10:00:00 +0800</pubDate>
      
      <guid>https://chensoul.github.io/posts/2023/08/15/tree-structure-in-database/</guid>
      <description>在 MySQL 中，设计树形结构的区域表有多种方式。以下是一些常见的方案：
父子关系（Parent-Child Relationship）模型：在这种模型中，每个行记录包含一个指向其父级的引用。可以使用一个额外的列来存储父级 ID，或者使用自连接表来表示关系。这种模型简单直观，易于理解和管理。 路径（Path）模型：在这种模型中，每个行记录都包含一个代表其完整路径的字段。路径可以是以某种分隔符（如 …</description>
    </item>
    
  </channel>
</rss>
