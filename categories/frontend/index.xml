<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Frontend on ChenSoul</title>
    <link>https://blog.chensoul.cc/categories/frontend/</link>
    <description>Recent content in Frontend on ChenSoul</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 12 Oct 2023 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/categories/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端学习路线图</title>
      <link>https://blog.chensoul.cc/posts/2023/10/12/frontend-roadmap/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/10/12/frontend-roadmap/</guid>
      <description>&lt;p&gt;前端学习路线图:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internet：
&lt;ul&gt;
&lt;li&gt;HTTP&lt;/li&gt;
&lt;li&gt;DNS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTML
&lt;ul&gt;
&lt;li&gt;Basic&lt;/li&gt;
&lt;li&gt;Semantic HTML&lt;/li&gt;
&lt;li&gt;Forms and Validations&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;SEO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS
&lt;ul&gt;
&lt;li&gt;Basic&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Responsive Design&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JavaScript
&lt;ul&gt;
&lt;li&gt;Baisc&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;li&gt;Fetch API / Ajax&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Package Manager
&lt;ul&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;li&gt;pnpm&lt;/li&gt;
&lt;li&gt;yarn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Framework
&lt;ul&gt;
&lt;li&gt;Angular&lt;/li&gt;
&lt;li&gt;Vue.js&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Svelte&lt;/li&gt;
&lt;li&gt;Solid JS&lt;/li&gt;
&lt;li&gt;Qwik&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Writing CSS
&lt;ul&gt;
&lt;li&gt;Tailwind&lt;/li&gt;
&lt;li&gt;Radix UI&lt;/li&gt;
&lt;li&gt;Shadcn UI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS Architecture
&lt;ul&gt;
&lt;li&gt;BEM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS Preprocessors
&lt;ul&gt;
&lt;li&gt;SASS&lt;/li&gt;
&lt;li&gt;PostCSS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build
&lt;ul&gt;
&lt;li&gt;Module Bundlers
&lt;ul&gt;
&lt;li&gt;parcel&lt;/li&gt;
&lt;li&gt;Rollup&lt;/li&gt;
&lt;li&gt;Webpack&lt;/li&gt;
&lt;li&gt;esbuild&lt;/li&gt;
&lt;li&gt;Vite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Task Runners
&lt;ul&gt;
&lt;li&gt;npm scripts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linters and Formatters
&lt;ul&gt;
&lt;li&gt;Prettier&lt;/li&gt;
&lt;li&gt;ESLint&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test
&lt;ul&gt;
&lt;li&gt;Vitest&lt;/li&gt;
&lt;li&gt;Jest&lt;/li&gt;
&lt;li&gt;Playwirte&lt;/li&gt;
&lt;li&gt;Cypress&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Authentication Strategies
&lt;ul&gt;
&lt;li&gt;JWT&lt;/li&gt;
&lt;li&gt;OAuth&lt;/li&gt;
&lt;li&gt;SSO&lt;/li&gt;
&lt;li&gt;Basic Auth&lt;/li&gt;
&lt;li&gt;Session Auth&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web Security Basics
&lt;ul&gt;
&lt;li&gt;CORS&lt;/li&gt;
&lt;li&gt;HTTPS&lt;/li&gt;
&lt;li&gt;CSP&lt;/li&gt;
&lt;li&gt;OWASP Security Risks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web Components
&lt;ul&gt;
&lt;li&gt;HTML Templates&lt;/li&gt;
&lt;li&gt;Custom Elements&lt;/li&gt;
&lt;li&gt;Shadow DOM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Type Checkers
&lt;ul&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server Side Rendering(SSR)
&lt;ul&gt;
&lt;li&gt;Svelte
&lt;ul&gt;
&lt;li&gt;Svelte Kit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vue.js
&lt;ul&gt;
&lt;li&gt;Nuxt.js&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Angular
&lt;ul&gt;
&lt;li&gt;Universal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;React
&lt;ul&gt;
&lt;li&gt;Next.js&lt;/li&gt;
&lt;li&gt;Remix&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GraphQL
&lt;ul&gt;
&lt;li&gt;Apollo&lt;/li&gt;
&lt;li&gt;Relay Modern&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Static Site Generators
&lt;ul&gt;
&lt;li&gt;Vuepress&lt;/li&gt;
&lt;li&gt;Jekyll&lt;/li&gt;
&lt;li&gt;Hugo&lt;/li&gt;
&lt;li&gt;Nuxt.js&lt;/li&gt;
&lt;li&gt;Astro&lt;/li&gt;
&lt;li&gt;Eleventy&lt;/li&gt;
&lt;li&gt;Next.js&lt;/li&gt;
&lt;li&gt;Remix&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Progressive Web App&lt;/li&gt;
&lt;li&gt;Mobel Applications
&lt;ul&gt;
&lt;li&gt;React Native&lt;/li&gt;
&lt;li&gt;Flutter&lt;/li&gt;
&lt;li&gt;Ionic&lt;/li&gt;
&lt;li&gt;NativeScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Desktop Applications&lt;/li&gt;
&lt;li&gt;Bonus Content&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>React入门：初始化应用的两种方法</title>
      <link>https://blog.chensoul.cc/posts/2023/09/22/react-create-project/</link>
      <pubDate>Fri, 22 Sep 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/09/22/react-create-project/</guid>
      <description>&lt;p&gt;在 React 中，您可以使用多种方法来初始化一个应用程序。以下是几种常见的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 Create React App（CRA）。Create React App 是一个官方提供的脚手架工具，用于快速创建 React 应用程序的基本结构和配置。&lt;/li&gt;
&lt;li&gt;使用 Vite。Vite 是一个快速、简单且现代化的前端构建工具。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-react-app&#34;&gt;create-react-app&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;create-react-app&lt;/code&gt; 是一个用于快速创建 React 应用程序的命令行工具。它提供了一个简单的方式来设置和配置一个全新的 React 项目，包括构建、开发服务器和其他常见的配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]为恐龙解释现代CSS</title>
      <link>https://blog.chensoul.cc/posts/2023/06/21/modern-css-explained-for-dinosaurs/</link>
      <pubDate>Wed, 21 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/21/modern-css-explained-for-dinosaurs/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://peterxjang.com/img/1__kXsiGLMHSS4jUx4W6yBOlw.png&#34; alt=&#34;Dinosaur comic panel 1&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;奇怪的是，CSS 被认为是作为 Web 开发人员最容易学习和最难学习的语言之一。开始使用它当然很容易 - 您可以定义样式属性和值以应用于特定元素，然后&amp;hellip;&amp;hellip;这几乎就是您开始所需的一切！但是，对于大型项目，以有意义的方式组织 CSS 会变得纠结和复杂。更改任何一行 CSS 以设置一个页面上元素的样式通常会导致其他页面上的元素发生意外更改。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]为恐龙解释现代HTML</title>
      <link>https://blog.chensoul.cc/posts/2023/06/20/modern-html-explained-for-dinosaurs/</link>
      <pubDate>Tue, 20 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/20/modern-html-explained-for-dinosaurs/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://peterxjang.com/img/1__EEHKg3z__FAk0ipZDFuWKcw.png&#34; alt=&#34;Dinosaur comic panel 1&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;在三种主要的前端技术（ HTML，CSS 和 JavaScript ）中，HTML 仍然是最一致的。如果您唯一关心的是创建内容，那么 1990 年代的 HTML 文档看起来与 2018 年创建的文档非常相似：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;My test page&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hello there!&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;你有带有标签和内容的元素，带有属性的标签——除了第一行的简化文档类型外，没有太大变化！然而，多年来，Web 开发已经发生了巨大的转变，从创建静态网站（专注于内容）到创建动态 Web 应用程序（专注于交互）——这是 Web 最初设计的目的。创建仍然语义和可访问的自定义用户界面，使用属性和工具提高性能，组织代码以进行重用和可维护性 - 现在有一组全新的问题在起作用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]为恐龙解释现代JavaScript</title>
      <link>https://blog.chensoul.cc/posts/2023/06/19/modern-javascript-explained-for-dinosaurs/</link>
      <pubDate>Mon, 19 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/19/modern-javascript-explained-for-dinosaurs/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://peterxjang.com/img/1__H8PH__HaV43gZyBJz0mJHxA.png&#34; alt=&#34;Images from Dinosaur Comics by Ryan North&#34;  /&gt;
&lt;/p&gt;
&lt;center&gt;图片来自Ryan North的Dinosaur Comics。&lt;/center&gt;
&lt;p&gt;如果你从一开始就没有去过那里，那么学习现代 JavaScript 是很困难的。生态系统的发展和变化如此之快，以至于很难理解不同工具试图解决的问题。我从 1998 年开始编程，但直到 2014 年才开始认真学习 JavaScript。当时我记得遇到 &lt;a href=&#34;http://browserify.org/&#34; target=&#34;_blank&#34;&gt;Browserify&lt;/a&gt; 并盯着它的标语：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
