<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Architecture on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/architecture/</link>
    <description>Recent content in Architecture on ChenSoul</description>
    <generator>Hugo -- 0.134.3</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 14 Dec 2023 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[译]《Grokking the System Design Interview》设计Twitter</title>
      <link>https://blog.chensoul.cc/posts/2023/12/14/designing-twitter/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/12/14/designing-twitter/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing Twitter》设计 Twitter。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s design a Twitter-like social networking service. Users of the service will be able to post tweets, follow other people, and favorite tweets. Difficulty Level: Medium&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我们设计一个类似 Twitter 的社交网络服务。该服务的用户将能够发布推文、关注其他人以及喜欢的推文。难度级别：中等&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何设计一个分布式ID生成器保证ID按时间有序？</title>
      <link>https://blog.chensoul.cc/posts/2023/12/05/distributed-id-generator/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/12/05/distributed-id-generator/</guid>
      <description>&lt;p&gt;很多业务有生成唯一 ID 并作为数据库主键的需求。数据库会在这个字段上建立聚集索引（参考 MySQL InnoDB），即该字段会影响各条数据再物理存储上的顺序。&lt;/p&gt;
&lt;p&gt;ID还要尽可能&lt;strong&gt;短&lt;/strong&gt;，节省内存，让数据库索引效率更高。基本上64位整数能够满足绝大多数的场景，但是如果能做到比64位更短那就更好了。需要根据具体业务进行分析，预估出ID的最大值，这个最大值通常比64位整数的上限小很多，于是我们可以用更少的bit表示这个ID。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》设计Dropbox</title>
      <link>https://blog.chensoul.cc/posts/2023/11/24/designing-dropbox/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/24/designing-dropbox/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing Dropbox》设计 Dropbox。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s design a file hosting service like Dropbox or Google Drive. Cloud file storage enables users to store their data on remote servers. Usually, these servers are maintained by cloud storage providers and made available to users over a network (typically through the Internet). Users pay for their cloud data storage on a monthly basis. Similar Services: OneDrive, Google Drive Difficulty Level: Medium&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》设计Facebook Messenger</title>
      <link>https://blog.chensoul.cc/posts/2023/11/24/designing-facebook-messenger/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/24/designing-facebook-messenger/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing Facebook Messenger》设计 Facebook Messenger。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s design an instant messaging service like Facebook Messenger where users can send text messages to each other through web and mobile interfaces.
让我们设计一个像 Facebook Messenger 这样的即时消息服务，用户可以通过网络和移动界面互相发送短信。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》设计Instagram</title>
      <link>https://blog.chensoul.cc/posts/2023/11/24/designing-instagram/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/24/designing-instagram/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing Instagram》设计 Instagram。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s design a photo-sharing service like Instagram, where users can upload photos to share them with other users. Similar Services: Flickr, Picasa Difficulty Level: Medium&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我们设计一个像 Instagram 这样的照片共享服务，用户可以上传照片与其他用户共享。类似服务：Flickr、Picasa 难度级别：中&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》设计Pastebin</title>
      <link>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing Pastebin》设计 Pastebin。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s design a Pastebin like web service, where users can store plain text. Users of the service will enter a piece of text and get a randomly generated URL to access it. Similar Services: pastebin.com, pasted.co, chopapp.com Difficulty Level: Easy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我们设计一个类似 Pastebin 的 Web 服务，用户可以在其中存储纯文本。该服务的用户将输入一段文本并获得一个随机生成的 URL 来访问它。类似服务：pastebin.com、pasted.co、hopapp.com 难度级别：简单&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》域名系统</title>
      <link>https://blog.chensoul.cc/posts/2023/11/17/dns/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/17/dns/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href=&#34;https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/introduction-to-domain-name-system-dns&#34; target=&#34;_blank&#34;&gt;Domain Name System&lt;/a&gt; 这篇章节。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;introduction-to-domain-name-system-dns&#34;&gt;Introduction to Domain Name System (DNS)&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;域名系统 (DNS) 简介&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;the-origins-of-dns&#34;&gt;The origins of DNS&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;DNS 的起源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s consider the example of a mobile phone where a unique number is associated with each user. To make calls to friends, we can initially try to memorize some of the phone numbers. However, as the number of contacts grows, we’ll have to use a phone book to keep track of all our contacts. This way, whenever we need to make a call, we’ll refer to the phone book and dial the number we need.&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何设计一个短网址服务</title>
      <link>https://blog.chensoul.cc/posts/2023/11/17/designing-a-url-shortening-service/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/17/designing-a-url-shortening-service/</guid>
      <description>&lt;p&gt;如何生成一个短网址服务，参考 &lt;a href=&#34;https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/system-design-tinyurl&#34; target=&#34;_blank&#34;&gt;Design a URL Shortening Service / TinyURL&lt;/a&gt; 和 &lt;a href=&#34;https://www.designgurus.io/course-play/grokking-the-system-design-interview/doc/638c0b5dac93e7ae59a1af6b&#34; target=&#34;_blank&#34;&gt;Designing a URL Shortening service like TinyURL&lt;/a&gt; 两篇文章，整理如下笔记。&lt;/p&gt;
&lt;p&gt;其中主要包括以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计一个系统有哪些步骤
&lt;ul&gt;
&lt;li&gt;需求&lt;/li&gt;
&lt;li&gt;预估&lt;/li&gt;
&lt;li&gt;设计
&lt;ul&gt;
&lt;li&gt;高层次设计&lt;/li&gt;
&lt;li&gt;API 设计&lt;/li&gt;
&lt;li&gt;细节设计&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;评估&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设计一个短网址服务的细节&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设计步骤&#34;&gt;设计步骤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Requirements 需求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能性需求
&lt;ul&gt;
&lt;li&gt;短 URL 生成：我们的服务应该能够为给定 URL 生成唯一的较短别名。&lt;/li&gt;
&lt;li&gt;重定向：给定一个短链接，我们的系统应该能够将用户重定向到原始 URL。&lt;/li&gt;
&lt;li&gt;自定义短链接：用户应该能够使用我们的系统为其 URL 生成自定义短链接。&lt;/li&gt;
&lt;li&gt;删除：在赋予权限的情况下，用户应该能够删除我们系统生成的短链接。&lt;/li&gt;
&lt;li&gt;更新：如果有适当的权限，用户应该能够更新与短链接关联的长 URL。&lt;/li&gt;
&lt;li&gt;过期时间：短链接必须有一个默认的过期时间，但用户应该可以根据自己的需求设置过期时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分功能性需求：可用性、可靠性、扩展性、可维护性、容错性
&lt;ul&gt;
&lt;li&gt;可用性：我们的系统应该具有高可用性，因为即使是第二次停机的一小部分也会导致 URL 重定向失败。由于我们系统的域位于 URL 中，因此我们没有停机时间的优势，并且我们的设计必须灌输容错条件。&lt;/li&gt;
&lt;li&gt;可扩展性：我们的系统应该能够随着需求的增加而水平扩展。&lt;/li&gt;
&lt;li&gt;可读性：我们的系统生成的短链接应该易于阅读、区分和输入。&lt;/li&gt;
&lt;li&gt;延迟：系统应以低延迟执行，以便为用户提供流畅的体验。&lt;/li&gt;
&lt;li&gt;不可预测性：从安全角度来看，我们的系统生成的短链接应该是高度不可预测的。这确保了下一个短 URL 不会连续生成，从而消除了有人猜测我们的系统已经生成或将生成的所有短 URL 的可能性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estimation 估计&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》系统设计主模板</title>
      <link>https://blog.chensoul.cc/posts/2023/11/16/system-design-master-template/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/16/system-design-master-template/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href=&#34;https://www.designgurus.io/course-play/grokking-the-system-design-interview/doc/645d5161fff33a24ccce4bb1&#34; target=&#34;_blank&#34;&gt;System Design Master Template&lt;/a&gt; 这篇章节。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;System design interviews are unstructured by design. In these interviews, you are asked to take on an open-ended design problem that doesn’t have a standard solution.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系统设计面试在设计上是非结构化的。在这些面试中，您被要求解决一个没有标准解决方案的开放式设计问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》系统设计访谈：分步指南</title>
      <link>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《System Design Interviews: A step by step guide》系统设计访谈：分步指南。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A lot of software engineers struggle with system design interviews (SDIs) primarily because of three reasons:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;许多软件工程师在系统设计面试（SDI）中遇到困难，主要是因为以下三个原因：&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》设计类似 TinyURL 的 URL 缩短服务</title>
      <link>https://blog.chensoul.cc/posts/2023/11/16/designing-a-url-shortening-service/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/16/designing-a-url-shortening-service/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing a URL Shortening service like TinyURL》设计类似 TinyURL 的 URL 缩短服务。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let’s design a URL shortening service like TinyURL. This service will provide short aliases redirecting to long URLs. Similar services: bit.ly, goo.gl, qlink.me, etc.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我们设计一个像 TinyURL 这样的 URL 缩短服务。该服务将提供重定向到长 URL 的短别名。类似服务：bit.ly、goo.gl、qlink.me等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何成为一名合格的架构师</title>
      <link>https://blog.chensoul.cc/posts/2023/08/21/architecture/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/21/architecture/</guid>
      <description>&lt;h2 id=&#34;如何成为一名合格的架构师&#34;&gt;如何成为一名合格的架构师&lt;/h2&gt;
&lt;p&gt;成为一名合格的架构师需要不断学习和积累经验。以下是一些步骤和建议，可以帮助你成为一名合格的架构师：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;学习基础知识：建立坚实的计算机科学和软件工程基础，包括数据结构、算法、操作系统、数据库等。深入学习编程语言和开发技术，了解不同技术栈的优缺点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用户故事如何应用到个人管理</title>
      <link>https://blog.chensoul.cc/posts/2023/08/21/user-stories-in-self-manager/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/21/user-stories-in-self-manager/</guid>
      <description>&lt;p&gt;用户故事（User Stories）是敏捷软件开发中的一种需求表达方式，用于描述用户的需求、期望和价值。尽管用户故事主要应用于软件开发团队，但其原则和方法也可以应用到个人管理中，以帮助个人更好地管理自己的任务和目标。&lt;/p&gt;</description>
    </item>
    <item>
      <title>软件开发流程和常用开发方法</title>
      <link>https://blog.chensoul.cc/posts/2023/08/21/the-software-development-process/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/21/the-software-development-process/</guid>
      <description>&lt;p&gt;软件开发流程和常用开发方法，如敏捷开发和 DevOps，对于架构师来说非常重要。下面我将简要介绍这些概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;软件开发流程：&lt;/p&gt;
&lt;p&gt;软件开发流程是指在开发软件时，按照一定的步骤和阶段进行工作的过程。常见的软件开发流程包括瀑布模型、迭代模型和增量模型等。这些流程以不同的方式组织和管理开发过程，包括需求分析、设计、编码、测试和部署等阶段。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
