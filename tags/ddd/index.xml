<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ddd on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/ddd/</link>
    <description>Recent content in Ddd on ChenSoul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 05 Aug 2024 08:00:00 +0800</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/ddd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[译]领域驱动设计速成课程</title>
      <link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-domain-driven-design/</link>
      <pubDate>Mon, 05 Aug 2024 08:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-domain-driven-design/</guid>
      <description>原文链接：https://blog.bytebytego.com/p/a-crash-course-on-domain-driven-design
为复杂领域开发软件是一项具有挑战性的任务。
随着问题领域的复杂性不断增长，创建准确表示业务概念、规则和流程的软件变得越来越困难。设计不良的软件很快就会变成难以理解、难以维护和扩展的混乱代码。
领域驱动设计（DDD）为这个问题提供了解决方案。
DDD 是 …</description>
    </item>
    
    <item>
      <title>[译]使用 Spring Boot 构建 RESTful API：集成 DDD 和六边形架构</title>
      <link>https://blog.chensoul.cc/posts/2024/05/30/building-a-restful-api-with-spring-boot-integrating-ddd-and-hexagonal-architecture/</link>
      <pubDate>Thu, 30 May 2024 08:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.cc/posts/2024/05/30/building-a-restful-api-with-spring-boot-integrating-ddd-and-hexagonal-architecture/</guid>
      <description>原文链接：Building a RESTful API with Spring Boot: Integrating DDD and Hexagonal Architecture
介绍 在快节奏的软件开发世界中，API 扮演着至关重要的角色，可以有效地促进不同系统之间的交互和数据交换。API 创建最突出的技术之一是 Spring Boot，它是一种强大的工具，可以简化 Java 应用程序的开发，使开 …</description>
    </item>
    
    <item>
      <title>[译]如何组织代码</title>
      <link>https://blog.chensoul.cc/posts/2024/05/30/how-to-structure-our-code/</link>
      <pubDate>Thu, 30 May 2024 08:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.cc/posts/2024/05/30/how-to-structure-our-code/</guid>
      <description>原文链接：How to Structure Code
软件设计最佳实践，逐层发现包、按功能发现包以及六角形架构/端口和适配器。
在这篇博文中，我将探讨如何构建我们的代码并讨论最佳实践，涵盖三种不同的方法：按层打包、按功能打包以及六边形架构/端口和适配器及其优缺点。
在探索构建代码的不同方法之前，我们需要了解基本的软件设计原则：
内聚力：指模块内各类之间的相互关联程度。 耦合度：指不同模块之间的依赖 …</description>
    </item>
    
  </channel>
</rss>
