<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Git on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/git/</link>
    <description>Recent content in Git on ChenSoul</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 15 Jul 2024 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git介绍</title>
      <link>https://blog.chensoul.cc/posts/2024/07/15/git/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/15/git/</guid>
      <description>Git、Github、Gitlab 的区别 Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 Github是在线的</description>
    </item>
    <item>
      <title>Git使用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/15/git/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/15/git/</guid>
      <description>部署Git 服务 创建git仓库 git-server上的操作： 1 2 3 4 5 6 7 8 [root@localhost ~]# yum install git git-core gitweb -y [root@localhost ~]# useradd git [root@localhost ~]# passwd git [root@localhost ~]# mkdir /git-root/ [root@localhost ~]# cd /git-root/ [root@localhost git-root]# git init --bare shell.git Initialized empty Git repository in /git-root/shell.git/ [root@localhost git-root]# chown -R git:git shell.git 注意： git init 和 git init &amp;ndash;bare 的区别: 使用&amp;ndash</description>
    </item>
    <item>
      <title>2024-01-25｜Idea和zsh快捷键</title>
      <link>https://blog.chensoul.cc/posts/2024/01/25/til/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/01/25/til/</guid>
      <description>今天做了什么： 整理 Idea 快捷键 整理 zsh 中定义的常用的快捷键 Idea 快捷键 使用快捷键 command +1 打开 Project 窗口 输入 control + R 可以运行 Java 代码 上下文 在 for 方法上，输入 option + enter，可以调出上下文，替换 for 表达式 在字符串上面输入 option + ent</description>
    </item>
    <item>
      <title>[译]DevOps 和测试人员的 Git 面试问题</title>
      <link>https://blog.chensoul.cc/posts/2023/10/12/git-interview-questions/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/10/12/git-interview-questions/</guid>
      <description>欢迎来到 Git 面试准备指南，我们将在这里向初学者和经验丰富的专业人士讨论最常见的 Git 面试问题。无论您是准备参加 DevOps 或测试面试，还是希望提高 Git 技能，此资源都可以通过深入研究一些与 Git 基本概念和实践相关的最常见面试</description>
    </item>
    <item>
      <title>Git Flow分支模型和使用</title>
      <link>https://blog.chensoul.cc/posts/2023/05/11/git-flow-model-and-usage/</link>
      <pubDate>Thu, 11 May 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/05/11/git-flow-model-and-usage/</guid>
      <description>介绍 Git Flow 是由 Vincent Driessen 在 2010 年提出的一种 Git 工作流。在这之前，Git 没有一个明确的标准工作流，导致团队在使用 Git 时往往会遇到一些问题，如分支管理、版本控制等。为了解决这些问题，Vincent Driessen 提出了 Git Flow 分支模型，</description>
    </item>
  </channel>
</rss>
