<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>github on ChenSoul</title>
    <link>https://blog.chensoul.com/tags/github/</link>
    <description>Recent content in github on ChenSoul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 Feb 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://blog.chensoul.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>周报-8｜内存泄漏、公司裁员、练车</title>
      <link>https://blog.chensoul.com/posts/2023/02/27/weekly_review_8/</link>
      <pubDate>Mon, 27 Feb 2023 08:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/02/27/weekly_review_8/</guid>
      <description>前言 本篇是对 2023-02-20 到 2023-02-26 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这篇周报又是在地铁上完成编写的。回顾这一周的工作</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-20</code> 到 <code>2023-02-26</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这篇周报又是在地铁上完成编写的。回顾这一周的工作，还是项目测试、修复 bug 和准备上线发布。平静的工作节奏因为突如其来的裁员消息而变得内卷起来，大家下班的时间都纷纷往后移到了20 点左右。周末的时候，还是练车，从汉口开车到新洲。刚开始有点不敢，后来还是鼓起勇气，平安的到达。</p>
<h2 id="工作">工作</h2>
<h3 id="内存泄漏">内存泄漏</h3>
<p>这周线上环境，出现了告警，提示 jvm 出现了 full gc。于是赶紧 dump 内存进行分析查找原因。顺便整理了内存相关的知识。</p>
<p><strong>什么是内存泄漏？</strong></p>
<p>这个问题直接问 chatgpt：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-08-01.png" alt="weekly-review-08-01"  />
</p>
<p>内存泄漏（Memory Leak）是指在程序中动态分配的内存由于某些原因程序未能释放或无法释放，导致系统内存的实际可用空间不断减少的现象。内存泄漏的发生会导致程序占用的内存越来越多，最终导致程序崩溃或系统变慢。</p>
<p>在Java中，程序员通常使用new运算符在堆上分配内存，这些内存不再使用时必须释放，否则就会出现内存泄漏。下面是一些常见的Java内存泄漏的情况：</p>
<ol>
<li>对象持有过多的引用</li>
</ol>
<p>当一个对象持有其他对象的引用时，这些对象就不能被垃圾收集器回收，导致内存泄漏。比如，一个静态集合（如Map、List）持有了大量对象的引用，但是这些对象已经不再需要了，却因为集合中仍然持有这些对象的引用，导致这些对象无法被回收，造成内存泄漏。</p>
<ol start="2">
<li>长时间持有对象锁</li>
</ol>
<p>在Java中，如果一个线程获取了一个对象的锁，但是在释放锁之前发生了异常，那么这个锁就不会被释放，从而导致内存泄漏。这种情况特别容易发生在synchronized块中。</p>
<ol start="3">
<li>不正确的缓存使用</li>
</ol>
<p>如果程序员不正确地使用缓存，就会导致内存泄漏。比如，如果使用一个静态Map来缓存对象，但是不从Map中删除对象，那么这些对象就会一直存在于内存中，造成内存泄漏。</p>
<ol start="4">
<li>大量创建临时对象</li>
</ol>
<p>如果程序频繁地创建临时对象，而这些对象又没有被及时清除，就会导致内存泄漏。比如，在循环中创建大量的字符串对象，但是没有及时清除，就会导致内存泄漏。</p>
<p>为了避免内存泄漏，Java程序员可以使用一些技术来优化程序，比如使用缓存池、避免使用不必要的静态变量、使用finalize()方法释放资源等等。</p>
<p><strong>如何排查内存泄漏？</strong></p>
<ul>
<li>
<p>内存分析工具：内存分析工具可以帮助您找到哪些对象占用了大量的内存。一些常用的内存分析工具包括：Eclipse MAT、VisualVM 和 YourKit。这些工具可以帮助您分析内存快照、查找内存泄漏并确定导致内存泄漏的代码位置。</p>
</li>
<li>
<p>堆转储文件：堆转储文件是一个包含了 JVM 堆中所有对象的快照。您可以使用以下命令生成一个堆转储文件：jmap -dump:format=b,file=heap.bin <PID>，其中<PID>是您的 Java 应用程序的进程 ID。然后，您可以使用内存分析工具来分析该文件。</p>
</li>
<li>
<p>代码审查：在编写代码时，您可以使用一些技巧来避免内存泄漏。例如，您应该确保正确地关闭流和数据库连接，避免在循环中创建对象，以及使用软引用或弱引用来存储缓存数据等。通过仔细审查代码并识别可能导致内存泄漏的部分，可以避免这些问题在运行时发生。</p>
</li>
<li>
<p>监视工具：JVM 提供了一些监视工具，例如 jstat 和 jconsole，可以用于监视 JVM 的内存使用情况。通过监视这些指标，您可以识别是否存在内存泄漏的迹象。</p>
</li>
<li>
<p>代码注入：在您的应用程序中，您可以注入一些代码，例如使用 JMX、AOP 等，以便您可以实时监视内存使用情况，并记录任何内存泄漏迹象。</p>
</li>
</ul>
<p>参考文章</p>
<ul>
<li>
<p><a href="https://www.cnblogs.com/rude3knife/p/13570423.html">一次完整的JVM堆外内存泄漏故障排查记录</a></p>
</li>
<li>
<p><a href="https://droidyue.com/blog/2015/11/28/article-java-8-lambdas-a-peek-under-the-hood">深入探索Java 8 Lambda表达式</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/weixin_34722015/article/details/114815917">java lambda表达式内存泄露_浅谈Java内存泄露</a></p>
</li>
</ul>
<h3 id="裁员">裁员</h3>
<p>去年公司就在裁员，陆陆续续裁了几次，每次都是裁两三个，动作都不大，但是很高效。因为部门人数就在五十左右，所以谁没来上班，都能很快察觉。</p>
<p>公司要在六月份上市，上市之前要使财报好看，就要开源节流、降本增效。节约成本的一个方式就是裁员，据说这次裁员动作比以前都大都迅速，今天提出裁员人数，明天就要给出名单，月底就要走人。</p>
<p>现在还只是二月份，离六月还有三个月。谁也不知道，后面还会有什么更大的裁员动作。说不定哪天就空出一个工位，说不定哪天领导就换了人，说不定哪天部门就被拆散了。</p>
<p>互联网公司最大的变化就是变化。之前在阿里工作，公司的价值观里有一条就是拥抱变化。</p>
<p>拥抱变化的最好方式就是积极面对，主动加班，提高工作效率，增加工作产出。</p>
<h2 id="生活">生活</h2>
<h3 id="练车">练车</h3>
<p>这是买车之后的第二周，还是没有开车去上班。一是因为开车不过熟练，胆子小，不敢开得太快；二是公司楼下的停车位还没有办好。</p>
<p>周六本想叫朋友过来给我当陪练，后来因为要回新洲，就算了，还是自己开车，带着老婆回新洲。</p>
<p>老婆科目一考过了，后面因为工作原因就没去练车和考试。她坐副驾驶，一边剥豆子一边提醒我注意交通规则。</p>
<p>在老婆的坐镇之下，顺利的从汉口开车六十公里到达新洲，路上没有违反交通规则。</p>
<p>周六下午去看了一下潘塘花朝节，有点失望，没有想象中的热闹。可能因为这不是正宗的花朝节，正宗的应该是在旧街。</p>
<p>逛了一圈，买了两百菜刀、一个砧板、两颗果树、一盆墨兰花。</p>
<p>周六从新洲开回阳逻，周日又从阳逻开回老家去看父亲。买车后第一次回家，放了鞭炮🧨。</p>
<p>中午包饺子，吃完饭就去菜园收割青菜。农村对于城市里上班族来说，一大好处是，每次回家，都可以装满青菜带回城市。</p>
<p>下午，从老家驱车回阳逻再到汉口。在开车的过程中，发现和总结了一些问题。</p>
<p>之前开车，总是盯着仪表盘，看车速达到了多少。车速一到 70 多就下意识地松油门和踩刹车。现在开始把眼睛注意力放到前方，不去可以在意车速，只是当导航提示我超速的时候，我白降低一点速度。</p>
<p>在红绿灯之前，如果不转弯，不要提前换道或者超车，保持中间道路行驶即可。</p>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p><a href="https://blog.baoshuo.ren/post/actions-ssl-cert/">使用 GitHub Actions 自动申请与部署 SSL 证书</a></p>
</li>
<li>
<p><a href="https://phind.com/">The AI search engine for developers</a></p>
</li>
<li>
<p><a href="https://magickpen.com/">用 AI 写文章</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/weixin_34722015/article/details/114815917">java lambda表达式内存泄露_浅谈Java内存泄露</a></p>
</li>
<li>
<p><a href="https://kenengba.com/post/3769.html">在家躺着拿工资，是挺过意不去的</a></p>
</li>
<li>
<p><a href="https://blog.mikeoperfect.com/posts/11517/">车辆违章和交通事故处理流程</a></p>
</li>
<li>
<p><a href="https://blog.alswl.com/2020/03/before-code-review/">浅谈 Code Review 之事前准备</a></p>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<h4 id="1raycasthttpswwwraycastcom">1、<a href="https://www.raycast.com/">Raycast</a></h4>
<p>Raycast是一款想要取代 Spotlight 的快捷启动器，通过 Mac 上面的一些组合键来为让你完成在 Mac 上面的快捷启动，提高你日常当中在 Mac 上面的操作效率，如果以 macOS 系统版本风格来比喻的话，Alfred 的 UI 风格应该能匹配几年前的 macOS 吧，而 Raycast 却是能够驾驭 macOS Big Sur 全新的视觉风格。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-08-02.png" alt="weekly-review-08-02"  />
</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-7｜练车、博客优化、注册ChatGPT账号</title>
      <link>https://blog.chensoul.com/posts/2023/02/21/weekly_review_7/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/02/21/weekly_review_7/</guid>
      <description>前言 本篇是对 2023-02-13 到 2023-02-19 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 练车 这周末开始练车，周六是第一次开自己的车，简单</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-13</code> 到 <code>2023-02-19</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<h2 id="练车">练车</h2>
<p>这周末开始练车，周六是第一次开自己的车，简单试驾了一样；周日则开了一百多公里，具体行程是从阳逻到新洲，从新洲单汉口，从汉口到光谷，从光谷回汉口。</p>
<p>这途中走了江北快速公路、二环、二七长江大桥、东湖隧道，从白天开到晚上夜行，经历过堵车，路上看到车祸后的事故现场。</p>
<p>一天下来，总共开车有五个多小时，感觉开车好累。作为新手，开车的过程中要全神贯注，铭记开车最重要的是慢这一原则，速度不敢过快。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-06.webp" alt="weekly-review-06"  />
</p>
<p>回顾这一天的练车过程，发现自己存在以下问题：</p>
<ul>
<li>
<p>对汽车不熟悉，不清楚车内每个按钮有什么作用。</p>
</li>
<li>
<p>不敢开的太快，油门踩到六十公里之后，就下意识地松油门。整个行驶过程中，平均车速大概在二十多公里每小时。</p>
</li>
<li>
<p>对交规不熟悉，第一次用高德地图，不知道什么时候改该变道、什么时候该走中间道路。要变道时候，不够果敢，打了灯光之后，没有快速变道，甚至还降速，等后面车子，而后面车子也在等我。</p>
</li>
<li>
<p>对车距不敏感。行驶过程中，和左右车辆相隔距离多近，没有一个直观的感受。观察后视镜，后面车距多远，有时候也判断不准，导致自己变道犹豫不决，险些擦碰。</p>
</li>
<li>
<p>变道、转弯，有时候忘记打灯。转弯时候，方向盘动得太早，没有等车过斑马线再打方向盘。左转弯时候，没有转大弯，导致车子有一次擦到了左边的石墩子，幸好不是很严重。</p>
</li>
<li>
<p>倒车和侧方停车不够熟练。</p>
</li>
<li>
<p>对上班路线不熟悉，不知道怎么进入公司楼下停车场。</p>
</li>
</ul>
<p>基于以上表现，接下来一周还是坐地铁上班。目前来说还是更喜欢坐地铁上班，可以看视频听音频，可以查看 RSS   订阅文章，可以写周报，可以闭目养神。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-07.png" alt="weekly-review-07"  />
</p>
<p>老婆给我买的实习期贴牌到了，后面司机看到这么可爱的牌子，估计以为是个妹子在开车吧，应该会喇叭下留情了吧😄。</p>
<p>接下来的周末，还要继续练车，和车子培养感情，从内到外熟悉车子，熟悉上班路线和交通规则，提高行驶速度。加油💪🏻！</p>
<h2 id="博客优化">博客优化</h2>
<p>这周重新对博客进行了优化，主要包括以下几个方面：</p>
<h3 id="1优化页面加载速度">1、优化页面加载速度</h3>
<p>每次打开博客首页，感觉页面加载有点慢，故想加快博客打开速度，第一个想到的是减少博客加载资源的次数，也就是去掉一些飞必须的 css 和 javascript 引用；其次，是对 css 进行压缩。</p>
<ul>
<li>去掉对 font-awesome css 的引用。这个对博客来说可有可无，所以直接去掉。</li>
<li>去掉对 jquery、bootstrap js 的引用。同样也不是必须的，自定义的 javascript 直接使用原生的操作就行。</li>
<li>移除未使用的 css。想参考这篇文章 <a href="https://dujun.io/cleancss-remove-unused-css.html">CleanCSS - 移除未使用的 CSS 代码</a>，对 css 进行瘦身，无奈文章中的服务器出现故障，无法访问服务。故，暂时搁浅。</li>
</ul>
<h3 id="2修改网站字体">2、修改网站字体</h3>
<p>参考这篇文章 <a href="https://www.albertaz.com/blog/web-font-best-practice">字体漫谈-网站字体最佳实践</a> 引入 open-sans 字体：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;preload&#34;</span> <span class="na">as</span><span class="o">=</span><span class="s">&#34;font&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;font/woff2&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;/css/font/open-sans.css&#34;</span> <span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span>  <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;/css/font/open-sans.css&#34;</span>  <span class="na">media</span><span class="o">=</span><span class="s">&#34;print&#34;</span> <span class="na">onload</span><span class="o">=</span><span class="s">&#34;this.media=&#39;all&#39;&#34;</span> <span class="p">/&gt;</span>
</span></span></code></pre></div><p>并修改网站 font-family 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="nt">body</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-family</span><span class="p">:</span> <span class="n">Open</span> <span class="n">Sans</span><span class="p">,</span><span class="n">system-ui</span><span class="p">,</span><span class="o">-</span><span class="n">apple-system</span><span class="p">,</span><span class="n">Arial</span><span class="p">,</span><span class="kc">sans-serif</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">word-break</span><span class="p">:</span> <span class="kc">break-word</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="3修改关于页面内容">3、修改关于页面内容</h3>
<p>参考这篇文章 <a href="https://rahuldkjain.github.io/gh-profile-readme-generator/">GitHub Profile README Generator</a>，对 GitHub <a href="https://github.com/chensoul/chensoul">首页</a> 进行改造，并通过 GitHub Action 同步到博客的 <a href="https://blog.chensoul.com/about/">关于</a> 页面。</p>
<h3 id="4dns-解析迁移到-cloudflare">4、dns 解析迁移到 cloudflare</h3>
<p>将 dns 解析从 AWS 迁移到 cloudflare，并开启 CDN 缓存。</p>
<h3 id="5博客测速">5、博客测速</h3>
<p>以上优化完成之后，在 <a href="https://pagespeed.web.dev/">PageSpeed Insights</a> 网站上对博客首页加载速度进行了测速。移动端测试结果为 93 分，如下图：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-01.png" alt="weekly-review-07-01"  />
</p>
<p>影响评分的原因在于：</p>
<ul>
<li>First Contentful Paint (3G)</li>
<li>加载的 <a href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">bootstrap.min.css</a> 文件过大，包括了一些未使用的 CSS</li>
</ul>
<p>桌面端测试结果评分为 99 分：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-02.png" alt="weekly-review-07-02"  />
</p>
<p>另外，试了一下使用 chatgpt 来给出网站优化建议，回答如下：</p>
<h2 id="n8n-调整">n8n 调整</h2>
<p>新增了 3 个 workflow：</p>
<ul>
<li>
<p>定时获取 <a href="https://www.bitstamp.net/api/v2/ticker/btcusd">BTC 价格</a>，并发送到 <a href="https://t.me/chensoul_share">我的电报群组</a></p>
</li>
<li>
<p>定时获取 spotify 喜欢列表，并发送到电报和 memos</p>
</li>
<li>
<p>每天早上 7 点，发送天气预报给微信</p>
</li>
</ul>
<p>修改了以下 workflow：</p>
<ul>
<li>将豆瓣最近动态同步到电报群组以及 <a href="https://memos.chensoul.com/">memos</a></li>
<li>将 GitHub 最近动态同步到电报群组以及  <a href="https://memos.chensoul.com/">memos</a></li>
<li>将 <a href="https://blog.chensoul.com/index.xml">博客 RSS</a> 同步到电报群组以及  <a href="https://memos.chensoul.com/">memos</a></li>
</ul>
<p>此外，在苹果手机上添加了两个捷径：</p>
<ul>
<li><a href="https://sharecuts.cn/shortcut/12640">捷径一</a>：调用 memos API 创建 memos</li>
<li><a href="https://www.icloud.com/shortcuts/d990253f43e148469af5e85c296961cf">捷径二</a>：对网站通过 RSSBud 获取 RSS 订阅地址并发送到电报的 flowerrss 机器人进行订阅</li>
</ul>
<h2 id="chatgpt-注册账号">ChatGPT 注册账号</h2>
<p>参考 <a href="https://sms-activate.org/cn/info/ChatGPT">注册ChatGPT详细指南</a> 注册账号，我在 sms-activate 网站是购买的巴西的手机号来接验证码。</p>
<p>解决地区受限问题：在浏览器地址栏里输入 <code>javascript:</code>，然后粘贴下面代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">i</span><span class="p">=&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;@@auth0spajs&#39;</span><span class="p">)))</span>
</span></span></code></pre></div><blockquote>
<p>如果还是无效，则清理浏览器 cookie 和 session，再刷新页面。</p>
</blockquote>
<p>账号创建成功之后，创建了几个 chat：</p>
<ul>
<li>『文案小助手』：在今后的会话里，你都将扮演我的文案纠错润色助理，并综合给出优化后的版本。</li>
<li>『专业后端开发老师』：在今后的对话里，你是一个专业的后端语言开发者老师，会回答我所有关于后端开发相关的问题，尤其是 Java、Pyhon、Go 语言，同时也包括 Shell 脚本、Makefile、Docker、K8S 等运维部署相关的疑问，每次都会给出代码示例，不需要我再额外提醒。</li>
<li>『专业前端开发老师』：在今后的对话里，你是一个专业的前端开发者老师，会回答我所有关于前端语言开发相关的问题，尤其是 TypeScript、React、Vuejs、CSS、Html 和 Nextjs，每次都会给出代码示例，不需要我再额外提醒。</li>
<li>『个人搜索引擎』：在今后的会话里，请你扮演我的专业搜索引擎，为我搜索查阅相关问题的答案和信息，每个问题尽量给出链接和出处，不需要我额外再说明。</li>
</ul>
<p>点击 <a href="https://platform.openai.com/account/api-keys">链接</a>，可以创建应用。给飞书用户准备的 ChatGPT 机器人，参看 <a href="https://github.com/bestony/ChatGPT-Feishu">ChatGPT-Feishu</a>。</p>
<h1 id="-好物分享">💻 好物分享</h1>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p>技术类：</p>
<ul>
<li>
<p><a href="https://writings.stephenwolfram.com/2019/02/seeking-the-productive-life-some-details-of-my-personal-infrastructure/">我的个人 IT 基础设施（英文）</a></p>
</li>
<li>
<p><a href="https://arun.is/blog/desk-setup/">打造我的家庭办公环境（英文）</a></p>
</li>
<li>
<p><a href="https://www.ruanyifeng.com/blog/2022/01/weekly-issue-191.html">科技爱好者周刊（第 191 期）：一个程序员的财务独立之路</a></p>
</li>
<li>
<p><a href="https://www.zlovezl.cn/articles/programming-is-still-hard-after-14-years/">入行 14 年，我还是觉得编程很难</a></p>
</li>
<li>
<p><a href="https://www.piglei.com/articles/how-to-design-config-file-for-software/">设计服务端软件配置的 4 条建议</a></p>
</li>
</ul>
</li>
<li>
<p>非技术类：</p>
<ul>
<li>
<p><a href="https://tingtalk.me/health/">除了健康，都是小事</a></p>
</li>
<li>
<p><a href="https://tingtalk.me/driving-test/">驾考指南</a></p>
</li>
</ul>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<h4 id="1亲戚关系计算器httpspasser-bycomrelationshipvue">1、<a href="https://passer-by.com/relationship/vue/#/">亲戚关系计算器</a></h4>
<h4 id="2imageoptimhttpsimageoptimcommac">2、<a href="https://imageoptim.com/mac">ImageOptim</a></h4>
<p>开源图片压缩软件：一款 Mac 小工具，可以方便的进行图片压缩，支持多格式、批量处理。值得注意的是，它压缩之后的图片会覆盖之前的图片。使用了这个工具之后，我就把  TinyPNG4Mac 卸载了。</p>
<h4 id="3沉浸式双语网页翻译扩展--immersive-translatehttpsimmersive-translateowenyoungcom">3、<a href="https://immersive-translate.owenyoung.com/">沉浸式双语网页翻译扩展 – immersive-translate</a></h4>
<p>强烈推荐这个网页翻译插件，和其他插件翻译整个页面相比，这个插件的优势是可以同时显示双语，中英文对照非常棒，是一个 <a href="https://github.com/immersive-translate/immersive-translate">开源</a> 的项目，完全免费使用。也支持 PDF，配合任何 <a href="https://epub-reader.online/">epub 在线阅读网站</a>对照翻译阅读书也非常方便。也支持了Deepl，腾讯翻译等等的翻译服务。开发者 <a href="https://twitter.com/OwenYoungZh">@OwenYoungZh</a></p>
<h4 id="4input-source-prohttpsinputsourceprozh-cn">4、<a href="https://inputsource.pro/zh-CN">Input Source Pro</a></h4>
<p>Input Source Pro 可以根据应用或是网站自动切换输入法，并且在切换窗口的时候还会贴心的提示当前的输入法是什么，比如设置 VSCode、iTerm、Xcode 默认为英文输入法，而笔记软件和企业微信默认为中文输入法，切换软件时再也不需要按 shift 键了！</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-3｜博客定制、VPS部署服务</title>
      <link>https://blog.chensoul.com/posts/2023/01/25/weekly_review_3/</link>
      <pubDate>Wed, 25 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/25/weekly_review_3/</guid>
      <description>前言 本篇是对 2023-01-16 到 2023-01-22 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这是过年前的最后一周，上了三天班，请了两天假回去</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-16</code> 到 <code>2023-01-22</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这是过年前的最后一周，上了三天班，请了两天假回去准备年货、去亲戚家吃年饭。趁放假之前，继续对博客做了一些定制，也在我的 VPS 上通过 Docker 部署了一些服务。</p>
<h2 id="定制博客">定制博客</h2>
<p>基于 <a href="https://www.pseudoyu.com/">pseudoyu</a> 的博客和主题定制博客，发现并修复了bug，还做了一些改进，并在他的 github 提交 <a href="https://github.com/pseudoyu/pseudoyu/issues/2">issue</a> 和 merge request。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/github-issue-build-aboutme-py.png" alt="github-issue-build-aboutme-py" style="width: 80%"/>
<p>接着在他博客主页留言，几个来回下来，收获不少。一是解决了我提出的问题，二是给我分享了一个搬瓦工的 the plan 优惠码。这时候去看了下我原来的 vps 刚好还有一天要到期，就立即花了92 美元（原价是 99 美元）购买了一台 2G 内存托管在香港的服务器。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/vps-main-controlls.png" alt="vps-main-controlls"  />
</p>
<p>缘分就是这么奇妙，如果我不主动和这个博主联系，就不会知道搬瓦工还有这个优惠，就不会帮助我解决了博客定制过程中遇到的疑惑。</p>
<blockquote>
<p>当你想要什的时候，先给出去，你就会收获更。有舍才有得。</p>
</blockquote>
<h2 id="博客个人介绍">博客个人介绍</h2>
<p>我的博客源文件托管在 <a href="https://github.com/chensoul/chensoul.github.io">gihub</a>，在这个仓库可以看到我的一些个人介绍，当然，我的博客也有个人介绍（在<a href="https://blog.chensoul.com/about/">关于</a>页面），如果你仔细观察，可以发现他们基本上是一样的，这个是怎么实现的呢？</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/chensoul-github-io-readme.png" alt="chensoul-github-io-readme" style="width: 80%"/>
<p>首先，github 里面可以创建一个以 github 账号为名称的仓库，然后编辑好 README.md 文件，README.md 文件内容就会渲染成 html 显示到个人 github 主页。例如，我的 github 主页是 <a href="https://github.com/chensoul">https://github.com/chensoul</a>，我的个人仓库地址为 <a href="https://github.com/chensoul/chensoul">https://github.com/chensoul/chensoul</a>，这个仓库是通过 github actions 来构建 README.md，构建文件查看仓库的 workflows 文件，主要有两个文件：</p>
<ul>
<li>build.yml：周期性的调用 <a href="https://github.com/chensoul/chensoul/blob/main/build_readme.py">build_readme.py</a> 来生成 README.md 文件（包括：获取最近 5 篇博客文章、或者 豆瓣上最近 5 个电影书籍动态、获取 github 上发布的项目、显示 wakatime 报表）</li>
<li>waketime.yml：生成 wakatime-charts</li>
</ul>
<p>当 README.md 生成之后，只需要将该文件内容同步到博客的 about.md 文件即可。怎么实现呢？参考博客源文件里的 <a href="https://github.com/chensoul/chensoul.github.io/blob/main/build_about.py">build_about.py</a>。这样就可以实现一个自我介绍同步到多个平台（除了博客，还可以通过 api 接口同步到语雀等其他平台）。</p>
<h2 id="vps-上服务部署">vps 上服务部署</h2>
<p>购买了新的 VPS 之后，就将原来的 VPS 导出镜像，然后导入到新的 VPS，最后再安装了以下服务：</p>
<ul>
<li><a href="https://github.com/indes/flowerss-bot">flowerss-bot</a>：一个支持应用内阅读的 Telegram RSS Bot。</li>
<li><a href="https://n8n.io/">n8n</a>：一款开源的自动工作流服务，类似 IFTTT、Zapier，可以互联互通包括 GitHub、Dropbox、Google、NextCLoud、RSS、Slack、Telegram 在内的几十款在线服务。</li>
<li>memos：一个开源且免费的自托管知识库</li>
<li>cusdis：一个界面清爽、注重隐私的轻量级 (~5kb gzip) 评论系统，可以很方便地与 React、Vue 或其他博客系统结合，并且还提供了一个后台来管理所有的评论</li>
<li>umami：一个简单易用、自托管的开源网站访问流量<em>统计</em>分析工具</li>
<li>pgsql</li>
<li>uptime-kuma：一个开源免费的监控工具</li>
<li>rsshub：一个开源、简单易用、易于扩展的RSS 生成器，可以给任何奇奇怪怪的内容生成RSS 订阅源</li>
</ul>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/vps-docker-service.png" alt="vps-docker-service"  />
</p>
<p>通过 Docker 部署这些服务非常简单，主要是需要注意的一点是：将这些服务部署到同一个网路，这样各个服务之间可以互相通信。比如：很多服务都需要依赖数据库 postgresql，可以使用 docker-compose 来编排服务。安装部署过程参考：<a href="/posts/2023/01/25/notes-about-deploy-services-in-vps/">我的VPS服务部署记录</a></p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-2｜博客重构</title>
      <link>https://blog.chensoul.com/posts/2023/01/15/weekly_review_2/</link>
      <pubDate>Sun, 15 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/15/weekly_review_2/</guid>
      <description>前言 本篇是对 2023-01-09 到 2023-01-15 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这是年前倒数第二个工作周，工作上主要是完成项目一</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-09</code> 到 <code>2023-01-15</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这是年前倒数第二个工作周，工作上主要是完成项目一个版本的测试和发布。这个博客主要是分享一些技术相关笔记和个人的生活记录与思考，所以不会涉及具体的工作内容。</p>
<p>周三晚上是部门年会，领导提出了 2023 年收入 6.2 亿的目标，比 2022 年收入增长 140%。从公司领导层这乐观的年度规划，看得出来公司的发展属于上升趋势，同时意味着 2023 年又是忙碌和压力巨大的一年。</p>
<p>工作闲暇之余，看到了一些独立开发者的博客，并受他们博客文章的影响，立即决定重新捣鼓博客。于是，在一腔热情之下，花了三天时间重构了博客，也对博客以后的方向做了一些规划。</p>
<p>周末是过小年，小年伊始，年味渐浓。周六晚上，堂哥家吃年饭。周日中午，自己家吃年饭。这是新婚后第一次两边的家人一起吃年饭。虽然很早就确定了年饭时间大家都有时间的周末、预定了可以坐下 20 多人的大桌，但还是遗憾人没有到齐。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/new-year-dinner-20230115.png" alt="new-year-dinner-20230115"  />
</p>
<h2 id="博客重构">博客重构</h2>
<h3 id="博客主题">博客主题</h3>
<p>以前的博客主要是纯粹分享技术，很少有自己的思考，基本上就是代码比汉字要多不少。博客没有博主的思考，无法让读者认识、了解博主，并和博主产生深入的链接。这样的博客没有灵魂，就仅仅是一个纯分享的 wiki。</p>
<p>这次重新开始写博客之后，规划的博客主题是分享技术、记录生活、启发思考。技术上的文章，要有深度；生活的点滴，要有复盘；思考的内容，要有共鸣。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/blog-homepage-den-theme.png" alt="blog-homepage-den-theme"  />
</p>
<h3 id="博客规划">博客规划</h3>
<p>以前博客文章的分类有 java、database、devops、web，在删了一些文章之后，将博客的分类调整为想法（Ideas）、笔记（Notes）两类，后面再根据实际情况添加或者调整分类。</p>
<blockquote>
<p>健康，爱情和使命，按照这个顺序，其它的都不重要</p>
</blockquote>
<h3 id="文章链接">文章链接</h3>
<p>以前的博客链接格式是 <code>posts/:slug</code>，现在调整为 <code>posts/:year/:month/:day/:slug</code>。因为现在博客只有几篇文章，所以暂时不打算做原有链接路径到新路径的重定向工作。</p>
<h3 id="博客部署">博客部署</h3>
<p>目前有三种方案部署方案：</p>
<ul>
<li>github pages。国内访问速度受影响。</li>
<li>cloudflare pages。可以使用 cdn 加速。</li>
<li>Self hosted。需要购买云主机和手动运维。</li>
</ul>
<p>目前，是倾向于使用第二种方案。源码保存到 github 上，github actions 编译和部署静态文件到 cf-pages 分支，通过 cloudflare pages 链接 github 仓库、自动化部署静态文件并设置自定义域名 <code>blog.chensoul.com</code>。</p>
<h3 id="发布流程">发布流程</h3>
<p>本地编写 markdown 文件，图片保存到公有云，通过 git 提交到 github 仓库，使用 github actions 通过 n8n 自动发布到多平台，比如：公众号，语雀等。</p>
<h3 id="待办事项">待办事项</h3>
<p>本周对博客重构，计划完成以下功能：</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 在不修改原主题的前提下，通过 git log 记录对主题的改动</li>
<li><input checked="" disabled="" type="checkbox"> 添加 <a href="https://cusdis.com/">Cusdis </a>评论系统</li>
<li><input checked="" disabled="" type="checkbox"> 添加 <a href="https://umami.is/">Umami</a> 统计分析</li>
<li><input checked="" disabled="" type="checkbox"> 添加 <a href="https://uptime.kuma.pet/">Kuma</a> 服务监控</li>
<li><input checked="" disabled="" type="checkbox"> 添加搜索、回到顶部功能</li>
<li><input checked="" disabled="" type="checkbox"> 使用 <a href="https://oss.console.aliyun.com/overview">阿里云对象存储</a> 作为图床</li>
<li><input disabled="" type="checkbox"> github actions 集成 <a href="https://n8n.io/">n8n</a></li>
<li><input disabled="" type="checkbox"> 域名 dns 解析迁移到 cloudflare</li>
</ul>
<p>以下是使用 kuma 监控我的 VPS 上的服务。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/chensoul-uptime.png" alt="chensoul-uptime"  />
</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-1｜开始写周报、冥想</title>
      <link>https://blog.chensoul.com/posts/2023/01/08/weekly_review_1/</link>
      <pubDate>Sun, 08 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/08/weekly_review_1/</guid>
      <description>前言 本篇是对 2023-01-02 到 2023-01-08 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这是 2023 年的第一周，元旦放了三天假之后，就用投入了</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-02</code> 到 <code>2023-01-08</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这是 2023 年的第一周，元旦放了三天假之后，就用投入了工作之中。元旦已过，过年就没多远了，很多公司也开始准备年会了。因为疫情，这个年注定不好过。现在疫情放开，不知道有多少公司能够熬过这个年，进入百废待兴的节奏。</p>
<p>最近把 rss 阅读器又用起来，每天阅读订阅的未读文章，关注到好几个独立开发者。他们每周都在坚持写博客、分享技术文章。从他们的分享里面，可以看到他们有在做自己的 side projects，也有在开源项目提交代码。看着他们的 github 主页每天都有提交代码，再看看我的 github 主页很久没有提交过代码，顿感惭愧。目前，公司使用的是自建的 gitlab 仓库托管代码，很多代码不方便公开分享，自己夜很少花时间写一些小项目公开分享到 github。干脆就清理一些 github 长期没有维护的仓库，取关了一些好友，更新了 github 主页，最后看了一下粉丝还有 574 人，相对而言也是少的可怜🥺。</p>
<h2 id="开始写周报">开始写周报</h2>
<p>前段时间，开始尝试在 <a href="https://www.yuque.com/chensoul">语雀</a> 上每天写日记，写了几天之后，没有坚持下来。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/yuque-life-note.png" alt="yuque-life-note" style="width: 50%"/>
<p>总结了一下，没有坚持下来的原因主要是在于每天没有积累足够的分享内容，也就是输入不够；另外，输出之后的反馈不够，这和观众流量有关。作为一个程序员，更喜欢自动化工作的快感和满足感。哟还是更倾向于将博客以 markdown 文件保存到本地或者 git 仓库，然后通过自动化脚本编译部署到多平台。在关注了一些独立开发者的博客之后，更是坚定了这种想法。于是有了这篇写周报的文章，以周为单位记录每一周的所看所思所感。</p>
<p>关于写博客的流程，电脑上使用 typora 编辑器有着很好的用户体验。如果也能在手机上用 markdown 写文章并提交到 github 上就更完美了。刚开始我使用的是 mweb 这个 app，最近在 ios 上又发现了 metion 这个 app 就可以支持和 git 同步。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/ios-app-metion.png" alt="ios-app-metion" style="width: 50%"/>
<p>这篇文章就是通过 metion 编写和提交的。图片是本地上传的，图片名称应该是一串随机数，待文章发布之后，需要将图片重命名为有意义的名称，这样方便在图床里查阅和管理。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/metion-writing-first-blog.png" alt="metion-writing-first-blog" style="width: 50%"/>
<p>关于图片的宽度设置，特别是竖形图，建议将宽度设置为一半。设置方法是：在 md 文件里使用 <code>img</code> 标签引入图片，这样就可以添加一个 <code>sytle=&quot;width: 50%&quot;</code> 来设置宽度。例如，上面图片就是这样设置的。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/ios-app-metion.png&#34;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;ios-app-metion&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;width: 50%&#34;</span><span class="p">&gt;</span>
</span></span></code></pre></div><h2 id="内观冥想">内观冥想</h2>
<p>这个月参加了一个内观冥想 21 天训练营，每天早上 7 点到 8 点是上课时间，正好也是我上班时间。在听了几天课程并打卡之后，就放弃了。</p>
<p>21 天课程内容，每天的主题分别是：</p>
<ul>
<li>目标</li>
<li>计划</li>
<li>结果</li>
<li>比较</li>
<li>抱怨</li>
<li>后悔</li>
<li>他应该知道自己错了</li>
<li>不可能</li>
</ul>
<h3 id="目标">目标</h3>
<blockquote>
<p>今日内观冥想主题是目标</p>
<p>静静地放空自己，回想自己关注目标的记忆。好像自己曾经设立过很多目标，又好像什么都没有。目标是什么，好像描述不出来，又琢磨不透。</p>
<p>曾经立下的那些目标算是目标吗？他们可以实现吗？他们实现了吗？为什么没有实现呢？无志之人常立志，有志之人立常志。远的不说，先看看 2022 年实现了哪些目标。读书，是彻底放下了；健身，元旦前减到 130 斤的目标在 “阳康后不要剧烈运动” 的说辞下耽误了；定投，也是终止了；买车，车是消耗品；结婚，实现了。</p>
<p>算了下，实现了的目标也就是结婚了。少的可怜。为什么会这样呢？大抵是自己不够自律，没有持续的坚持，也没有及时的反思和调整。也就是自我察觉不够吧！或者说没有养成自我察觉的方法和习惯。这也就是为什么要参加 21 天内观训练营的原因吧。</p>
<p>一个人很难认清自身的局限性，很难扩大自己的认知，多与身边的人交流和学习，通过观他人，再来思自己，应该可以提升自己的察觉意识。</p>
</blockquote>
<h3 id="计划">计划</h3>
<blockquote>
<p>今日内观冥想主题是计划。</p>
<p>早上冥想是在地铁，冥想的时候放空自己，感受自己的思绪、情绪和身体的注意力。因为是站着，注意力一会儿在脚上，一会儿在手上，不能完全地放空自己。想必要是完全放松，估计就站不住了吧。</p>
<p>冥想地过程中，重要的是感受和观察。感受当下的感受，观察自己的观察，任有他们流动和发展。所谓没有绝对的对与错，冥想的过程中，重要的是作为一个旁观者，不要有过多的主观意识。</p>
</blockquote>
<h3 id="结果">结果</h3>
<blockquote>
<p>今天的内观冥想主题是结果。</p>
<p>把身体挂在钩子上，静静地观察和感受。一方面感受身体，一方面会思考自己对结果的理解。什么是结果？自己过去一年取得了什么样的结果？为什么没有取得？</p>
</blockquote>
<h3 id="比较">比较</h3>
<blockquote>
<p>今日内观冥想主题是比较。冥想时，观察自己的感受、情绪、想法，他们可能是任何样子的。不管是怎样的，他们都是正常的，都是他们本来的样子，也就是空性。</p>
<p>把比较这个念头挂起来，静静地看比较这两个字。然后开始觉察比较这两个字。这个时候，大脑开始在思考比较这个念头是什么。思绪在变化的时候，对对比较这个念头的感受也在变化。无论如何变化，自己都不要干预。当自己有了比较这个念头，自己的感受是失望的。失望自己不如别人，不如过去。失望过后，又不服气，又暗下决心要好好努力。这个过程中，我是我的主人，是我在有着各种各样的感受。如果我能控制自己的情绪，就能控制自己的行为。</p>
</blockquote>
<h3 id="抱怨">抱怨</h3>
<blockquote>
<p>今日冥想主题是抱怨。</p>
<p>生活中有什么抱怨的？抱怨又解决不了问题？问题又不是自己造成的，可能是别人造成的！别人的事情是别人的事情，自己的事情是自己造成。别人的事情，你管不了，你能管理的是你自己的。管好自己的心态情绪和行为，因为抱怨解决不了别人的问题，也解决不了自己的事情。甚至你的抱怨还会给别人带来负能量，给你们带来争吵，给自己带来蛮烦，给自己地能力和情绪带来消耗。与其消耗自己，还不如提升自己。有时候不要局限在自己的思维里，换个角度，提升格局，一切事情都不是事情了。这个世界哪有那么多所谓重要的事情。那些今天你看来很重要的事儿，在十年二十年之后，根本就不值得一提。所以很多时候，要用发展的眼光看问题。一切都会过去，一切都会好起来。当你这样想的时候，在你心里在你眼前，就没有什么烦恼了，也就不会抱怨了。</p>
</blockquote>
<h2 id="好物分享">好物分享</h2>
<p>几个截图软件：</p>
<ul>
<li>
<p><a href="https://immmmm.com/chrome-extensions-tinysnap/">TinySnap</a> Chrome 截图插件，支持设置背景</p>
</li>
<li>
<p>Snipaste 截图</p>
</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>从零开始搭建个人博客</title>
      <link>https://blog.chensoul.com/posts/2021/09/09/build-personal-blog-from-zero/</link>
      <pubDate>Thu, 09 Sep 2021 18:14:34 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2021/09/09/build-personal-blog-from-zero/</guid>
      <description>从零开始搭建博客，包括注册域名、购买服务器、部署程序及网站配置和优化。 域名 搭建一个博客或者网站，需要有一个域名。那什么是域名呢？看看百度百科</description>
      <content:encoded><![CDATA[<p>从零开始搭建博客，包括注册域名、购买服务器、部署程序及网站配置和优化。</p>
<h2 id="域名">域名</h2>
<p>搭建一个博客或者网站，需要有一个域名。那什么是域名呢？看看百度百科上的解释：</p>
<blockquote>
<p><strong>域名</strong>（英语：<strong>Domain Name</strong>），又称<strong>网域</strong>，是由一串用点分隔的名字组成的<a href="https://baike.baidu.com/item/Internet">Internet</a>上某一台<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。</p>
<p>由于<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80/150859">IP地址</a>具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（<a href="https://baike.baidu.com/item/DNS">DNS</a>，Domain Name System）来将域名和<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>相互<a href="https://baike.baidu.com/item/%E6%98%A0%E5%B0%84/20402621">映射</a>，使人更方便地访问<a href="https://baike.baidu.com/item/%E4%BA%92%E8%81%94%E7%BD%91/199186">互联网</a>，而不用去记住能够被机器直接读取的<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>数串。</p>
</blockquote>
<p>简单来说，IP地址可以标识一台计算机，但是不容易记忆，所以，设计出了域名。而域名就是标识因特网上的一台计算机，由网域名称系统DNS来完成域名和IP之间的映射。</p>
<p>如何注册域名？有很多网站提供域名注册服务，比如国内的：</p>
<ul>
<li><a href="https://www.alibabacloud.com/zh/domain">阿里云</a></li>
<li><a href="https://cloud.tencent.com/act/domainsales">腾讯云</a></li>
<li><a href="https://www.huaweicloud.com/">华为云</a></li>
</ul>
<p>国外的：</p>
<ul>
<li><a href="https://sg.godaddy.com/zh/offers/domain">GoDaddy</a></li>
<li><a href="https://www.namecheap.com/">Namecheap</a></li>
<li><a href="https://console.aws.amazon.com/route53/home?#DomainRegistration:">Amazon</a></li>
</ul>
<p>注册域名的建议：</p>
<ul>
<li>1、建议在正规、出名的网站注册域名，防止网站跑路。我曾经在一个小网站注册了一个域名，使用了几年之后，续期的时候，联系不上对方，导致无法使用该域名，甚至该域名被别人抢注册了。</li>
<li>2、在国内网站注册域名，都需要备案。如果不想备案，请在国外网站注册域名。我的域名 chensoul.com 就是在亚马逊上注册的。一是不想备案，二是对比了上面几个网站，发现亚马逊上的com域名价格相对便宜，所以一次性购买了5年。</li>
<li>3、建议优先注册com域名，域名尽可能的简短并且方便记忆。</li>
</ul>
<p>我曾经注册过的域名：</p>
<ul>
<li>javachen.com、javachen.space、javachen.xyz</li>
<li>huaiu.com</li>
</ul>
<h2 id="服务器">服务器</h2>
<p>注册了域名之后，需要一台服务器运行程序。服务器可以是一台物理机，比如你可以使用自己的电脑作为服务器；也可以是一台虚拟的云服务器，比如在云服务提供商购买一台独立的服务器；也可以使用第三方提供的服务器空间，比如Github上可以部署静态程序。不管哪种方式，服务器都需要有一个公网IP，这样才能在因特网上访问你服务器上部署的程序。有了服务器之后，就可以给服务器公网IP设置域名解析。</p>
<p>我的服务器是在<a href="https://bandwagonhost.com/aff.php?aff=58710">搬瓦工</a>购买的，一年49.99美元。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/bwg-plan.png" alt="bwg-plan"  />
</p>
<h2 id="程序">程序</h2>
<h3 id="安装hugo">安装Hugo</h3>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/hugo-logo.svg" alt="使用 Hugo 搭建博客"  />
</p>
<p>在 Mac 下安装 Hugo：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install hugo
</span></span></code></pre></div><h3 id="新建站点">新建站点</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo new site chensoul.github.io -y yaml
</span></span></code></pre></div><p>上述命令会生成一个名为 <code>chensoul.github.io</code> 的文件夹，下面对文件夹结构做个说明：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tree chensoul.github.io
</span></span><span class="line"><span class="cl">chensoul.github.io
</span></span><span class="line"><span class="cl">├── archetypes
</span></span><span class="line"><span class="cl">│   └── default.md
</span></span><span class="line"><span class="cl">├── config.yaml
</span></span><span class="line"><span class="cl">├── content
</span></span><span class="line"><span class="cl">├── data
</span></span><span class="line"><span class="cl">├── layouts
</span></span><span class="line"><span class="cl">├── static
</span></span><span class="line"><span class="cl">└── themes
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">6</span> directories, <span class="m">2</span> files
</span></span></code></pre></div><p>新建的站点，还没有加入 Git 版本管理，进入到这个目录下，执行一下如下命令，完成 Git Repo 的初始化：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> chensoul.github.io
</span></span><span class="line"><span class="cl">git init .
</span></span></code></pre></div><p>新建站点后，我们开始添加主题。</p>
<h3 id="添加主题">添加主题</h3>
<p>在 Hugo 的官网上 <a href="https://themes.gohugo.io/">Hugo Themes</a> 有非常非常多的主题，可以根据自己的喜好选择一个主题。这里，我使用的是 hugo-theme-den 主题。</p>
<p>使用 git submodule&ndash;helper 下载主题到 theme 目录下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git submodule--helper add https://github.com/shaform/hugo-theme-den themes/den --depth<span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git submodule--helper update --init --recursive <span class="c1"># needed when you reclone your repo (submodules may not get cloned automatically)</span>
</span></span></code></pre></div><p>以后，当主题有更新时，执行下面命令更新：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git submodule update --remote --merge
</span></span></code></pre></div><p>如果遇到异常，可以参考<a href="https://xuzhijvn.github.io/zh-cn/posts/other/git-submodule-update-init-recursive/">文章</a>解决。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">fatal: remote error: upload-pack: not our ref fc7223ca00124e8f5b5b354457379071e2fd091b
</span></span></code></pre></div><h3 id="启动">启动</h3>
<p>启动预览：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo server
</span></span></code></pre></div><p>默认是 <code>1313</code> 端口号，在浏览器中直接访问 http://localhost:1313/ 就可以访问到新建的博客了。</p>
<h2 id="定制化">定制化</h2>
<h3 id="站点信息">站点信息</h3>
<p>配置网站的基本信息，将 config.yaml 修改如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">baseURL: https://blog.chensoul.com/
</span></span><span class="line"><span class="cl">title: ChenSoul
</span></span><span class="line"><span class="cl">theme: den
</span></span><span class="line"><span class="cl">enableRobotsTXT: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">enableEmoji: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">hasCJKLanguage: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">preserveTaxonomyNames: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">rssLimit: <span class="m">100</span>
</span></span><span class="line"><span class="cl">page_view_conter: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">enableRelated: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Copyright, appears in the footer</span>
</span></span><span class="line"><span class="cl"><span class="c1"># copyright = &#34;&#34;             # default: author.name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Pagination</span>
</span></span><span class="line"><span class="cl"><span class="c1"># number of entries per page for archives, tags and categories</span>
</span></span><span class="line"><span class="cl"><span class="c1"># since we don&#39;t have list view, recommend a large value</span>
</span></span><span class="line"><span class="cl">paginate: <span class="m">20</span>
</span></span><span class="line"><span class="cl">paginatePath: <span class="s2">&#34;page&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Syntax Hightlight</span>
</span></span><span class="line"><span class="cl">PygmentsCodeFences: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">PygmentsUseClasses: <span class="nb">true</span>    <span class="c1"># required for shhighlight shortcode</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># service plugins</span>
</span></span><span class="line"><span class="cl">disqusShortname: <span class="s2">&#34;&#34;</span>         <span class="c1"># disqus_shortname</span>
</span></span><span class="line"><span class="cl">googleAnalytics: <span class="s2">&#34;&#34;</span>         <span class="c1"># UA-XXXXXXXX-X</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># language support # en / zh / other... translations present in i18n/</span>
</span></span><span class="line"><span class="cl">defaultContentLanguage: <span class="s2">&#34;zh&#34;</span>           <span class="c1"># Default language to use</span>
</span></span><span class="line"><span class="cl">defaultContentLanguageInSubdir: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">permalinks:
</span></span><span class="line"><span class="cl">  posts: /posts/:slug/
</span></span><span class="line"><span class="cl">  categories: /categories/:slug/
</span></span><span class="line"><span class="cl">  tags: /tags/:slug/
</span></span><span class="line"><span class="cl">  pages: /:slug/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">author:
</span></span><span class="line"><span class="cl">  name: chensoul
</span></span><span class="line"><span class="cl">sitemap:
</span></span><span class="line"><span class="cl">  changefreq: weekly
</span></span><span class="line"><span class="cl">  priority: 0.5
</span></span><span class="line"><span class="cl">  filename: sitemap.xml
</span></span><span class="line"><span class="cl">params:
</span></span><span class="line"><span class="cl">  since: <span class="s2">&#34;2020&#34;</span>
</span></span><span class="line"><span class="cl">  rssFullContent: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">  keywords:
</span></span><span class="line"><span class="cl">    - devops
</span></span><span class="line"><span class="cl">    - programming
</span></span><span class="line"><span class="cl">  description: Programming <span class="p">|</span> Devops
</span></span><span class="line"><span class="cl">  logoTitle: ChenSoul
</span></span><span class="line"><span class="cl">  siteLogoImage: images/fly.png
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1"># headerTitle = &#34;chensoul&#34;                   # default: title</span>
</span></span><span class="line"><span class="cl">  headerImage: images/background.webp
</span></span><span class="line"><span class="cl">  showAuthorCard: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">  showMenuLanguages: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">  autoLoadComments: <span class="nb">false</span>
</span></span><span class="line"><span class="cl">  paginateOriginalStyle: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1"># The date format to use; for a list of valid formats, see https://gohugo.io/functions/format/</span>
</span></span><span class="line"><span class="cl">  dateFormatToUse: 2006-01-02
</span></span><span class="line"><span class="cl">  google_verification: <span class="s2">&#34;D8XBzUhT4irNUQLKut79HFni0v3Xow4FY-oxUcsUlVk&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1"># Link custom CSS and JS assets</span>
</span></span><span class="line"><span class="cl">  <span class="c1">#   (relative to /static/css and /static/js respectively)</span>
</span></span><span class="line"><span class="cl">  customCSS: <span class="o">[]</span>
</span></span><span class="line"><span class="cl">  customJS: <span class="o">[]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">markup:
</span></span><span class="line"><span class="cl">  goldmark:
</span></span><span class="line"><span class="cl">    renderer:
</span></span><span class="line"><span class="cl">      unsafe: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># ------------------------------------- #</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ---- Related Articles --------------- #</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ------------------------------------- #</span>
</span></span><span class="line"><span class="cl">related:
</span></span><span class="line"><span class="cl">  <span class="c1"># Only include matches with rank &gt;= threshold. This is a normalized rank between 0 and 100.</span>
</span></span><span class="line"><span class="cl">  threshold: <span class="m">50</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1"># To get stable &#34;See also&#34; sections we, by default, exclude newer related pages.</span>
</span></span><span class="line"><span class="cl">  includeNewer: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1"># Will lower case keywords in both queries and in the indexes.</span>
</span></span><span class="line"><span class="cl">  toLower: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  indices:
</span></span><span class="line"><span class="cl">    - name: categories
</span></span><span class="line"><span class="cl">      weight: <span class="m">200</span>
</span></span><span class="line"><span class="cl">    - name: keywords
</span></span><span class="line"><span class="cl">      weight: <span class="m">150</span>
</span></span><span class="line"><span class="cl">    - name: tags
</span></span><span class="line"><span class="cl">      weight: <span class="m">100</span>
</span></span><span class="line"><span class="cl">languages:
</span></span><span class="line"><span class="cl">  zh:
</span></span><span class="line"><span class="cl">    languageCode: zh
</span></span><span class="line"><span class="cl">    languageName: 中文
</span></span><span class="line"><span class="cl">    contentDir: content
</span></span><span class="line"><span class="cl">    weight: <span class="m">1</span>
</span></span><span class="line"><span class="cl">    params:
</span></span><span class="line"><span class="cl">      description: Devops <span class="p">|</span> Programming
</span></span><span class="line"><span class="cl">    menu:
</span></span><span class="line"><span class="cl">      main:
</span></span><span class="line"><span class="cl">        - name: 思考
</span></span><span class="line"><span class="cl">          weight: <span class="m">10</span>
</span></span><span class="line"><span class="cl">          identifier: idea
</span></span><span class="line"><span class="cl">          url: categories/idea/
</span></span><span class="line"><span class="cl">      social:
</span></span><span class="line"><span class="cl">        - name: Telegram
</span></span><span class="line"><span class="cl">          weight: <span class="m">10</span>
</span></span><span class="line"><span class="cl">          identifier: telegram
</span></span><span class="line"><span class="cl">          url: https://t.me/chensoul_share
</span></span><span class="line"><span class="cl">        - name: Twitter
</span></span><span class="line"><span class="cl">          weight: <span class="m">20</span>
</span></span><span class="line"><span class="cl">          identifier: twitter
</span></span><span class="line"><span class="cl">          url: https://twitter.com/chensoul_eth
</span></span><span class="line"><span class="cl">        - name: BiliBili
</span></span><span class="line"><span class="cl">          weight: <span class="m">40</span>
</span></span><span class="line"><span class="cl">          identifier: bilibili
</span></span><span class="line"><span class="cl">          url: https://space.bilibili.com/699805065/
</span></span><span class="line"><span class="cl">      links:
</span></span><span class="line"><span class="cl">        - name: GitHub
</span></span><span class="line"><span class="cl">          weight: <span class="m">10</span>
</span></span><span class="line"><span class="cl">          identifier: github
</span></span><span class="line"><span class="cl">          url: https://github.com/chensoul
</span></span><span class="line"><span class="cl">        - name: Services
</span></span><span class="line"><span class="cl">          weight: <span class="m">20</span>
</span></span><span class="line"><span class="cl">          identifier: services-status
</span></span><span class="line"><span class="cl">          url: https://uptime.chensoul.com/status/services
</span></span><span class="line"><span class="cl">        - name: Analytics
</span></span><span class="line"><span class="cl">          weight: <span class="m">30</span>
</span></span><span class="line"><span class="cl">          identifier: chensoul-analytics
</span></span><span class="line"><span class="cl">          url: https://data.chensoul.com/share/8YKX7FUa/pseudoyu-blog
</span></span></code></pre></div><h2 id="部署">部署</h2>
<h3 id="github-actions部署">GitHub Actions部署</h3>
<p><strong>1、首先在github里创建一个仓库：chensoul.github.io</strong></p>
<p><strong>2、将本地文件提交到github</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> chensoul.github.io
</span></span><span class="line"><span class="cl">git init .
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;# chensoul.github.io&#34;</span> &gt;&gt; README.md
</span></span><span class="line"><span class="cl">git remote add origin git@github.com:chensoul/chensoul.github.io.git
</span></span></code></pre></div><p><strong>3、将本地代码推送到仓库</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git commit -m <span class="s2">&#34;first commit&#34;</span>
</span></span><span class="line"><span class="cl">git push -u origin main
</span></span></code></pre></div><p><strong>4、创建 GitHub Actions 的 workflow</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir -p .github/workflows
</span></span><span class="line"><span class="cl">touch .github/workflows/gh-page.yml
</span></span></code></pre></div><p>gh-page.yml内容如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">github pages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-18.04</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">timeout-minutes</span><span class="p">:</span><span class="w"> </span><span class="m">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Checkout</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">  </span><span class="c"># Fetch Hugo themes (true OR recursive)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">    </span><span class="c"># Fetch all history for .GitInfo and .Lastmod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="l">latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">extended</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo --minify</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">github_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.GITHUB_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">publish_branch</span><span class="p">:</span><span class="w"> </span><span class="l">gh-pages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span></code></pre></div><p>上面的工作流是在 gh-pages 分支上触发，当有代码提交时候，会运行 hugo 命令生成静态文件（public目录），并且将他们推送到main分支。</p>
<p>所以，我们需要基于当前分支创建一个新分支 gh-pages ，并且推送到远程仓库：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git branch gh-pages
</span></span><span class="line"><span class="cl">git checkout gh-pages
</span></span><span class="line"><span class="cl">git push origin gh-pages
</span></span></code></pre></div><p><strong>5、修改代码，推送到仓库，触发工作流</strong></p>
<p>在本地修改某个文件，提交代码，然后在 github <a href="https://github.com/chensoul/chensoul.github.io/actions">网站</a> 查看工作流</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git push origin gh-pages
</span></span></code></pre></div><p><strong>7、设置自定义域名</strong></p>
<p>参考<a href="https://docs.github.com/cn/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-a-subdomain">管理 GitHub Pages 站点的自定义域</a>，添加一个自定义域名：blog.chensoul.com：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/github-page-settings.png" alt="github-page-settings"  />
</p>
<p>或者，在仓库的 static 目录创建一个CNAME文件，内容为：blog.chensoul.com，然后，保存提交，Github Actions会将该文件推送到main分支。</p>
<p>然后，在亚马逊网站添加 <a href="https://console.aws.amazon.com/route53/v2/hostedzones#">CNAME记录</a>：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/amazon-dns-settings.png" alt="amazon-dns-settings"  />
</p>
<p>8、部署到 CloudFlare Pages</p>
<p>参考 <a href="https://hee.ink/p/%E4%BB%8E-github-pages-%E8%BF%81%E7%A7%BB%E5%88%B0-cloudflare-pages-%E7%9A%84%E4%BD%93%E9%AA%8C%E4%B8%8E%E8%B8%A9%E5%9D%91%E5%B0%8F%E8%AE%B0/">从 GitHub Pages 迁移到 CloudFlare Pages 的体验与踩坑小记</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
