<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jms on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/jms/</link>
    <description>Recent content in Jms on ChenSoul</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 24 Jul 2024 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/jms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[译]JMS 2.0 中的新增功能</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/what-is-new-in-jms-2-0/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/what-is-new-in-jms-2-0/</guid>
      <description>原文链接：What is new in JMS 2.0 在在软件集成领域，从一个软件组件到另一个软件组件进行通信是一项基本要求。虽然已经出现了许多具有这种能力的技术，但 Java 编程语言为我们提供了一个 API，以促进用 Java 编写的组件之间的</description>
    </item>
    <item>
      <title>[译]JMS 2.0 中的新增功能（第一部分）- 易于使用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/jms20/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/jms20/</guid>
      <description>原文链接：https://www.oracle.com/technical-resources/articles/java/jms20.html 作者：Nigel Deakin 出版日期：2013 年 5 月 了解新的易用性</description>
    </item>
    <item>
      <title>[译]JMS 2.0 中的新增功能（第二部分）- 新的消息传送功能</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/jms20/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/jms20/</guid>
      <description>原文链接：https://www.oracle.com/technical-resources/articles/java/jms2messaging.html 作者：Nigel Deakin 出版日期：2013 年 5</description>
    </item>
    <item>
      <title>[译]JMS 2.0 的十个好处意味着可以减少代码编写量</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/jms20-means-less-code/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/jms20-means-less-code/</guid>
      <description>原文链接：Ten ways in which JMS 2.0 means writing less code 这里有十个简单的例子，说明 JMS 2.0 比 JMS 1.1 需要更少的代码。 单一 JMSContext 而不是单独的 Connection 和 Session 对象 JMS 2.0 简化 API 引入了一个新对象， JMSContext 它提供了与 JMS 1.1 API 中的分隔 Connection 对象 Session 相同的功能： JMS 1.1 1 2 Connection connection</description>
    </item>
    <item>
      <title>[译]JMS 事务的实际应用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-transactions-in-action/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-transactions-in-action/</guid>
      <description>在本文中，您将了解如何选择性地使用 JMS 事务。在 JMS 中，您可以选择控制一个会话的原子操作。每个会话都支持一系列事务。每个事务将一组生成或使用的消息分组为一个原子工作单元。确保您已经理解了JMS 中的消息确认。</description>
    </item>
    <item>
      <title>[译]JMS 发布-订阅消息模型</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-pub-sub-messaging-model/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-pub-sub-messaging-model/</guid>
      <description>在本文中，您将了解 JMS 发布-订阅 (publish-subscribe) 消息传递模型。正如您在JMS 简介文章中所读到的，在发布/订阅模型中，客户端通过称为主题的中介将消息发送给多个接收者。发送者通常称为发布者，接收者称为订阅者。 JMS 发布/订阅</description>
    </item>
    <item>
      <title>[译]JMS 消息优先级</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-prioritize-messages/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-prioritize-messages/</guid>
      <description>我们将通过示例详细讨论 JMS 消息优先级。每条消息的标头字段代表其优先级。我在消息模型教程JMSPriority中讨论过消息优先级。 JMS 有 10 个优先级，从 0 到 9。0 是最低优先级，9 是最高优先级。根据 JMS 标准，优先</description>
    </item>
    <item>
      <title>[译]JMS 消息模型</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-message-model/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-message-model/</guid>
      <description>消息是 JMS 的核心，无论是事件还是业务数据。消息由标头、自定义属性和正文组成。这是您将在 JMS 消息模型（JMS 消息剖析）中学习的内容。 JMS 消息由 Header、Properties 和 Body（Payload）组成</description>
    </item>
    <item>
      <title>[译]JMS 消息选择器在过滤消息中的应用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-message-selectors-in-action-to-filter-messages/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-message-selectors-in-action-to-filter-messages/</guid>
      <description>发送给接收方的消息通常需要根据某些标准进行过滤。JMS 提供消息选择器，允许 JMS 消费者根据消息头指定其感兴趣的消息。在本文中，您将学习使用 JMS 消息选择器来过滤消息。 这是一篇高级教程，在继续阅读本文之前，请确</description>
    </item>
    <item>
      <title>[译]JMS 点对点消息传递的实际应用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-point-to-point-messaging-in-action/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-point-to-point-messaging-in-action/</guid>
      <description>点对点系统使用队列进行消息传递。客户端将消息发送到特定队列，特定订阅者监听或接收来自该队列的消息。在 JMS 点对点消息传递系统中，队列用于处理单个发送者和单个消费者。确保您已经阅读了有关JMS 消息模型以及如</description>
    </item>
    <item>
      <title>[译]JMS介绍 – Java消息服务</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-introduction-java-message-service/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-introduction-java-message-service/</guid>
      <description>JMS 代表 Java 消息服务，它是 Java 中访问消息中间件服务器的标准。这是一个 JMS 介绍教程，为您提供消息传递和 JMS 的简要概述。您将了解使用 JMS 的优势以及 JMS 中的不同消息传递模型。 什么是消息传递？ 消息传递是跨各种应用程序或服务</description>
    </item>
    <item>
      <title>[译]为 JMS 安装和设置 Glassfish</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/install-and-setup-glassfish-for-jms/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/install-and-setup-glassfish-for-jms/</guid>
      <description>在本文中，我们将为 JMS 2.0 设置 Glassfish，创建一个 Java 项目并添加必要的依赖项。 先决条件 请确保您的系统上安装了以下工具。 已安装JDK 8。尚未使用任何更高版本的 Java 进行测试。 Eclipse、STS 或 IntelliJ ID</description>
    </item>
    <item>
      <title>[译]使用 JMS 消息确认保证传送</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/guaranteed-delivery-using-jms-message-acknowledgement/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/guaranteed-delivery-using-jms-message-acknowledgement/</guid>
      <description>JMS 通过 JMS 消息确认（确认模式）确保消息传递的可靠性。如果会话已进行事务处理，则该commit()方法会自动处理消息确认。否则，该方法将处理恢复rollback()。在本文中，我们将假设会话未进行事务处理</description>
    </item>
    <item>
      <title>[译]在 JMS 中发送和接收消息</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/send-and-receive-message-in-jms/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/send-and-receive-message-in-jms/</guid>
      <description>您将了解 JMS 架构，学习如何在 JMS 中发送和接收消息。我将介绍管理对象、JMS 1.1 API 和 JMS 2.0 API。我们还将看到与 JMS 1.1 API 相比，JMS 2.0 API 的使用有多么简单。在继续学习本课程之前，请确保您已完成 JMS 设置。如果您是初学者</description>
    </item>
    <item>
      <title>[译]完整的 JMS 2.0 教程</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/a-complete-jms-2-0-tutorial/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/a-complete-jms-2-0-tutorial/</guid>
      <description>JMS 代表 Java 消息服务，它是 Java 中访问消息中间件服务器的标准。消息传递是在各种应用程序或服务之间交换业务数据的过程。这是一个完整的 JMS 2.0 教程， 其中包含大量代码示例。完整的代码示例可在 GitHub 上找到，请下载并运行示例。</description>
    </item>
  </channel>
</rss>
