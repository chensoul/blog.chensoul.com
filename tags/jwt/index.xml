<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jwt on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/jwt/</link>
    <description>Recent content in Jwt on ChenSoul</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 15 Oct 2024 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/jwt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Security 和 JWT 入门</title>
      <link>https://blog.chensoul.cc/posts/2024/10/15/spring-security-jwt/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/10/15/spring-security-jwt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/spring-security/reference/index.html&#34; target=&#34;_blank&#34;&gt;Spring Security&lt;/a&gt; 为 Java 应用程序提供了一套全面的安全功能，涵盖身份验证、授权、会话管理以及针对&lt;a href=&#34;https://reflectoring.io/spring-csrf/&#34; target=&#34;_blank&#34;&gt;CSRF（跨站点请求伪造）&lt;/a&gt;等常见安全威胁的防护。Spring Security 框架具有高度可定制性，允许开发人员根据其应用程序需求来管理安全配置。它提供了一个灵活的架构，支持各种身份验证机制，如基本身份验证、JWT 和 OAuth。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JWT</title>
      <link>https://blog.chensoul.cc/posts/2024/06/06/jwt/</link>
      <pubDate>Thu, 06 Jun 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/06/06/jwt/</guid>
      <description>&lt;h2 id=&#34;什么是-jwt&#34;&gt;什么是 JWT？&lt;/h2&gt;
&lt;p&gt;JWT（JSON Web Token）是一种开放标准(RFC 7519)，用于在网络应用程序之间安全地传输信息。它被设计用于在两方之间传输声明，这些声明可以是身份验证和授权信息，也可以是任何其他类型的信息。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]Spring Security 与 JWT for REST API</title>
      <link>https://blog.chensoul.cc/posts/2023/09/19/spring-security-tutorial/</link>
      <pubDate>Tue, 19 Sep 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/09/19/spring-security-tutorial/</guid>
      <description>&lt;p&gt;&lt;strong&gt;免责声明：Spring Security 5+ 已发布 OAuth JWT 支持。建议使用最新版本的 OAuth 来支持 JWT，而不是使用自定义安全性或过滤器。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://spring.io/&#34; target=&#34;_blank&#34;&gt;Spring&lt;/a&gt; 被认为是 Java 生态系统中值得信赖的框架，并且被广泛使用。将 Spring 称为框架不再有效，因为它更多的是涵盖各种框架的总括术语。其中一个框架是 &lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34;&gt;Spring Security&lt;/a&gt;，它是一个功能强大且可定制的身份验证和授权框架。它被认为是保护基于 Spring 的应用程序的事实标准，因此，如果您希望实现 Spring JWT 令牌解决方案，那么将其基于 Spring Security 是有意义的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]Spring Security - JWT</title>
      <link>https://blog.chensoul.cc/posts/2023/08/16/spring-security-with-jwt/</link>
      <pubDate>Wed, 16 Aug 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security-with-jwt/</guid>
      <description>&lt;h3 id=&#34;简介和概述&#34;&gt;简介和概述&lt;/h3&gt;
&lt;p&gt;JSON Web Token 或 JWT（更常见的名称）是一种开放的互联网标准 (RFC 7519)，用于以紧凑的方式在各方之间安全地传输可信信息。令牌包含编码为 JSON 对象的声明，并使用私有密钥或公钥/私钥对进行数字签名。它们是独立且可验证的，因为它们经过数字签名。 JWT 可以进行签名和/或加密。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
