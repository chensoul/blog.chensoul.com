<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Maven on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/maven/</link>
    <description>Recent content in Maven on ChenSoul</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 01 Aug 2024 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Github Action 发布 Jar 到 Maven 中央仓库</title>
      <link>https://blog.chensoul.cc/posts/2024/08/01/publishing-a-jar-to-maven-repository-with-github-action/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/08/01/publishing-a-jar-to-maven-repository-with-github-action/</guid>
      <description>作为一名 Java 开发者,将自己的项目发布到 Maven 中央仓库是一个非常重要的步骤。这不仅可以让更多的开发者发现和使用您的项目,也可以提高项目的知名度和影响力。 在过去,发布 Jar 到 Maven 中央仓库通常需要手动完成一系列繁琐的步</description>
    </item>
    <item>
      <title>将 Maven 站点发布到 GitHub Pages</title>
      <link>https://blog.chensoul.cc/posts/2024/07/18/publishing-a-maven-site-to-github-pages/</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/18/publishing-a-maven-site-to-github-pages/</guid>
      <description>本文源代码：https://github.com/chensoul/maven-site-github-example/ 。 创建 Java Maven 项目 让我们使用 Maven 创建一个简单的 Java 项目 1 2 3 4 5 6 mvn archetype:generate \ -DgroupId=com.mycompany.app \ -DartifactId=maven-site-github-example \ -DarchetypeArtifactId=maven-archetype-quickstart \ -DarchetypeVersion=1.4 \</description>
    </item>
    <item>
      <title>搭建本地 Maven 仓库 Artifactory 开源版</title>
      <link>https://blog.chensoul.cc/posts/2024/06/25/install-artifactory-oss/</link>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/06/25/install-artifactory-oss/</guid>
      <description>安装 Artifactory 官方下载安装地址：https://jfrog.com/community/download-artifactory-oss/ ，支持三种安装方式： Windows Installer Linux Installers tar.gz RPM Debian Docker Compose Docker Helm 手动下载并安装 安装包文件地址</description>
    </item>
    <item>
      <title>搭建本地Maven仓库Nexus</title>
      <link>https://blog.chensoul.cc/posts/2024/06/25/install-nexus/</link>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/06/25/install-nexus/</guid>
      <description>使用 Docker 安装 1 2 3 $ docker volume create --name nexus_data $ docker run -d -p 8081:8081--name nexus -v nexus_data:/nexus-data sonatype/nexus3 8081 是 Nexus UI 端口 使用 Docker Compose 安装 1 2 3 4 5 6 7 8 9 10 11 12 services: nexus: image: sonatype/nexus3 platform: linux/amd64 ports: - &amp;#34;8081:8081&amp;#34; volumes: - nexus_data:/nexus-data - /etc/localtime:/etc/localtime:ro volumes: nexus_data: 访问并配置 Nexus 访问 http://127.0.0.1:8081/ 或者是 http://&amp;lt;your IP&amp;gt;:8081，用户名为 admin ，初始密码在</description>
    </item>
    <item>
      <title>2024-01-04｜GitHub Actions</title>
      <link>https://blog.chensoul.cc/posts/2024/01/04/til/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/01/04/til/</guid>
      <description>今天做了什么： 修改个人联系方式 注销亚马逊账号 利用GitHub Actions自动优雅地为项目构建Releases 利用GitHub Actions自动构建项目的docker镜像并发布到DockerHub 修改</description>
    </item>
    <item>
      <title>2023-12-20｜Maven配置继承和生命周期、源码运行Nacos 2.3.0控制台</title>
      <link>https://blog.chensoul.cc/posts/2023/12/20/til/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/12/20/til/</guid>
      <description>Today I Learned. 今天分享内容：Maven配置继承和生命周期、源码运行Nacos 2.3.0控制台 Maven 相关 Maven配置继承 以下是一些常见的POM节点，在子项目中可以继承或覆盖父项目的配置： groupId（项目组ID</description>
    </item>
    <item>
      <title>2023-12-13｜发布到Maven中央仓库的第一个项目</title>
      <link>https://blog.chensoul.cc/posts/2023/12/13/til/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/12/13/til/</guid>
      <description>Today I Learned. 今天分享内容：发布到 Maven 中央仓库的第一个项目。 最近在 Github 上创建了一个 Pom 类型的 Maven 项目 chensoul-parent，该项目主页 https://chensoul.github.io/chensoul-parent/ ，这是我的第一个发布对 Maven 中央仓库的项目。 其主要用途是管理常用的 Maven Plugin 插件。</description>
    </item>
    <item>
      <title>[译]使用Spring Boot Actuator公开有用的信息端点</title>
      <link>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-info-endpoint/</link>
      <pubDate>Wed, 26 Jul 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-info-endpoint/</guid>
      <description>在分布式、快节奏的环境中，开发团队通常希望了解他们部署应用程序的时间、部署的应用程序版本、部署的 Git 提交等等。 Spring Boot Actuator 帮助我们监控和管理应用程序。它公开了提供应用程序运行状况、指标和其他相关信息的各种端点</description>
    </item>
  </channel>
</rss>
