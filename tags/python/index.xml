<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python on ChenSoul</title>
    <link>https://blog.chensoul.cc/tags/python/</link>
    <description>Recent content in Python on ChenSoul</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 08 Jul 2023 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python学习7：输入和输出</title>
      <link>https://blog.chensoul.cc/posts/2023/07/08/python-input-and-output/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/07/08/python-input-and-output/</guid>
      <description>&lt;p&gt;在 Python 中，可以使用 input() 函数从标准输入读取用户输入的数据，并使用 print() 函数将数据输出到标准输出。下面是一些常用的输入输出方法：&lt;/p&gt;
&lt;p&gt;1、使用 input() 函数读取用户输入&lt;/p&gt;
&lt;p&gt;input() 函数会从标准输入读取用户输入的数据，并返回一个字符串类型的值。例如：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习6：模块和包</title>
      <link>https://blog.chensoul.cc/posts/2023/07/06/python-module-package/</link>
      <pubDate>Thu, 06 Jul 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/07/06/python-module-package/</guid>
      <description>&lt;p&gt;在 Python 中，模块（module）是指一个包含 Python 代码的文件，而包（package）则是指一个包含多个模块的文件夹。模块和包可以用来组织和管理 Python 代码，使得代码更加易于维护和扩展。&lt;/p&gt;
&lt;p&gt;以下是一些有关 Python 模块和包的基本知识：&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]Python模块和包-简介</title>
      <link>https://blog.chensoul.cc/posts/2023/06/25/python-modules-packages/</link>
      <pubDate>Sun, 25 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/25/python-modules-packages/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://files.realpython.com/media/Python-Modules-and-Packages-An-Introduction_Watermarked.20936240a94d.jpg&#34; alt=&#34;Python Modules &amp;amp; Packages&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;本文探讨了 Python 模块和 Python 包，这两种机制有助于模块化编程。&lt;/p&gt;
&lt;p&gt;模块化编程是指将大型、笨重的编程任务分解为单独的、更小的、更易于管理的子任务或模块的过程。然后可以像构建块一样将各个模块拼凑在一起以创建更大的应用程序。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]用 Bottle 开发</title>
      <link>https://blog.chensoul.cc/posts/2023/06/25/developing-with-bottle/</link>
      <pubDate>Sun, 25 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/25/developing-with-bottle/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://files.realpython.com/media/bottle-logo.4c5ab3d2ae78.png&#34; alt=&#34;Bottle logo&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;我喜欢 &lt;a href=&#34;http://bottlepy.org/docs/stable/&#34; target=&#34;_blank&#34;&gt;bottle&lt;/a&gt;。它是一个简单、快速且功能强大的 Python 微框架，非常适合小型 Web 应用程序和快速原型设计。对于那些刚刚开始 Web 开发的人来说，它也是一个出色的学习工具。&lt;/p&gt;
&lt;p&gt;让我们看一个简单的例子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：本教程假设您正在运行基于 Unix 的环境 - 例如 Mac OS X、Linux 版本或通过虚拟机支持的 Linux 版本。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习5：函数</title>
      <link>https://blog.chensoul.cc/posts/2023/06/25/python-function/</link>
      <pubDate>Sun, 25 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/25/python-function/</guid>
      <description>&lt;h2 id=&#34;函数的定义&#34;&gt;函数的定义&lt;/h2&gt;
&lt;p&gt;在 Python 中，函数是一段可重复使用的代码块，它接受一些输入（也称为参数）并产生一些输出。函数可以通过 &lt;code&gt;def&lt;/code&gt; 关键字来定义，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;function_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;This is a function&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# function body&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中，&lt;code&gt;function_name&lt;/code&gt; 是函数的名称，&lt;code&gt;parameters&lt;/code&gt; 是函数的参数列表，&lt;code&gt;function body&lt;/code&gt; 是函数的主体部分，包括需要执行的代码和可能的返回语句，&lt;code&gt;return value&lt;/code&gt; 是函数的返回值（如果有的话）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习4：流程控制</title>
      <link>https://blog.chensoul.cc/posts/2023/06/14/python-flow-control/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/14/python-flow-control/</guid>
      <description>&lt;p&gt;在 Python 中，流程控制语句包括条件语句（if-elif-else）、循环语句（for 和 while）、跳转语句（break、continue 和 return）和异常处理语句。&lt;/p&gt;
&lt;h2 id=&#34;条件语句&#34;&gt;条件语句&lt;/h2&gt;
&lt;p&gt;条件语句用于在不同的条件下执行不同的代码块。Python 中的条件语句是 if-elif-else 结构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习3：运算符和表达式</title>
      <link>https://blog.chensoul.cc/posts/2023/06/11/python-operator-and-expression/</link>
      <pubDate>Sun, 11 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/11/python-operator-and-expression/</guid>
      <description>&lt;p&gt;在 Python 中，运算符是用于执行各种操作的符号或关键字；表达式是由操作符、变量、常量和函数调用等组成的，它们可以被计算求值并返回一个结果。&lt;/p&gt;
&lt;p&gt;以下是一些常用的运算符和表达式：&lt;/p&gt;
&lt;h2 id=&#34;算术运算符&#34;&gt;算术运算符&lt;/h2&gt;
&lt;p&gt;Python 中的算术运算符用于执行基本的算术运算，包括加、减、乘、除、取模和幂运算。以下是一些常用的算术运算符：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习2：数据类型</title>
      <link>https://blog.chensoul.cc/posts/2023/06/10/python-data-type/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/10/python-data-type/</guid>
      <description>&lt;p&gt;Python 中的数据类型包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数字类型：包括整型、浮点型、复数型和布尔类型：只有两个取值，True 和 False，用于表示逻辑值。&lt;/li&gt;
&lt;li&gt;字符串类型：由一系列字符组成，可以是单引号、双引号或三引号括起来的文本。&lt;/li&gt;
&lt;li&gt;列表类型：由一系列有序的元素组成，可以包含任何类型的数据。&lt;/li&gt;
&lt;li&gt;元组类型：与列表类似，但是&lt;code&gt;元素不能被修改&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;集合类型：由一组唯一的元素组成，支持集合的基本操作，如并集、交集和差集等。&lt;/li&gt;
&lt;li&gt;字典类型：由一组键值对组成，其中键是唯一的，用于查找和存储值。&lt;/li&gt;
&lt;li&gt;None 类型：表示空值或缺失值。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数字&#34;&gt;数字&lt;/h2&gt;
&lt;p&gt;在 Python 中，数字类型包括整数（int）、浮点数（float）、复数（complex）和布尔值（bool）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]什么是 Python Wheels，你为什么要关心它？</title>
      <link>https://blog.chensoul.cc/posts/2023/06/01/python-wheels/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/01/python-wheels/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://files.realpython.com/media/What-are-Python-Wheels-and-Why-Should-You-Care_Watermarked.22246cad13be.jpg&#34; alt=&#34;What Are Python Wheels and Why Should You Care?&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;Python &lt;code&gt;.whl&lt;/code&gt; 文件或 &lt;a href=&#34;https://packaging.python.org/glossary/#term-wheel&#34; target=&#34;_blank&#34;&gt;wheels&lt;/a&gt; 是 Python 中很少被讨论的部分，但它们对 &lt;a href=&#34;https://realpython.com/python-modules-packages/&#34; target=&#34;_blank&#34;&gt;Python 包&lt;/a&gt;的安装过程大有裨益。如果您使用 &lt;a href=&#34;https://realpython.com/what-is-pip/&#34; target=&#34;_blank&#34;&gt;pip&lt;/a&gt; 安装了 Python 包，那么 Wheels 很可能使安装更快、更高效。&lt;/p&gt;
&lt;p&gt;Wheels 是 Python 生态系统的一个组件，有助于使包安装正常工作。它们允许更快的安装和更稳定的包分发过程。在本教程中，您将深入了解 Wheels 是什么，它们有什么好处，以及它们如何获得牵引力并使 Python 使用起来更加愉快。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]使用 Python 的 pip 管理项目的依赖关系</title>
      <link>https://blog.chensoul.cc/posts/2023/06/01/what-is-pip/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/01/what-is-pip/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg&#34; alt=&#34;Using Python&amp;rsquo;s pip to Manage Your Projects&amp;rsquo; Dependencies&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34; target=&#34;_blank&#34;&gt;Python&lt;/a&gt; 的标准包管理器是 &lt;a href=&#34;https://pip.pypa.io/en/stable/&#34; target=&#34;_blank&#34;&gt;pip&lt;/a&gt; 。它允许您安装和管理不属于 Python &lt;a href=&#34;https://docs.python.org/3/py-modindex.html&#34; target=&#34;_blank&#34;&gt;标准库&lt;/a&gt;的包。如果您正在寻找 &lt;code&gt;pip&lt;/code&gt; 的介绍，那么您来对地方了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在本教程中，您将学习如何：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在您的工作环境中设置 &lt;code&gt;pip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修复与使用 &lt;code&gt;pip&lt;/code&gt; 相关的常见错误&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;pip&lt;/code&gt; 安装和卸载包&lt;/li&gt;
&lt;li&gt;使用需求文件管理项目的依赖关系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; 可以做很多事情，但是 Python 社区非常活跃，已经创建了一些 &lt;code&gt;pip&lt;/code&gt; 的巧妙替代品。您将在本教程的后面部分了解这些内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习1：注释、变量和常量</title>
      <link>https://blog.chensoul.cc/posts/2023/05/23/python-comment-and-variable/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/05/23/python-comment-and-variable/</guid>
      <description>&lt;p&gt;Python 注释、变量和常量是编写 Python 代码时非常重要的概念，下面分别介绍它们的基本用法和语法。&lt;/p&gt;
&lt;h2 id=&#34;hello-world&#34;&gt;Hello World&lt;/h2&gt;
&lt;p&gt;创建一个 00_helloworld.py 文件，打印 hello world：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello，World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行该文件，会输出结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python 00_helloworld.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hello，World!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一般在 python 文件的开头第一行，我们都会看到下面的代码行：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python包和环境管理</title>
      <link>https://blog.chensoul.cc/posts/2023/05/09/python-package-and-env-management/</link>
      <pubDate>Tue, 09 May 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/05/09/python-package-and-env-management/</guid>
      <description>&lt;h2 id=&#34;发展历史&#34;&gt;发展历史&lt;/h2&gt;
&lt;p&gt;Python 包管理工具是 Python 生态系统中的一个重要组成部分，它们为 Python 开发者提供了方便、快捷的包管理方式。以下是 Python 包管理工具的发展历史概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1991 年：Python 语言首次发布，Python 包管理工具还未出现。&lt;/li&gt;
&lt;li&gt;1998 年：Python Distutils 工具发布，它是 Python 的第一个包管理工具，可以用于打包、安装和分发 Python 包。&lt;/li&gt;
&lt;li&gt;2004 年：easy_install 工具发布，它是一种用于安装、升级和卸载 Python 包的工具，可以自动解析依赖关系并安装所需的其他包。&lt;/li&gt;
&lt;li&gt;2007 年：pip 工具发布，它是 easy_install 的一个替代品，提供了更好的依赖项解析、升级和卸载功能，以及更好的用户体验。&lt;/li&gt;
&lt;li&gt;2012 年：Python 软件基金会宣布，pip 将成为 Python 包管理生态系统中的标准工具，取代 easy_install。&lt;/li&gt;
&lt;li&gt;2013 年：Wheel 格式发布，它是一种用于打包和分发 Python 包的格式，可以包含 C 扩展模块，并且支持多平台安装。&lt;/li&gt;
&lt;li&gt;2018 年：PEP 517 和 518 发布，它们提供了一种新的 Python 包构建和分发标准，可以使包构建和分发变得更加简单和可靠。&lt;/li&gt;
&lt;li&gt;2018 年：flit 工具发布，它是一种简单的 Python 包构建和分发工具，可以通过 pyproject.toml 文件来配置包的元数据和依赖项。&lt;/li&gt;
&lt;li&gt;2019 年：poetry 工具发布，它是一种专注于依赖管理和项目构建的 Python 包管理工具，可以自动解析依赖关系、构建项目、生成 lock 文件等。&lt;/li&gt;
&lt;li&gt;2020 年：PEP 621 发布，它是一种新的 Python 包元数据标准，可以用于定义 Python 包的元数据信息，如名称、版本、作者、许可证等。&lt;/li&gt;
&lt;li&gt;2020 年：PEP 636 发布，它是一种新的 CPython 扩展模块元数据标准，可以用于定义 CPython 扩展模块的元数据信息，如名称、版本、作者、许可证等。&lt;/li&gt;
&lt;li&gt;2021 年：flit 3 发布，它增加了对 PEP 621 和 PEP 636 的支持，可以使用 pyproject.toml 文件来定义 Python 包和 CPython 扩展模块的元数据信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyPA 是 Python Packaging Authority 的缩写，即 Python 包管理权威组织。PyPA 的目标是为 Python 社区提供一个标准的、易于使用的包管理工具和相关工具的生态系统，并提供相关的文档和规范。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python安装、构建、发布、下载和运行</title>
      <link>https://blog.chensoul.cc/posts/2023/05/09/python-install-build-publish-run/</link>
      <pubDate>Tue, 09 May 2023 00:00:00 +0800</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/05/09/python-install-build-publish-run/</guid>
      <description>&lt;p&gt;最近开始学习 python，这篇文章记录如何安装 python、搭建 python 开发环境，以及如何构建、发布 python 包。我使用的是 macos 系统，所以本篇文章中的一些命令是基于 macos ，特此说明。&lt;/p&gt;
&lt;h2 id=&#34;1安装&#34;&gt;1、安装&lt;/h2&gt;
&lt;p&gt;MacOS 上通过 brew 安装 Python3：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install python3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看 python3 安装路径：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
