<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>review on ChenSoul</title>
    <link>https://blog.chensoul.com/tags/review/</link>
    <description>Recent content in review on ChenSoul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 21 Jun 2023 17:00:00 +0800</lastBuildDate><atom:link href="https://blog.chensoul.com/tags/review/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>周报-24｜如果没有疼痛</title>
      <link>https://blog.chensoul.com/posts/2023/06/21/weekly_review_24/</link>
      <pubDate>Wed, 21 Jun 2023 17:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/06/21/weekly_review_24/</guid>
      <description>前言 本篇是对 2023-06-12 到 2023-06-18 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 读书、健身、投资、帮朋友、陪家人。 读书 本周尚未读</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-06-12</code> 到 <code>2023-06-18</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<blockquote>
<p>读书、健身、投资、帮朋友、陪家人。</p>
</blockquote>
<h2 id="读书">读书</h2>
<p>本周尚未读书。</p>
<h2 id="健身">健身</h2>
<blockquote>
<p>我跑过了一些地方，希望随着时间推移，地图点亮的地方越来越多。2 年里我跑过 2个省份 2个城市。更多跑步数据在我的 <a href="https://run.chensoul.com/">跑步</a> 主页。</p>
</blockquote>
<p>本周尚未跑步。</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 1264 元，明细如下：</p>
<ul>
<li>
<p>6月18日：338元</p>
</li>
<li>
<p>6月17日：508元</p>
</li>
<li>
<p>6月16日：262元</p>
</li>
<li>
<p>6月15日：27元</p>
</li>
<li>
<p>6月14日：41元</p>
</li>
<li>
<p>6月13日：40元</p>
</li>
<li>
<p>6月12日：48元</p>
</li>
</ul>
<h2 id="陪家人">陪家人</h2>
<p>本周因为老爸出院后需要人照料，所以我每天早晚往返于家（阳逻）和公司（光谷）之间。每天早上五点多就醒了，然后煮粥、招呼老爸吃饭喝药，六点半出门开车走三环去上班。这周请婶娘白天帮忙照顾老爸，主要是中午和晚上老爸要吃饭和喝药。我早上出门晚、晚上下班回来再照顾老爸。老爸胃溃疡，需要修养一个多月，另外最近痛风发作，身体多处关节疼痛。因为吃西药和打针都会伤胃，所以只能吃中药。中药见效慢，需要时间。而婶娘身上也有病，不能长期照顾，如果老爸这周痛风不能恢复，那下周只能老婆放下手上工作回来照顾老爸。老婆工作也是非常忙碌，也不能照顾太久，估计也就一个星期。如果过了一个星期，老爸还是不能恢复、不能生活自理，真不知道该怎么办了！很久之前就想到老爸可能会成为我的负担，影响我的工作，没有想到会来的这么快。有时候想抱怨，但抱怨有什么用？面对眼前的这一切，只能迎难面对。造成眼前这样的现状，我自己有一部分责任。都只怪我平时没有关心老爸，没有叮嘱老爸不要喝酒，在老爸身边陪伴的时间太少了。</p>
<p>周六去给岳父岳母送端午节，周日回去看望癌症转移到全身的六舅。六舅是乳腺癌，在经历了去年新冠疫情之后，癌细胞转移到肺部。年后没有引起足够的重视，直到痛的不行的时候才去医院做手术，错过了最佳治疗时机。上一次见到六舅还是四月份的时候，我开车带老婆一起回去看望老爸。那时候六舅还在菜园里面朝黄土背朝天，六舅给了我一些莴笋、包菜，老婆给六舅3百块钱，六舅硬是不要，拉扯了半天。走之前，六舅还叫何舅塞了20多个鸡蛋给我们。这次，再见六舅，六舅躺在床上全身疼痛，只能吃些流食，意识模糊，知道谁来看望她，却不能说话。每次开车上下班的时候，想起六舅这样子，心里就很难受，眼泪直打转。面对生老病死，成年人的崩溃只在一瞬间。昨日还在你面前混蹦乱跳的人，明天可能就不在了。为了不留遗憾，要善待身边的每一位亲人，常回家看看。感谢老婆总是提醒我要回家看望老爸，正是因为这个，每次回家看望老爸的时候，我都会去看下六舅。</p>
<p>如果没有疼痛，老爸和六舅就不会痛苦了，身边的人也就不会心痛。</p>
<h2 id="工作">工作</h2>
<p>最近在学习的内容清单：</p>
<ul>
<li><a href="https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/tree/dev">Effective Java（第 3 版）</a></li>
<li><a href="https://java-design-patterns.com/zh/">Java Design Patterns (中文)</a></li>
<li><a href="https://realpython.com/">Real Python</a></li>
</ul>
<p>本周完成四篇博客：</p>
<ul>
<li>
<p><a href="/posts/2023/06/21/modern-css-explained-for-dinosaurs/">[译]为恐龙解释现代CSS</a></p>
</li>
<li>
<p><a href="/posts/2023/06/20/modern-html-explained-for-dinosaurs/">[译]为恐龙解释现代HTML</a></p>
</li>
<li>
<p><a href="/posts/2023/06/19/modern-javascript-explained-for-dinosaurs/">[译]为恐龙解释现代JavaScript</a></p>
</li>
<li>
<p><a href="/posts/2023/06/15/minimize-the-accessibility-of-classes-and-members/">《Effective Java 3》笔记15：尽量减少类和成员的可访问性</a></p>
</li>
</ul>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">Memos</a> 中。我写了一个 Python 脚本从 Memos 读取最近一周带有 <code>#memos</code> 标签的记录，分享到这里。</p>
<ul>
<li>📌<code>2023-06-14</code> 现代 JavaScript 教程，以最新的 JavaScript 标准为基准。通过简单但足够详细的内容，为你讲解从基础到高阶的 JavaScript 相关知识。 <a href="https://zh.javascript.info/">https://zh.javascript.info/</a>  <code>#memos</code> <code>#javascript</code></li>
<li>📌<code>2023-06-14</code> 推荐几个远程办公招聘网站，国外的 <a href="https://nomadlist.com/">https://nomadlist.com/</a> <a href="https://remotive.com/">https://remotive.com/</a> <a href="https://remoteok.com/">https://remoteok.com/</a> <a href="https://www.huntsbot.com/">https://www.huntsbot.com/</a> <a href="https://www.freelancer.cn/jobs">https://www.freelancer.cn/jobs</a>  <code>#memos</code></li>
<li>📌<code>2023-06-14</code> 拒绝 996，谈谈远程办公一年多的感受  <a href="https://www.v2ex.com/t/947355">https://www.v2ex.com/t/947355</a>    <code>#memos</code></li>
<li>📌<code>2023-06-14</code> 新手入门Python该如何学，学什么，学多久？看完这些你就明白了<code>#memos</code> <code>#python</code> <a href="https://blog.csdn.net/libaiup/article/details/131083707">https://blog.csdn.net/libaiup/article/details/131083707</a></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-23｜读书、健身、定投、帮朋友、陪家人</title>
      <link>https://blog.chensoul.com/posts/2023/06/14/weekly_review_23/</link>
      <pubDate>Wed, 14 Jun 2023 15:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/06/14/weekly_review_23/</guid>
      <description>前言 本篇是对 2023-06-05 到 2023-06-11 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 读书、健身、投资、帮朋友、陪家人。 以后周报的主题</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-06-05</code> 到 <code>2023-06-11</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<blockquote>
<p>读书、健身、投资、帮朋友、陪家人。</p>
</blockquote>
<p>以后周报的主题，会包括这几个部分：读书、健身、投资、帮朋友、陪家人，再加上工作和本周分享两块内容。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-23-03.png" alt="weekly-review-23-03" style="width:50%;" />
<h2 id="读书">读书</h2>
<p>本周阅读统计，总计阅读31分钟：</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-23-01.jpeg" alt="weekly-review-23-01" style="width:50%;" />
<p>本周阅读摘抄：</p>
<ul>
<li>人是周围6个人的平均值，如果你身边没有特别出色的年轻人与你为伍，你就找先贤们的书籍，他们把一生的所有思考、智慧、经历和情感，都倾注在那些书里头了。 如果有一天跟你共鸣的，全都是古往今来、古今中外那些最智慧、最深刻、最敏锐、最丰富、最博学的大脑，你大概率不会太差，你的精神世界也大概率会非常丰富。 “we are all in the gutter ，but some of us are looking at stars。” 这句话来自一个爱尔兰的诗人，叫做奥斯卡·王尔德：“我们都身处在阴沟里，但总有人仰望星空。”</li>
<li>“ Three passions, simple but overwhelmingly strong, have governed my life: the longing for love, the search for knowledge, and unbearable pity for the suffering of mankind. ”  这是来自于罗素的一个演讲，叫做《我为什么而活着》，意思是：对知识的渴望，对爱情的追求，对人类苦难难以遏制的同情心，这三种简单而强烈的激情，苦苦支配我的一生</li>
</ul>
<h2 id="健身">健身</h2>
<blockquote>
<p>我跑过了一些地方，希望随着时间推移，地图点亮的地方越来越多。2 年里我跑过 2个省份 2个城市。更多跑步数据在我的 <a href="https://run.chensoul.com/">跑步</a> 主页。</p>
</blockquote>
<p>这周因为父亲住院需要照顾他，所以跑步暂停。</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 5006 元，明细如下：</p>
<ul>
<li>
<p>6月11日：4057元，父亲出院支付3475元</p>
</li>
<li>
<p>6月10日：108元</p>
</li>
<li>
<p>6月9日：86元</p>
</li>
<li>
<p>6月8日：367元</p>
</li>
<li>
<p>6月7日：179元</p>
</li>
<li>
<p>6月6日：117元</p>
</li>
<li>
<p>6月5日：92元</p>
</li>
</ul>
<h2 id="陪家人">陪家人</h2>
<p>本周的工作和生活都因为老爸住院而打乱了原来的节奏。起因是老爸因为痛风关节疼痛而服用了双氯芬酸钠缓释片导致胃溃疡和出血，另外最近两个月大便呈黑色、血液流失过多，导致严重贫血。周六先是去武汉中心医院做胃镜检查，医生看到老爸的脸色苍白，建议做个血液检测。检查结果出来之后，心有余悸，如果再晚点带老爸来医院做检查，不知道老爸会因贫血而出现怎样的事情。根据检查结果，医生建议立即住院。在经过考虑之后，决定回阳逻住院。住院期间，需要亲属陪护，于是周一到周三请了三天假，周四和周五换老婆过来照顾。</p>
<p>住院期间，老爸心里烦，因为痛风发作，腿脚走路没力气，大小便不方便。作为儿子的我也在反思，老爸成这样，都怪我平时没有关心他的健康和生活。老爸今天让我吃的苦都是因为过去在老爸身上的付出不够。</p>
<h2 id="工作">工作</h2>
<p>最近在学习的内容清单：</p>
<ul>
<li><a href="https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/tree/dev">Effective Java（第 3 版）</a></li>
<li><a href="https://java-design-patterns.com/zh/">Java Design Patterns (中文)</a></li>
<li><a href="https://realpython.com/">Real Python</a></li>
</ul>
<p>本周完成三篇博客：</p>
<ul>
<li><a href="/posts/2023/06/10/java-design-patterns-adapter/">Java设计模式：Adapter</a></li>
<li><a href="/posts/2023/06/10/python-data-type/">Python学习2：数据类型</a></li>
<li><a href="/posts/2023/06/11/python-operator-and-expression/">Python学习3：运算符和表达式</a></li>
</ul>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-23-02.png" alt="weekly-review-23-02"  />
</p>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">Memos</a> 中。我写了一个 Python 脚本从 Memos 读取最近一周带有 <code>#memos</code> 标签的记录，分享到这里。</p>
<ul>
<li>
<p>📌<code>2023-06-10</code> 如何用 ChatGPT 助力开发: 已经有 15 万人看过的经验分享<code>#memos</code> <a href="http://luolei.org/chatgpt-in-development/">http://luolei.org/chatgpt-in-development/</a></p>
</li>
<li>
<p>📌<code>2023-06-09</code> Rust语言实战，视频和教程  <a href="https://www.youtube.com/watch?v=BpPEoZW5IiY">https://www.youtube.com/watch?v=BpPEoZW5IiY</a> <a href="https://zh.practice.rs/why-exercise.html">https://zh.practice.rs/why-exercise.html</a>  <code>#memos</code> <code>#rust</code></p>
</li>
<li>
<p>📌<code>2023-06-09</code> 基于 Spring Cloud 使用一致性哈希算法实现分布式 WebSocket. / 基于 RabbitMQ 广播实现分布式 WebSocket. <a href="https://lawrenceli.me/blog/websocket-cluster">https://lawrenceli.me/blog/websocket-cluster</a>    <code>#memos</code> <code>#java</code> <code>#skill</code></p>
</li>
<li>
<p>📌<code>2023-06-09</code> REST 和 gRPC 是 API 的两种最流行的实现方法，本文详细比较它们的差异。 <a href="https://kreya.app/blog/rest-vs-grpc/">https://kreya.app/blog/rest-vs-grpc/</a> <code>#memos</code></p>
</li>
<li>
<p>📌<code>2023-06-08</code> 痛苦是对的，焦虑也是对的，痛苦的本质来源于你对现状的不满，然后焦虑的本质来源于你成长速度太慢。<code>#memos</code></p>
</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-22｜微信读书笔记助手</title>
      <link>https://blog.chensoul.com/posts/2023/06/09/weekly_review_22/</link>
      <pubDate>Fri, 09 Jun 2023 09:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/06/09/weekly_review_22/</guid>
      <description>前言 本篇是对 2023-05-29 到 2023-06-04 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 读书、健身、定投、帮朋友、陪家人，本周周报增加一</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-05-29</code> 到 <code>2023-06-04</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>读书、健身、定投、帮朋友、陪家人，本周周报增加一块内容：读书，记录每周读书的时间。</p>
<h2 id="微信读书笔记助手">微信读书笔记助手</h2>
<p>最近注销了微信阅读账号，清空了历史数据。本着宁缺毋滥的原则，书架重新添加了几本书。计划是重新使用微信阅读养成读书的习惯。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-03.png" alt="weekly-review-22-03"  />
</p>
<p>在chrome浏览器添加了一个插件 <a href="https://chrome.google.com/webstore/detail/%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%8A%A9%E6%89%8B/cmlenojlebcodibpdhmklglnbaghpdcg">微信读书笔记助手</a> ，可以将读书笔记一键导出为 markdown 格式。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-02.png" alt="weekly-review-22-02" style="width:50%;" />
<p>导出的内容标注是一个标注一个段落，段落之间有一个换行。段落后面可以添加自己的思考（比如，用红色标注颜色）。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-07.png" alt="weekly-review-22-07"  />
</p>
<h2 id="读书">读书</h2>
<p>本周阅读统计（图片来自微信阅读 app 分享）：</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-01.png" alt="weekly-review-22-01" style="width:50%;" />
<h2 id="理财">理财</h2>
<p>这周总计支出 2528 元，明细如下：</p>
<ul>
<li>6月4日：138元</li>
<li>6月3日：1650元，医院看病1600</li>
<li>6月2日：61元</li>
<li>6月1日：0元</li>
<li>5月31日：108元</li>
<li>5月30日：625元，公司停车场费用600</li>
<li>5月29日：41元</li>
</ul>
<h2 id="健身">健身</h2>
<blockquote>
<p>我跑过了一些地方，希望随着时间推移，地图点亮的地方越来越多。2 年里我跑过 2个省份 2个城市。更多跑步数据在我的 <a href="https://run.chensoul.com/">跑步</a> 主页。</p>
</blockquote>
<p>本周跑步 42.66 公里，最长跑步距离为 9.2 公里。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-04.png" alt="weekly-review-22-04"  />
</p>
<p>明细数据如下：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-05.png" alt="weekly-review-22-05"  />
</p>
<p>在朋友圈发了一个5月跑步500公里动态，一个高中同学建议我不要过度跑步，最好是跑步一天休息一天，以免伤了膝盖。受他影响，受他影响，6月1日没有跑步，6月3日和4日，带老爸去医院做检查，所以没有跑步。照此看来，6月连续跑步30天、累计200公里的目标铁定是完成不了，所以及时调整目标和计划，还是以长期主义的思路保持跑步的习惯，不求数量。</p>
<h2 id="工作">工作</h2>
<p>最近在学习的内容清单：</p>
<ul>
<li><a href="https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/tree/dev">Effective Java（第 3 版）</a></li>
<li><a href="https://java-design-patterns.com/zh/">Java Design Patterns (中文)</a></li>
<li><a href="https://realpython.com/">Real Python</a></li>
</ul>
<p>本周完成四篇博客：</p>
<ul>
<li>
<p><a href="/posts/2023/06/02/java-design-patterns-visitor/">Java设计模式：Visitor</a></p>
</li>
<li>
<p><a href="/posts/2023/06/01/java-design-patterns-acyclic-visitor/">Java设计模式：Acyclic Visitor</a></p>
</li>
<li>
<p><a href="/posts/2023/06/01/what-is-pip/">[译]使用 Python 的 pip 管理项目的依赖关系</a></p>
</li>
<li>
<p><a href="/posts/2023/06/01/python-wheels/">[译]什么是 Python Wheels，你为什么要关心它？</a></p>
</li>
</ul>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-22-06.png" alt="weekly-review-22-06"  />
</p>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中。我写了一个 python 脚本从 memos读取最近一周的 memos 记录。</p>
<ul>
<li>📌<code>2023-05-31</code> 看到一个很适合新手入门「数据结构与算法」的开源书《Hello 算法》，通过动画图解结构化地讲解数据结构和算法知识，内容清晰易懂、学习曲线挺平滑，代码上支持 Java,C++, Python, Go, JS, TS, CSharp, Swift 一键运行看效果，比市面上卖的普通书好不少。 🤖 <a href="https://hello-algo.com">https://hello-algo.com</a> <code>#memos</code> <code>#skill</code></li>
<li>📌<code>2023-05-31</code> 今日重磅开源库推荐 - Plane  <a href="https://github.com/makeplane/plane">https://github.com/makeplane/plane</a>  Jira 的开源版平替，有很多人都讨厌 Jira，觉得它复杂难用。  Plane 完全开源，而且界面要简洁舒服易用很多。 部署方便快捷, 支持 Docker 部署。 还很贴心的支持从 Github 以及 Jira 直接导入。  想尝试新的项目管理工具的朋友可以尝试一下。<code>#memos</code> <code>#tool</code></li>
<li>📌<code>2023-05-31</code> 「Next.js 应用开发实践」 <a href="https://nextjs-in-action-cn.taonan.lu/">https://nextjs-in-action-cn.taonan.lu/</a>   <code>#memos</code> <code>#web</code></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-21｜Python之禅、产品经理被优化、端午节送节</title>
      <link>https://blog.chensoul.com/posts/2023/05/31/weekly_review_21/</link>
      <pubDate>Wed, 31 May 2023 09:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/05/31/weekly_review_21/</guid>
      <description>前言 公司价值观 本篇是对 2023-05-22 到 2023-05-28 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 周一，休产假的产品经理回来上班，得知她</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-21-00.jpg" alt="weekly-review-21-00"  />
</p>
<p>
  <center><i>公司价值观</i></center>
</p>
<p>本篇是对 <code>2023-05-22</code> 到 <code>2023-05-28</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>周一，休产假的产品经理回来上班，得知她被优化之后，内心有些不舍和伤感。中午，组长请大家一起吃了饭。晚上，产品经理交割完办公用户之后，就没来上班了。自此，过完年后，公司至少有三位女同事修完产假之后就离职了，有的是主动，更多的应该是被动。虽然有N+1赔偿，但是，这个社会对女性还是不够公平。</p>
<p>还有3个月就要到端午节，老婆买了粽叶包粽子，我也动手包了一部分。虽然包的不好看，但心里还是很满足的。自己包的粽子送节，显然更有意义。结婚之后的第一个端午节，周末开车去给长辈送了端午节。看着长辈们的头发日渐斑白，不禁感叹岁月无情。趁着年轻的时候，要对身边的亲人好一些。不要等到来不及了才知道后悔。</p>
<p>这周在 docker 里部署了 Plausible ，使用过程中发现 Plausible 架构过于复杂，使用了 postgres 和 clickhouse 数据库，docker-compose 启动了4个容器，所以最后还是放弃了使用 Plausible。umami 的 postgres 数据库只包括几张表，操作起来比较容易，比如：时不时地，我会把来自 localhost 的访问记录删除掉，这样统计数据更加真实准确。</p>
<h2 id="python之禅">Python之禅</h2>
<p>这是最近的一个 PyTricks：在 python REPL 里面输入 <code>import this</code> 会输出 <code>The Zen of Python, by Tim Peters</code>：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-21-03.png" alt="weekly-review-21-03"  />
</p>
<p>英文：</p>
<blockquote>
<p>The Zen of Python, by Tim Peters</p>
<p>Beautiful is better than ugly.</p>
<p>Explicit is better than implicit.</p>
<p>Simple is better than complex.</p>
<p>Complex is better than complicated.</p>
<p>Flat is better than nested.</p>
<p>Sparse is better than dense.</p>
<p>Readability counts.</p>
<p>Special cases aren&rsquo;t special enough to break the rules.</p>
<p>Although practicality beats purity.</p>
<p>Errors should never pass silently.</p>
<p>Unless explicitly silenced.</p>
<p>In the face of ambiguity, refuse the temptation to guess.</p>
<p>There should be one&ndash; and preferably only one &ndash;obvious way to do it.</p>
<p>Although that way may not be obvious at first unless you&rsquo;re Dutch.</p>
<p>Now is better than never.</p>
<p>Although never is often better than <em>right</em> now.</p>
<p>If the implementation is hard to explain, it&rsquo;s a bad idea.</p>
<p>If the implementation is easy to explain, it may be a good idea.</p>
<p>Namespaces are one honking great idea &ndash; let&rsquo;s do more of those!</p>
</blockquote>
<p>中文：</p>
<blockquote>
<p>Python之禅，作者为Tim Peters</p>
<p>美丽胜于丑陋。</p>
<p>明确胜于含蓄。</p>
<p>简单胜于复杂。</p>
<p>复杂胜于繁琐。</p>
<p>扁平胜于嵌套。</p>
<p>宽松胜于紧凑。</p>
<p>可读性很重要。</p>
<p>特例并不足以打破规则。</p>
<p>虽然实用性优先于纯粹性。</p>
<p>错误绝不能悄悄地通过。</p>
<p>除非明确地沉默。</p>
<p>面对模棱两可，拒绝猜测。</p>
<p>应该有一种&ndash; 最好只有一种 &ndash;显而易见的方法来做到这一点。</p>
<p>虽然这种方法可能一开始并不明显，除非你是荷兰人。</p>
<p>现在比永远好。</p>
<p>虽然永远不如 <em>现在就做</em> 好。</p>
<p>如果实现很难解释，那这是个坏主意。</p>
<p>如果实现容易解释，那可能是个好主意。</p>
<p>名称空间是一个非常好的想法 &ndash; 让我们做更多的这样的事情！</p>
</blockquote>
<p>Python之禅是一组编写Python语言程序的指导原则，由著名Python开发者Tim Peters撰写而成，这些格言反映了Python社区的哲学。</p>
<p>第一原则“美丽胜于丑陋”强调编写美学上令人愉悦且易于阅读的代码的重要性，包括使用适当的缩进、命名规范和格式化。</p>
<p>第二原则“明确胜于含蓄”强调在代码中要清晰明确，避免捷径并尽可能具体地定义代码。</p>
<p>第三原则“简单胜于复杂”强调编写易于理解和维护的代码的重要性，包括避免不必要的复杂性并尽可能使用简单的解决方案。</p>
<p>第四原则“复杂胜于繁琐”强调在必要时使用复杂的解决方案，但避免过度复杂。</p>
<p>第五原则“扁平胜于嵌套”强调保持代码简单，避免深度嵌套结构。</p>
<p>第六原则“宽松胜于紧凑”强调使用空格和格式化使代码更易读。</p>
<p>第七原则“可读性很重要”强调编写易于阅读和理解的代码的重要性。</p>
<p>第八原则“特例并不足以打破规则”强调即使在可能会偏离规则的情况下，也要遵循最佳实践和已有约定。</p>
<p>第九原则“虽然实用性优先于纯粹性”强调平衡实用考虑与对优雅和纯粹代码的渴望。</p>
<p>第十原则“错误绝不能悄悄地通过”强调捕捉和处理代码中的错误，而不是忽略它们。</p>
<p>第十一原则“除非明确地沉默”强调在适当情况下允许有意地消除错误信息。</p>
<p>第十二原则“面对模棱两可，拒绝猜测”强调要在代码中清晰明确，即使在存在歧义或不确定性的情况下也要如此。</p>
<p>第十三原则“应该有一种&ndash; 最好只有一种 &ndash;显而易见的方法来做到这一点”强调遵循已有的约定和规范，避免不必要的复杂或曲折的解决方案。</p>
<p>第十四原则“虽然这种方法可能一开始并不明显，除非你是荷兰人”是对Python的创建者Guido van Rossum是荷兰人这一事实的玩味性致敬。</p>
<p>第十五原则“现在比永远好”强调采取行动并推进你的代码，而不是拖延或拖沓。</p>
<p>第十六原则“虽然永远不如 <em>现在就做</em> 好”强调要花时间仔细考虑你的代码，避免匆忙解决可能不是最优解的问题。</p>
<p>第十七原则“如果实现很难解释，那这是个坏主意”强调编写易于理解和解释给他人的代码的重要性。</p>
<p>第十八原则“如果实现容易解释，那可能是个好主意”强调编写简单明了、易于解释的代码的重要性。</p>
<p>第十九原则“名称空间是一个非常好的想法 &ndash; 让我们做更多的这样的事情！”强调使用名称空间以清晰易懂的方式组织和结构化你的代码。名称空间有助于避免命名冲突，并使查找和重用代码更容易。</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 1939 元，明细如下：</p>
<ul>
<li>5月28日：1064元，加油充值1000元</li>
<li>5月27日：642元，端午节送节买酒540元</li>
<li>5月26日：173元</li>
<li>5月25日：17元</li>
<li>5月24日：7元</li>
<li>5月23日：20元</li>
<li>5月22日：16元</li>
</ul>
<h2 id="健身">健身</h2>
<blockquote>
<p>我跑过了一些地方，希望随着时间推移，地图点亮的地方越来越多。2 年里我跑过 2个省份 2个城市。更多跑步数据在<a href="https://run.chensoul.com/">跑步</a>主页。</p>
</blockquote>
<p>本周跑步 39 公里，最长跑步距离为 6 公里。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-21-05.png" alt="weekly-review-21-05"  />
</p>
<p>明细数据如下：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-21-06.png" alt="weekly-review-21-06"  />
</p>
<p>5月份即将结束，目前这个月跑了 24天，累计 178 公里，比 4月的125公里多了 53 公里。再跑个12公里，这个月跑步里程就可以达到190公里了，给自己加油！最长连续跑步时间为 7 天，每次都是到了周末就中断了，有点遗憾。回过头来想想，跑步是一个长期的事情，比起跑的远，更重要的是跑的久。争取每天都跑，不管跑几公里，只要坚持下去就是成功。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-21-04.png" alt="weekly-review-21-04"  />
</p>
<h2 id="工作">工作</h2>
<p>最近在学习的内容清单：</p>
<ul>
<li><a href="https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/tree/dev">Effective Java（第 3 版）</a></li>
<li><a href="https://java-design-patterns.com/zh/">Java Design Patterns (中文)</a></li>
<li><a href="https://realpython.com/">Real Python</a></li>
</ul>
<p>本周完成四篇博客：</p>
<ul>
<li><a href="/posts/2023/05/26/always-override-tostring/">《Effective Java 3》笔记12：当覆盖 equals 方法时，总要覆盖 hashCode 方法</a></li>
<li><a href="/posts/2023/05/26/override-clone-judiciously/">《Effective Java 3》笔记13：明智地覆盖 clone 方法</a></li>
<li><a href="/posts/2023/05/26/consider-implementing-comparable/">《Effective Java 3》笔记14：考虑实现 Comparable 接口</a></li>
<li><a href="/posts/2023/05/26/java-design-patterns-active-object/">Java设计模式：Active Object</a></li>
</ul>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-21-07.png" alt="weekly-review-21-07"  />
</p>
<p>至此，《Effective Java 3》第三章学习完了。第三章介绍了Java中对象的创建和销毁，其中第三章讲述了所有对象通用的方法，主要内容如下：</p>
<ol>
<li>equals方法：用于比较两个对象是否相等，需要遵循一些通用约定，包括自反性、对称性、传递性、一致性和非空性等。</li>
<li>hashCode方法：用于返回对象的哈希码，需要与equals方法一起实现，保证相等的对象具有相等的哈希码。</li>
<li>toString方法：用于返回对象的字符串表示形式，方便调试和日志记录等。</li>
<li>clone方法：用于复制对象，需要实现Cloneable接口，并覆盖Object类中的clone方法。</li>
<li>finalize方法：用于在对象被垃圾回收前执行一些清理操作，但是该方法的使用非常危险，应该尽量避免使用。</li>
</ol>
<p>本章重点介绍了所有对象通用的方法，这些方法在Java中非常重要，需要程序员掌握。equals和hashCode方法是一对重要的方法，需要同时实现，保证对象的相等和哈希码的正确性。toString方法可以方便地输出对象的信息，方便调试和日志记录等。clone方法可以用于复制对象，但需要注意实现Cloneable接口，并覆盖Object类中的clone方法。最后，finalize方法虽然可以用于对象清理，但是使用非常危险，应该尽量避免使用。</p>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中。我写了一个 python 脚本从 memos读取最近一周的 memos 记录。</p>
<ul>
<li>📌<code>2023-05-27</code> 365资讯简报，每天精选15条热点新闻简报1条微语，每天一分钟，知晓天下事！  2023年5月26日 星期五 农历四月初八  1、工信部等十四部门：部署推进新一轮电信基础设施共建共享工作。  2、两高两部：对在校园等场所对未成年人实施猥亵等犯罪的，加重处罚。  3、国家疾控局：4月全国报告法定传染病超210万例。  4、集体婚礼走红，民政部推行婚俗改革，高价彩礼得到有效遏制。  5、广东出台办法：失信联合惩戒对象不得报名参加事业单位招聘。  6、北京：新冠连续4周列传染病榜首，上周报告发病数是4月底的近4倍。  7、天津：在津无房家庭首次公积金贷款还清后，仍可按首套房贷款。  8、上海部分社区开打mRNA新冠疫苗，可通过“健康云”预约。  9、17级超强台风&quot;玛娃&quot;已成今年以来全球风王，下周将影响我国南方。  10、长城汽车公开举报比亚迪：两款车型污染物排放不达标，比亚迪回应：检测报告无效，反对任何形式不正当竞争。  11、微信电脑版新增锁定功能，只能通过手机端解锁。  12、韩自研运载火箭“世界”号载星发射成功。  13、造假数量超2亿件！最长可追溯40年前！本田合资零部件厂商承认造假。  14、普京：俄罗斯正减少不友好国家货币在贸易结算中的份额。  15、美情报披露：克宫遭无人机袭击幕后黑手为乌克兰。  【微语】真正的贫穷，不是金钱上的匮乏，而是认知上的贫瘠。  新闻来源：<a href="https://www.163.com/dy/article/I5L6PQL30534QBVQ.html?spss=dy_author">https://www.163.com/dy/article/I5L6PQL30534QBVQ.html?spss=dy_author</a>  <code>#每日早报</code> <code>#memos</code></li>
<li>📌<code>2023-05-26</code> 365资讯简报，每天精选15条热点新闻简报1条微语，每天一分钟，知晓天下事！  2023年5月25日 星期四 农历四月初七  1、教育部：2023年为中西部乡镇定向免费培养本科医学生6150人。  2、中国互联网协会：警惕AI换脸新骗局，远程转账务必多重验证。  3、交通运输部在南沙群岛火艾礁、牛轭礁和南薰礁附近海域布设3座灯浮标。  4、数据显示：今年以来全国已有超40城调整首套房贷利率下限至4%以下。  5、财政部：4月份全国共销售彩票503.26亿元，同比增长62.0%。  6、吉林省印发公务接待新办法：不得安排群众迎送，公务接待工作餐每人不超120元。  7、香港：调整签证及进入许可申请流程，外佣及学生等须申报刑事记录。  8、广东海珠：举报电动车进出租屋充电等，最高奖励1万元。  9、韩国三大运营商夸大5G网速被罚336亿韩元：号称20G实际800M。  10、51岁马斯克公开回应：已确定特斯拉接班人，若我出现意外，可以确保公司继续运营下去。  11、微软发布重磅更新：Windows系统全面接入AI助手，ChatGPT内置必应搜索最新答案。  12、岸田文雄称日本正考虑设立北约联络处但不会加入北约，中方回应：不欢迎军事集团。  13、俄罗斯：俄中之间70％的跨境结算已用本币完成。  14、英国首相苏纳克拒绝停火呼吁，称乌克兰应该继续战斗。  15、俄媒：乌克兰最高将领在俄军攻击中受重伤，可能将无法继续指挥。  【微语】放弃不难，但坚持一定很酷。撑住，才有后来的一切。  新闻来源：<a href="https://www.163.com/dy/article/I5IJEHQK0534QBVQ.html?spss=dy_author">https://www.163.com/dy/article/I5IJEHQK0534QBVQ.html?spss=dy_author</a>  <code>#每日早报</code> <code>#memos</code></li>
<li>📌<code>2023-05-25</code> 365资讯简报，每天精选15条热点新闻简报1条微语，每天一分钟，知晓天下事！  2023年5月25日 星期四 农历四月初七  1、教育部：2023年为中西部乡镇定向免费培养本科医学生6150人。  2、中国互联网协会：警惕AI换脸新骗局，远程转账务必多重验证。  3、交通运输部在南沙群岛火艾礁、牛轭礁和南薰礁附近海域布设3座灯浮标。  4、数据显示：今年以来全国已有超40城调整首套房贷利率下限至4%以下。  5、财政部：4月份全国共销售彩票503.26亿元，同比增长62.0%。  6、吉林省印发公务接待新办法：不得安排群众迎送，公务接待工作餐每人不超120元。  7、香港：调整签证及进入许可申请流程，外佣及学生等须申报刑事记录。  8、广东海珠：举报电动车进出租屋充电等，最高奖励1万元。  9、韩国三大运营商夸大5G网速被罚336亿韩元：号称20G实际800M。  10、51岁马斯克公开回应：已确定特斯拉接班人，若我出现意外，可以确保公司继续运营下去。  11、微软发布重磅更新：Windows系统全面接入AI助手，ChatGPT内置必应搜索最新答案。  12、岸田文雄称日本正考虑设立北约联络处但不会加入北约，中方回应：不欢迎军事集团。  13、俄罗斯：俄中之间70％的跨境结算已用本币完成。  14、英国首相苏纳克拒绝停火呼吁，称乌克兰应该继续战斗。  15、俄媒：乌克兰最高将领在俄军攻击中受重伤，可能将无法继续指挥。  【微语】放弃不难，但坚持一定很酷。撑住，才有后来的一切。  新闻来源：<a href="https://www.163.com/dy/article/I5IJEHQK0534QBVQ.html?spss=dy_author">https://www.163.com/dy/article/I5IJEHQK0534QBVQ.html?spss=dy_author</a>  <code>#每日早报</code> <code>#memos</code></li>
<li>📌<code>2023-05-25</code>  前后端均基于 vercel 的每日早报项目 <a href="https://icodeq.com/2022/5fe2010403bb/">https://icodeq.com/2022/5fe2010403bb/</a>  <code>#memos</code></li>
<li>📌<code>2023-05-24</code> GitHub - resumejob/awesome-resume: Resume，Resume Templates，程序员简历例句，简历模版<code>#memos</code> <a href="https://github.com/resumejob/awesome-resume">https://github.com/resumejob/awesome-resume</a></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-20｜自动生成每日早报、周末团建</title>
      <link>https://blog.chensoul.com/posts/2023/05/25/weekly_review_20/</link>
      <pubDate>Thu, 25 May 2023 17:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/05/25/weekly_review_20/</guid>
      <description>前言 乐农湖畔生态园 本篇是对 2023-05-15 到 2023-05-21 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 不知不觉，这已经是第20篇周报了。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-00.jpeg" alt="weekly-review-20-00"  />
</p>
<center><i>乐农湖畔生态园</i></center>
<br/>
<p>本篇是对 <code>2023-05-15</code> 到 <code>2023-05-21</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>不知不觉，这已经是第20篇周报了。这周依旧是健身、理财、学习和写博客。</p>
<h2 id="自动生成每日早报">自动生成每日早报</h2>
<p>最近在朋友圈看到这样一个早报，就在想能否通过代码自动抓取新闻并生成这样一个早报图片？</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-04.jpeg" alt="weekly-review-20-04" style="width:50%;" />
<p>于是，在网上找到一篇文章：<a href="https://icodeq.com/2022/5fe2010403bb/">前后端均基于 vercel 的每日早报项目</a></p>
<p>参考源代码，做了一些修改，代码见：<a href="https://github.com/chensoul/chensoul/blob/main/fetch_news.py">fetch_news.py</a>。修改后的逻辑是将抓取的新闻发送到 memos，例如：<a href="https://memos.chensoul.com/m/349">https://memos.chensoul.com/m/349</a> 。可以在 github action 设置每天早上7点自动发送到 memos，然后再通过 n8n 同步到 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-01.png" alt="weekly-review-20-01" style="width: 50%;" />
<p>在memos中导出的图片如下：</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-05.png" alt="weekly-review-20-05" style="width:50%;" />
<p>如果能够通过 python 自动生成图片，那就更好了。记录一下，待以后实现。</p>
<h2 id="团建">团建</h2>
<p>公司团建选择在周六，而且还是520这一天，真是会挑日子。很多人请假，最后只有13人参加团建，其中有8人是我们开发组的🤣。挑两张照片发到这里～</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-03.jpeg" alt="weekly-review-20-03"  />
</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-02.jpeg" alt="weekly-review-20-02"  />
</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 1861 元，明细如下：</p>
<ul>
<li>5月15日：1027元，武功山旅游，加油327</li>
<li>5月16日：42元</li>
<li>5月17日：12元</li>
<li>5月18日：16元</li>
<li>5月19日：25元</li>
<li>5月20日：562元，看望六舅</li>
<li>5月21日：177元</li>
</ul>
<h2 id="健身">健身</h2>
<p>本周跑步 36 公里，最长跑步距离为 10 公里。明细数据如下：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-08.png" alt="weekly-review-20-08"  />
</p>
<p>我跑过了一些地方，希望随着时间推移，地图点亮的地方越来越多。2 年里我跑过 2个省份 2个城市。更多跑步数据在<a href="https://run.chensoul.com/">跑步</a>主页。</p>
<h2 id="工作">工作</h2>
<h4 id="博客">博客</h4>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-20-07.png" alt="weekly-review-20-07"  />
</p>
<p>本周完成五篇博客：</p>
<ul>
<li>
<p><a href="/posts/2023/05/22/java-design-patterns-abstract-document/">Java设计模式：Abstract Document</a></p>
</li>
<li>
<p><a href="/posts/2023/05/22/java-design-patterns-abstract-factory/">Java设计模式：Abstract Factory</a></p>
</li>
<li>
<p><a href="/posts/2023/05/23/always-override-hashcode-when-you-override-equals/">《Effective Java 3》笔记11：当覆盖 equals 方法时，总要覆盖 hashCode 方法</a></p>
</li>
<li>
<p><a href="/posts/2023/05/22/docker-continuous-integration/">[译]Build Robust Continuous Integration With Docker and Friends</a></p>
</li>
<li>
<p><a href="/posts/2023/05/23/python-comment-and-variable/">Python学习1：注释、变量和常量</a></p>
</li>
</ul>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中。我写了一个 python 脚本从 memos读取最近一周的 memos 记录。</p>
<ul>
<li><strong>2023-05-19</strong> 陈皓（左耳朵耗子）前年做过一次直播访谈，谈到了技术、行业、创业的各个方面。本文是访谈内容的文字整理，以此纪念他。  <a href="https://mp.weixin.qq.com/s/bOnW8gDJ-dXp4KbAjhDw9A">https://mp.weixin.qq.com/s/bOnW8gDJ-dXp4KbAjhDw9A</a>  <code>#memos</code> <code>#skill</code> <code>#tool</code></li>
<li><strong>2023-05-17</strong> 用 Material for MkDocs 来生成专业的技术文档 <a href="https://vra.github.io/2023/05/17/mkdocs-material-tutorial/">https://vra.github.io/2023/05/17/mkdocs-material-tutorial/</a>  <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-17</strong> 基于  Popsy 创建自己的个人主页 <a href="https://popsy.co/">https://popsy.co/</a> <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-17</strong> Hellonext是一种反馈管理平台，它可以帮助组织、企业和开发团队更好地管理用户反馈和需求。它提供了一个用户友好的界面，使用户可以轻松地提交反馈和建议，而管理人员可以使用该平台来跟踪和组织这些反馈，并确定哪些反馈应该优先考虑实现。Hellonext还提供了数据分析和报告功能，帮助管理人员了解用户反馈的趋势和优先级，以便更好地满足用户需求。 <a href="https://hellonext.co/">https://hellonext.co/</a> <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-17</strong> Dify 是一个简单且能力丰富的自然语言编程工具。你可以用它搭建商用级应用，个人助理。如果你想自己开发应用，Dify 也能为你省下接入 OpenAI 的后端工作，但使用我们逐步提供高的可视化运营能力，你可以持续的改进和训练你的 GPT 模型。 <a href="https://docs.dify.ai/v/zh-hans/getting-started/intro-to-dify">https://docs.dify.ai/v/zh-hans/getting-started/intro-to-dify</a> <code>#tool</code> <code>#memos</code></li>
<li><strong>2023-05-17</strong> 用200行python代码实现dns服务器的教程 <a href="https://implement-dns.wizardzines.com/">https://implement-dns.wizardzines.com/</a>  <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-17</strong> postman 推出了postbot，使用人工智能帮助您调试和理解 API、更快地编写测试  <a href="https://blog.postman.com/introducing-postbot-postmans-new-ai-assistant/">https://blog.postman.com/introducing-postbot-postmans-new-ai-assistant/</a>  <code>#tool</code> <code>#memos</code></li>
<li><strong>2023-05-17</strong> <a href="https://imgg.gg/">https://imgg.gg/</a> 是一个可以将任意 sms 内容转换成为图片的工具，不用担心在 APP 上截图会泄漏隐私。生成的图片的样式很像 <a href="https://poet.so/">https://poet.so/</a> ，不过Poet.so 只能生成推特、linkedin、shopify 的分享图。 <code>#tool</code> <code>#memos</code></li>
<li><strong>2023-05-17</strong> 都知道 ffmpeg 是媒体文件处理的瑞士军刀，但命令行的操作对大部分人来说确实会面临迷茫和繁琐。FFmpeg.guide 就是一个图形化生成 ffmpeg 命令的工具。  网站地址：<a href="https://ffmpeg.guide/">https://ffmpeg.guide/</a> <code>#tool</code> <code>#memos</code></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-19｜武功山看日出、Python初学建议</title>
      <link>https://blog.chensoul.com/posts/2023/05/18/weekly_review_19/</link>
      <pubDate>Thu, 18 May 2023 18:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/05/18/weekly_review_19/</guid>
      <description>前言 本篇是对 2023-05-08 到 2023-05-14 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 本周继续学习 python，发现一个质量非常高的 python</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-00.png" alt="weekly-review-19-00"  />
</p>
<p>本篇是对 <code>2023-05-08</code> 到 <code>2023-05-14</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>本周继续学习 python，发现一个质量非常高的 python 学习网站 <a href="https://realpython.com/">Real Python</a>，该网站有学习 python 的一些教程，是收费的，部分章节是可以免费观看的。</p>
<p>另外，周五晚上老婆临时起意想去武功山看日出，于是立即规划行程并购买火车票。因为一年半之前，我去过一次，所以规划起来还是很轻松的。上一次去是国庆节碰到下雨，没有看到日出。幸运的是，这次是晴天，不仅看到了日落还看到了日出。这一次没有选择住帐篷，而是住在了云中雾客栈，没想到这个客栈离金顶需要40分钟左右的路程，而且有段路程是坑坑洼洼。</p>
<p>去武功山之前，先去了长沙，再次游了橘子洲头，并第一次在长沙跑步打卡。本想在萍乡也跑步打卡，奈何没有得逞。</p>
<p>这次去了长沙和武功山，下次基本上是再也不会去爬武功山了。长沙还会去，因为从武功山回来路上，就和老婆规划着什么时候去张家界。</p>
<h2 id="武功山看日出">武功山看日出</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-01.png" alt="weekly-review-19-01"  />
</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-02.png" alt="weekly-review-19-02"  />
</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 1784 元，明细如下：</p>
<ul>
<li>5月8日：12元</li>
<li>5月9日：18元</li>
<li>5月10日：200元</li>
<li>5月11日：12元</li>
<li>5月12日：445元</li>
<li>5月13日：662元</li>
<li>5月14日：435元</li>
</ul>
<p>因为周末出去旅游，所以本周支出有所增多。</p>
<h2 id="健身">健身</h2>
<p>本周跑步 56 公里，最长跑步距离为 13 公里。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-05.png" alt="weekly-review-19-05"  />
</p>
<p>明细数据如下：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-04.png" alt="weekly-review-19-04"  />
</p>
<p>周末出去旅游，路过长沙，在长沙跑了两天，累计跑了6公里。这样，我的<a href="https://run.chensoul.com/">跑步数据</a> 从 <code>2 年里我跑过 1 个省份 1 个城市</code> 变成了<code> 2 年里我跑过 2 个省份 2 个城市</code>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-03.png" alt="."  />
</p>
<h2 id="工作">工作</h2>
<h3 id="java">Java</h3>
<h4 id="博客">博客</h4>
<p>本周完成两篇博客</p>
<ul>
<li><a href="/posts/2023/05/17/obey-the-general-contract-when-overriding-equals/">《Effective Java 3》笔记10：覆盖equals方法时应遵守的约定</a></li>
<li><a href="/posts/2023/05/18/jsr-166/">JSR 166规范</a></li>
</ul>
<h3 id="python">Python</h3>
<h4 id="python初学建议">Python初学建议</h4>
<p><strong>1、新手如何学习 python？</strong></p>
<p>推荐几篇文章：</p>
<ul>
<li>
<p><a href="http://cpython.org/">cPython - 给大学生的入门教程</a></p>
</li>
<li>
<p><a href="https://www.kawabangga.com/how-to-learn-python">如何学Python？</a></p>
</li>
</ul>
<p><strong>2、学习 python 编程的11个建议</strong></p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-06.webp" alt="weekly-review-19-06"  />
</p>
<p>原文：<a href="https://realpython.com/python-beginner-tips/">11 Beginner Tips for Learning Python Programming</a>，总结出以下11条新手编程建议：</p>
<ul>
<li>提示 #1：每天编写代码</li>
<li>提示#2：写出来</li>
<li>提示#3：互动</li>
<li>提示#4：休息</li>
<li>提示#5：成为漏洞赏金猎人</li>
<li>提示#6：与正在学习的其他人在一起</li>
<li>技巧#7：教导</li>
<li>技巧#8：结对编程</li>
<li>提示#9：提出“好的”问题</li>
<li>技巧#10：构建一些东西</li>
<li>技巧#11：为开源做贡献</li>
</ul>
<p><strong>3、Pyhton播客：</strong> <a href="https://pythonhunter.org/episodes/1">Ep 01. 新人到底需要什么</a></p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-07.png" alt="weekly-review-19-07"  />
</p>
<p>播客中提到的内容：</p>
<ul>
<li><a href="https://www.youtube.com/channel/UC4xKdmAXFh4ACyhpiQ_3qBw">Tech lead</a></li>
<li><a href="https://github.com/encode/starlette">starlette</a></li>
<li><a href="https://rhettinger.wordpress.com/2011/05/26/super-considered-super/">Python’s super() considered super!</a></li>
<li><a href="https://github.com/coleifer/huey">huey</a></li>
<li><a href="https://github.com/agronholm/apscheduler">apscheduler</a></li>
<li><a href="https://www.youtube.com/watch?v=Aj3KMefwOqI">Python 3: ten years later - PyCon 2018</a></li>
<li><a href="https://www.youtube.com/watch?v=MCs5OvhV9S4">David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015</a></li>
<li><a href="https://github.com/uber/pyflame">pyflame</a></li>
<li><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md">提问的智慧</a></li>
<li><a href="http://xyproblem.info/">XY问题</a></li>
<li><a href="https://docs.python.org/3/library/logging.html">Python Logger</a></li>
<li><a href="https://docs.python.org/3/library/pdb.html">pdb</a></li>
<li><a href="https://www.jetbrains.com/pycharm/">PyCharm</a></li>
<li><a href="https://jupyter.org/">Jupyter notebook</a></li>
<li><a href="http://www.letmegooglethat.com/">Let me google that</a>, <a href="https://lmgtfy.com/">let me google that for you</a></li>
<li><a href="https://www.zhihu.com/question/27871198">学习操作系统的知识，看哪本书好？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27288770">PHP黑系列之二：PHP 为什么函数命名是如此不一致？</a></li>
<li><a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)">Scheme</a></li>
<li><a href="https://7chan.org/pr/src/The_Little_Schemer_4th_2.pdf">The Little Schemer</a></li>
<li><a href="https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Computer_Programs">SICP</a></li>
<li><a href="https://cs61a.org/">CS 61A: Structure and Interpretation of Computer Programs</a></li>
</ul>
<h4 id="python--tips">Python  Tips</h4>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-19-08.png" alt="weekly-review-19-08"  />
</p>
<p>本周订阅了 <a href="https://realpython.com/"><strong>Real Python</strong></a> 的 Python Tricks，收到两封邮件，分享如下：</p>
<p><strong>1、如何一行代码合并两个字典</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># How to merge two dictionaries</span>
</span></span><span class="line"><span class="cl"><span class="c1"># in Python 3.5+</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;a&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">y</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;b&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">z</span> <span class="o">=</span> <span class="p">{</span><span class="o">**</span><span class="n">x</span><span class="p">,</span> <span class="o">**</span><span class="n">y</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">z</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="s1">&#39;c&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># In Python 2.x you could</span>
</span></span><span class="line"><span class="cl"><span class="c1"># use this:</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">z</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="o">**</span><span class="n">y</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">z</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="s1">&#39;a&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># In these examples, Python merges dictionary keys</span>
</span></span><span class="line"><span class="cl"><span class="c1"># in the order listed in the expression, overwriting </span>
</span></span><span class="line"><span class="cl"><span class="c1"># duplicates from left to right.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># See: https://www.youtube.com/watch?v=Duexw08KaC8</span>
</span></span></code></pre></div><blockquote>
<p><strong>说明：</strong></p>
<p>这段代码用于将两个字典 <code>x</code> 和 <code>y</code> 合并成一个新字典 <code>z</code>，其中 <code>**</code> 是 Python 中的解包运算符，可以将一个字典拆分成多个键值对，然后将这些键值对作为参数传递给一个函数或用于创建一个新的字典。</p>
<p>在这个例子中，<code>{**x, **y}</code> 表示将字典 <code>x</code> 和 <code>y</code> 拆分成多个键值对，然后将这些键值对合并成一个新字典。由于字典 <code>y</code> 中的键 <code>b</code> 与字典 <code>x</code> 中的键 <code>b</code> 相同，因此在合并后的字典中，键 <code>b</code> 对应的值将被更新为字典 <code>y</code> 中的值（即 <code>3</code>）。</p>
</blockquote>
<p>除了上面的方法之外，还可以使用 <code>update()</code> 方法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">x</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;a&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">y</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;b&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">z</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">z</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
</span></span></code></pre></div><blockquote>
<p>在上面的代码中，首先将字典 <code>x</code> 复制一份到 <code>z</code> 中，然后使用 <code>update()</code> 方法将字典 <code>y</code> 合并到 <code>z</code> 中。如果字典 <code>y</code> 中的键在字典 <code>x</code> 中已经存在，则会使用字典 <code>y</code> 中的值来更新字典 <code>z</code> 中的值。最终得到一个新字典 <code>z</code>，它包含了字典 <code>x</code> 和 <code>y</code> 中的所有键值对。</p>
</blockquote>
<p><strong>2、在 Python 中一次测试多个标志的不同方法</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Different ways to test multiple</span>
</span></span><span class="line"><span class="cl"><span class="c1"># flags at once in Python</span>
</span></span><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">y</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">z</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="mi">1</span> <span class="ow">in</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># These only test for truthiness:</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">x</span> <span class="ow">or</span> <span class="n">y</span> <span class="ow">or</span> <span class="n">z</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">any</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span></code></pre></div><p>除了前面提到的四种方法外，还有其他几种方式来测试多个变量是否至少有一个等于某个值：</p>
<ol>
<li><strong>使用列表解析式</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">any</span><span class="p">([</span><span class="n">i</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">)]):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span></code></pre></div><blockquote>
<p>在上面的代码中，使用列表解析式生成一个新列表，其中包含变量 <code>x</code>、<code>y</code>、<code>z</code> 中每个变量是否等于 1 的布尔值。然后，使用 <code>any()</code> 函数来测试新列表中是否存在至少一个为真的元素，如果存在，则条件为真，执行 <code>print()</code> 语句。</p>
</blockquote>
<ol start="2">
<li><strong>使用 <code>sum()</code> 函数</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">sum</span><span class="p">((</span><span class="n">i</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">))):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span></code></pre></div><blockquote>
<p>在上面的代码中，使用生成器表达式生成一个新的迭代器对象，其中包含变量 <code>x</code>、<code>y</code>、<code>z</code> 中每个变量是否等于 1 的布尔值。然后，将迭代器对象传递给 <code>sum()</code> 函数，它会将所有为真的元素加起来并返回一个整数。如果返回的整数大于 0，则条件为真，执行 <code>print()</code> 语句。</p>
</blockquote>
<ol start="3">
<li><strong>使用 <code>map()</code> 函数和 <code>any()</code> 函数</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">any</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">i</span><span class="p">:</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">))):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span></code></pre></div><blockquote>
<p>在上面的代码中，使用 <code>map()</code> 函数将一个匿名函数 <code>lambda i: i == 1</code> 应用于变量 <code>x</code>、<code>y</code>、<code>z</code> 中的每个元素，它会将每个元素与 1 进行比较并返回一个布尔值。然后，使用 <code>any()</code> 函数来测试返回的布尔值序列中是否存在至少一个为真的元素，如果存在，则条件为真，执行 <code>print()</code> 语句。</p>
</blockquote>
<ol start="4">
<li><strong>使用 <code>reduce()</code> 方法</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="n">reduce</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="n">a</span> <span class="ow">or</span> <span class="n">b</span><span class="p">,</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">))):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;passed&#39;</span><span class="p">)</span>
</span></span></code></pre></div><blockquote>
<p>在上面的代码中，使用生成器表达式生成一个新的迭代器对象，其中包含变量 <code>x</code>、<code>y</code>、<code>z</code> 中每个变量是否等于 1 的布尔值。然后，使用 <code>reduce()</code> 函数将一个匿名函数 <code>lambda a, b: a or b</code> 应用于迭代器对象中的所有元素，它会将所有元素按照布尔逻辑 <code>or</code> 进行聚合，并返回一个布尔值。如果返回的布尔值为真，则条件为真，执行 <code>print()</code> 语句。</p>
</blockquote>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中。我写了一个 python 脚本从 memos读取最近一周的 memos 记录。</p>
<ul>
<li><strong>2023-05-10</strong> 一些非常有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、微信读书、豆瓣、QQ等网站。<a href="https://github.com/shengqiangzhang/examples-of-web-crawlers">查看链接</a>  <code>#memos</code> <code>#python</code> <code>#tool</code></li>
<li><strong>2023-05-08</strong> 这个网站整理了开发者的学习成长路线图，有比较详细的技能树，推荐学习内容等等，偏向开发者。 <a href="https://roadmap.sh/python">查看链接</a>  <code>#memos</code> <code>#tool</code></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-18｜导出豆瓣数据、Effective Java 3第二章总结</title>
      <link>https://blog.chensoul.com/posts/2023/05/10/weekly_review_18/</link>
      <pubDate>Wed, 10 May 2023 10:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/05/10/weekly_review_18/</guid>
      <description>前言 本篇是对 2023-05-01 到 2023-05-07 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 继上周实现导出苹果接口数据之后，这周又实现了自动</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-05-01</code> 到 <code>2023-05-07</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>继上周实现导出苹果接口数据之后，这周又实现了自动导出豆瓣数据。此外，还萌生了导出每天阅读的数据的想法。奈何现在阅读 app 都需要收费，只能暂且搁置这个想法。</p>
<p>最近在学习 Python，于是将学习中做的笔记发布到了博客，这周发布了两篇文章，希望通过输出来倒逼输入，以此来快速掌握 python 编程并能开发一些项目。另外，计划在学完之后，继续学习 Rust 和 Go，甚至开始学习前端开发。</p>
<p>最近又一次更换了博客主题，主要出发点是想找一个简洁的主题，减少不必要的信息干扰，也不想花时间在修改主题上面。减少了菜单链接，顺手也修改了 <a href="/about/">关于</a> 页面的内容。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-18-01.png" alt="weekly-review-18-01"  />
</p>
<h2 id="导出豆瓣数据">导出豆瓣数据</h2>
<p>最近阅读了一篇文章 <a href="https://conge.livingwithfcs.org/2023/05/05/leaving-douban/">很认真的在考虑不再使用豆瓣这件事</a> ，于是使用<a href="https://github.com/lizheming/doumark-action"> lizheming/doumark-action</a> 导出豆瓣数据。</p>
<p>在我的 github 主页 <a href="https://github.com/chensoul/chensoul">https://github.com/chensoul/chensoul</a> 创建一个 workflow <a href="https://github.com/chensoul/chensoul/blob/main/.github/workflows/douban.yml">douban.yml</a> ，每隔一个小时同步一次豆瓣数据（读书、电影、音乐）到 <a href="https://github.com/chensoul/chensoul/tree/main/data">csv 文件</a>。拿到这些文件之后，就可以通过 html + css 渲染出来，类似这个页面 <a href="https://conge.livingwithfcs.org/books/">书影音</a>。等豆瓣数据增多之后，再考虑实现这个。</p>
<p>除此之外，之前还实现了通过 n8n 实时同步豆瓣数据到 memos 和 telegram：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-18-05.png" alt="weekly-review-18-05"  />
</p>
<p>通过 <a href="https://github.com/chensoul/chensoul/blob/main/build_readme.py">python 脚本 </a>获取最近10条记录，显示到 <a href="https://github.com/chensoul">我的 github 主页</a>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-18-06.png" alt="weekly-review-18-06"  />
</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 816 元，明细如下：</p>
<ul>
<li>5月1日：55元</li>
<li>5月2日：79元</li>
<li>5月3日：370元，其中270元加油</li>
<li>5月4日：136元，其中捐款50元</li>
<li>5月5日：12元</li>
<li>5月6日：100元，手机话费充值</li>
<li>5月7日：64元</li>
</ul>
<p>最近一直想统计一下工作和生活中的固定支出费用，于是今天花了点时间做了统计。没想到每年工作和生活中固定支出费用竟然达到了1529+6180=7709元。其中大块头是手机话费和停车位费用，手机话费是因为办理一个电信套餐送宽带和一部手机；停车位费用是因为今年买了车。</p>
<p>年费，总计：1529元</p>
<ul>
<li>Typora：89元</li>
<li>百度硬盘：178元，2024-01-28到期</li>
<li>快连VPN：374元，2024-01-16到期</li>
<li>搬瓦工VPS：640元，2024-01-14到期</li>
<li>1Password：248元，2023-08-17到期</li>
</ul>
<p>月费，总计：515*12=6180元</p>
<ul>
<li>
<p>手机话费：189元</p>
</li>
<li>
<p>停车位：320元</p>
</li>
<li>
<p>iCloud：6元</p>
</li>
</ul>
<h2 id="健身">健身</h2>
<p>本周 <a href="https://run.chensoul.com/">跑步</a> 记录如下，总计跑步34.37公里，其中周六第一次跑了12公里，比之前有所进步。遗憾的是，有两天没有跑步，导致连续跑步天数有中断。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-18-04.png" alt="weekly-review-18-04"  />
</p>
<p>从3月份开始跑步到5月，目前总共跑步距离达到了230公里。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-18-03.png" alt="weekly-review-18-03" style="width:50%;" />
<h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>本周写了两篇《Effective Java 3》的学习笔记，分别是：</p>
<ul>
<li><a href="/posts/2023/05/08/avoid-finalizers-and-cleaners/">《Effective Java 3》笔记8：避免使用终结器和清除器</a></li>
<li><a href="/posts/2023/05/08/prefer-try-with-resources-to-try-finally/">《Effective Java 3》笔记9：使用 try-with-resources 优于 try-finally</a></li>
</ul>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-18-02.png" alt="weekly-review-18-02"  />
</p>
<p>至此，《Effective Java 3》第二章学习完了，现在总结如下：</p>
<p>1、静态工厂方法代替构造函数</p>
<p>静态工厂方法是一种创建对象的方式，它们与构造器不同，具有明确的名称，并且可以返回任意类型的对象。静态工厂方法的优点包括：</p>
<ul>
<li>
<p>名称可以描述对象的含义，使得代码更加清晰易读；</p>
</li>
<li>
<p>静态工厂方法可以控制创建对象的方式，提高灵活性；</p>
</li>
<li>
<p>静态工厂方法可以缓存已创建的对象，避免创建重复对象，提高性能；</p>
</li>
<li>
<p>静态工厂方法可以返回任意类型的对象，而不仅仅是该类或者其子类的实例。</p>
</li>
</ul>
<p>2、使用构造器代替构造方法</p>
<p>当一个类需要多个参数时，可以使用构建器，将参数逐个设置，最后调用build方法构建对象。构建器的优点包括：</p>
<ul>
<li>
<p>可以避免长参数列表，使得代码更加清晰易读；</p>
</li>
<li>
<p>构建器可以强制要求必需的参数，提高代码的安全性；</p>
</li>
<li>
<p>构建器可以返回不可变对象，提高代码的线程安全性。</p>
</li>
</ul>
<p>3、使用私有构造函数或枚举类型创建单例</p>
<p>通过私有构造器或者枚举类型来实现Singleton，它们的优点包括：</p>
<ul>
<li>
<p>可以确保只有一个实例存在，提高代码的安全性；</p>
</li>
<li>
<p>可以缩小类的可访问性，提高代码的封装性；</p>
</li>
<li>
<p>可以让代码更加自然，避免使用静态方法和静态变量的限制。</p>
</li>
</ul>
<p>4、用私有构造函数使类不可实例化</p>
<p>使用私有构造函数强制实现不可实例化的主要原因是防止类被意外地实例化，以使代码更加健壮和可靠。在某些情况下，我们只需要使用类中的静态方法和静态字段，而不需要创建该类的实例。</p>
<p>5、依赖注入优于硬编码资源</p>
<p>使用依赖注入比硬编码资源的优点：</p>
<ol>
<li>可测试性：使用依赖注入，很容易创建和注入模拟对象进行测试。这样，我们可以将正在测试的组件隔离开来，并专注于测试其行为，而不必担心其依赖项的行为。</li>
<li>灵活性：使用依赖注入，我们可以轻松地用不同实现替换依赖项。这在需要更改组件的行为而不更改其代码时非常有用。</li>
<li>解耦：依赖注入有助于将组件与其依赖项解耦，使代码更加模块化并易于维护。</li>
<li>关注点分离：依赖注入将依赖项的创建和管理与组件本身分离，允许更清晰地分离关注点。</li>
</ol>
<p>6、避免创建不必要的对象</p>
<p>7、排除过时的对象引用</p>
<p>在代码中及时清理不再使用的对象引用，以避免内存泄漏和性能问题。当一个对象不再需要时，应该尽快将其引用设置为null，这样JVM可以及时回收它所占用的内存。</p>
<p>8、避免使用终结器和清除器</p>
<p>终结方法和清除方法是一种释放资源的方式，但是它们并不可靠，不应该依赖于它们来释放资源。应该使用try-with-resources结构或者显式的调用close方法来释放资源。</p>
<p>9、使用 try-with-resources 优于 try-finally</p>
<p><code>try-with-resources</code> 语句是 Java 7 中引入的一种新语法，主要目的是为了简化资源管理的代码，并确保资源被正确地关闭，避免了资源泄漏和异常处理的问题。</p>
<h3 id="python">Python</h3>
<ul>
<li><a href="/posts/2023/05/09/python-install-build-publish-run/">Python安装、构建、发布、下载和运行</a></li>
<li><a href="/posts/2023/05/09/python-package-and-env-management/">Python包和环境管理</a></li>
</ul>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中。我写了一个 python 脚本从 memos读取最近一周的 memos 记录。</p>
<ul>
<li><strong>2023-05-06</strong> git flow 模型的提出：<a href="https://nvie.com/posts/a-successful-git-branching-model/">查看链接</a>  gitflow-avh 是一个增强工具：<a href="https://github.com/petervanderdoes/gitflow-avh">查看链接</a>  <code>#git</code> <code>#tool</code> <code>#memos</code></li>
<li><strong>2023-05-06</strong> 又有哪家阅读管理网站可取代豆瓣读书 <a href="https://glennwoo.com/2022/07/29/about-reading-tracker-websites/">查看链接</a>  <code>#douban</code> <code>#memos</code></li>
<li><strong>2023-05-05</strong> 分享一些阅人经验：  1. 嘴巴太快的人，往往没什么城府。嘴巴太甜的人，不可以深交。 2. 话少的人往往是两个极端，要么真的简单，要么深不可测。 3. 性格写在脸上的人，人品不会太差。能够控制情绪的人，往往不是一般人。 4. 开口就说“我有一个朋友怎样怎样”的人，往往单纯没啥真本事。 5. 不喜欢麻烦别人的人，通常也不喜欢被别人麻烦。一个不懂拒绝的人，也是一个不懂应酬的人。 6. 如果一个人可以做到潇洒而不合群，这人多半是个老江湖。如果一个人因不合群特别不自在，这人多半是社会小白。 7. 看地位高的大佬推荐什么人、用什么人，那这个大佬就是什么样的人。 8. 越是做事小心翼翼的人，越容易得罪人。反而霸气点的人，往往都会有三分薄面。 9. 善于巴结讨好别人的人，最好不要与之深交，否则必受其累。 10. 看起来一本正经、不苟言笑、斯斯文文的人，往往都比较闷骚。 11. 能在一定位置上的人，无论你多么讨厌他，一定有他某些过人之处。 12. 能够在一段感情失败后，很快走出来的人，要么没有真心付出，要么理性得可怕。 13. 想知道一个人品行如何，可以观察一下他培养出来的孩子。 14. 高度自律的人，往往对别人的要求也很高。 15. 年少得志，太容易获得成功的人，往往容易栽跟头。如果能扛过去并吸取教训，将来的成就会更大，否则容易掉入深渊。 16. 面对恭维或羞辱都不动声色的人，肯定是城府极深的狠角色。这种人千万别乱得罪，否则受到的反击会很突然很猛烈，下场会很惨。 <code>#摘录</code> <code>#memos</code></li>
<li><strong>2023-05-05</strong>  WoodpeckerCI 是一个由社区维护的 DroneCI 分支，使用 Apache License 2.0 许可证发布。社区版进一步扩展了 pipeline 的功能特性、支持对文件路径设置 pipeline 执行条件，并且可以与 Gitea 实现紧密集成。不同的是，DroneCI 的配置文件是 .drone.yml，WoodpeckerCI 重命名为了 .woodpecker.yml。好在 WoodpeckerCI 也兼容 DroneCI 的配置文件，迁移起来并不会太麻烦。   <a href="https://github.com/woodpecker-ci/woodpecker">查看链接</a>  <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-04</strong> git-flow[实战系列]  <a href="https://blog.p2hp.com/archives/10929">查看链接</a>  <code>#memos</code> <code>#git</code> <code>#tool</code></li>
<li><strong>2023-05-04</strong> 在 Node.js 生态系统中查找积极维护和流行的库 <a href="https://nodejstoolbox.com/">查看链接</a>  <code>#web</code> <code>#nodejs</code> <code>#memos</code></li>
<li><strong>2023-05-04</strong> 可以用来取代UUID, 效率更高, 支持自定义字符集 <a href="https://github.com/ai/nanoid">查看链接</a>  <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-04</strong> unDraw: 一个可以免费使用的插图库, 优势: 可免费商用/支持直接改色 <a href="https://undraw.co/illustrations">查看链接</a>  <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-04</strong> 临时文件上传服务  文件传输工具，上传的文件只保留48小时，过期自动删除 <a href="https://sendfiles.online/">查看链接</a>  Pixeldrain 免费文件分享，免费每个文件最大20 GB per file，无广告。 <a href="https://pixeldrain.com/">查看链接</a>  TEMPORARY FILE HOSTING All uploaded files are automatically deleted after 60 minutes. <a href="https://tmpfiles.org/">查看链接</a>  Super simple file sharing! Upload as many files as you like up to 2 GB and get a link to share.（一次下载后，链接即过期） <a href="https://www.file.io/">查看链接</a>  Upload And Share (MP4, WEBM) Temporary Videos <a href="https://tempclip.com/">查看链接</a>  <code>#memos</code> <code>#tool</code></li>
<li><strong>2023-05-04</strong> 适合编程时听的音乐  <a href="https://coderadio.freecodecamp.org/">查看链接</a>  <a href="https://www.programmersmusic.com/">查看链接</a>  <code>#memos</code> <code>#music</code></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-17｜导出苹果健康数据、自动化收集个人数据、FlexyPool动态连接池</title>
      <link>https://blog.chensoul.com/posts/2023/05/06/weekly_review_17/</link>
      <pubDate>Sat, 06 May 2023 10:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/05/06/weekly_review_17/</guid>
      <description>前言 本篇是对 2023-04-24 到 2023-04-30 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 本周二早上跑步右小腿抽筋，跑步暂停了两天，所以有</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-04-24</code> 到 <code>2023-04-30</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>本周二早上跑步右小腿抽筋，跑步暂停了两天，所以有两天走路没有到一万步。在小腿恢复之后，继续跑步，查看 strava 上的统计，这周总共跑了27公里，比上周41公里少了14公里。</p>
<p>这周空闲时间就在想，能不能每天自动收集个人的一些数据，比如，目前我能想到的数据包括跑步、走路、体重、编码、早起等等。</p>
<p>目前是使用 strava app 记录跑步数据，通过 <a href="https://github.com/chensoul/running_page">running_page</a> 可以实时收集我的每天 <a href="https://github.com/chensoul/running_page/blob/master/assets/running.csv">跑步数据</a>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-01.png" alt="weekly-review-17-01"  />
</p>
<p>走路、体重数据可以从苹果健康数据获取：</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-06.png" alt="weekly-review-17-06" style="width:50%;" />
<p>编码数据可以从 wakatime 获取：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-02.png" alt="weekly-review-17-02"  />
</p>
<p>早起的数据，我目前是通过 ios workflow 自动化来实现的。当早起闹钟响起时，往 memos 写入一条记录。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-08.png" alt="weekly-review-17-08"  />
</p>
<p>如果可以获取到苹果屏幕使用时间数据，则可以从苹果手机获取每日第一次拿起手机的时间作为早起时间（待研究）。</p>
<h2 id="导出苹果健康数据">导出苹果健康数据</h2>
<p>如何导出苹果健康数据？可以参考这篇文章 <a href="https://sspai.com/post/42135">想要分析或备份 iPhone 「健康」应用数据？教你 3 种方法将其导出</a> 。这篇文章提到的 Health Export  工具和 python 脚本我都试过，QS Access 在手机上没有找到。</p>
<h3 id="1-health-export-在线解析">1. Health Export 在线解析</h3>
<p><a href="https://sspai.com/link?target=http%3A%2F%2Fericwolter.com%2Fprojects%2Fhealth-export.html">Health Export</a> 是国外一名独立开发者写的在线解析工具，它专门用于将健康应用导出的 XML 文件转换为 CSV 文件。</p>
<p>Health Export 提供了一个 <a href="https://www.ericwolter.com/projects/apple-health-export/">web 网站</a> 可以解析传苹果手机导出的健康数据。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-03.png" alt="weekly-review-17-03"  />
</p>
<p>如何从 IPhone 手机导出苹果健康数据呢？您可以通过以下步骤导出这些数据：</p>
<ol>
<li>打开“健康”应用程序。</li>
<li>点击屏幕右上角的“个人资料”图标。</li>
<li>滚动到页面底部，找到“导出健康数据”选项，并点击它。</li>
<li>在弹出窗口中选择要导出的数据类型，例如步数、心率等。</li>
<li>点击“下一步”按钮。</li>
<li>在下一个页面中，您可以选择要导出的时间范围。您可以选择“全部数据”或指定日期范围。</li>
<li>点击“请求导出”按钮。</li>
<li>您将被要求输入一个密码以保护您的数据。输入密码后，点击“下一步”按钮。</li>
<li>在弹出窗口中，您可以选择将数据发送到您的电子邮件地址或其他应用程序。</li>
<li>点击“导出”按钮。</li>
</ol>
<p>完成这些步骤后，您的健康数据将被导出为一个可下载的 zip 文件。您可以将其保存到您的设备上或发送到其他应用程序或云存储服务。</p>
<p>将导出的文件 export.xml 上传到  <a href="https://www.ericwolter.com/projects/apple-health-export/">web 网站</a> ，稍等片刻可以导出结果。导出的健康数据是一个指标一个 csv 文件，如果想合并数据，需要做进一步处理。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-04.png" alt="weekly-review-17-04"  />
</p>
<p>另外，Health Export 也提供了IOS APP，功能好用，支持选择指定指标数据按日期聚合导出为一个 csv，还有定时导出的功能，遗憾的是需要收费。</p>
<h3 id="2使用-python-脚本">2、使用 python 脚本</h3>
<p>这里使用了 <a href="https://sspai.com/link?target=https%3A%2F%2Fgithub.com%2Ftdda%2Fapplehealthdata">@Radcliffe</a> 提供的开源代码。目前，Github 可以在国内自由访问，所以直接通过<a href="https://sspai.com/link?target=https%3A%2F%2Fgithub.com%2Ftdda%2Fapplehealthdata%2Fraw%2Fmaster%2Fapplehealthdata.py">此链接</a>下载名称为 <code>applehealthdata.py</code> 的脚本文件。</p>
<p>然后，将之前下载好的 <code>导出.xml</code> 与该脚本文件放置在<strong>同一目录</strong>下方。为了防止报错，这里需要将 <code>导出.xml</code> 更名为 <code>export.xml</code>。</p>
<p>接下来，在该文件夹下打开终端（macOS &amp; Linux）或者命令行工具（Windows），使用 Python 2 执行该脚本：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">python applehealthdata.py export.xml
</span></span></code></pre></div><p>稍等片刻，XML 文件就会被解析为数个 CSV 文件了。</p>
<p>这里，我对 applehealthdata.py 这个文件做了一点修改，只导出指定的指标的指定列的数据，修改后的脚本在 <a href="https://github.com/chensoul/chensoul/blob/main/applehealthdata.py">applehealthdata.py</a>。目前，我只关注以下6个指标：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">RECORDS</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;BodyFatPercentage&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;BodyMass&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;BodyMassIndex&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;DistanceWalkingRunning&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;LeanBodyMass&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;StepCount&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span></code></pre></div><p>这 6 个指标中文含义分别是：</p>
<ul>
<li>BodyFatPercentage：脂肪率</li>
<li>BodyMass：体重</li>
<li>BodyMassIndex：BMI 指数</li>
<li>LeanBodyMass：净体重</li>
<li>DistanceWalkingRunning：走路跑步距离</li>
<li>StepCount：走路步数</li>
</ul>
<p>导出的列只需要 type、startDate、value 这 3 个：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">RECORD_FIELDS</span> <span class="o">=</span> <span class="n">OrderedDict</span><span class="p">((</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (&#39;sourceName&#39;, &#39;s&#39;),</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (&#39;sourceVersion&#39;, &#39;s&#39;),</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (&#39;device&#39;, &#39;s&#39;),</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;s&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (&#39;unit&#39;, &#39;s&#39;),</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (&#39;creationDate&#39;, &#39;d&#39;),</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="s1">&#39;startDate&#39;</span><span class="p">,</span> <span class="s1">&#39;d&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (&#39;endDate&#39;, &#39;d&#39;),</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="s1">&#39;n&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl"><span class="p">))</span>
</span></span></code></pre></div><p>这样导出了这 6 个 csv 文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">BodyMass.csv               
</span></span><span class="line"><span class="cl">DistanceWalkingRunning.csv 
</span></span><span class="line"><span class="cl">StepCount.csv
</span></span><span class="line"><span class="cl">BodyFatPercentage.csv      
</span></span><span class="line"><span class="cl">BodyMassIndex.csv          
</span></span><span class="line"><span class="cl">LeanBodyMass.csv
</span></span></code></pre></div><p>接下来，把这6个文件导入数据库，并进行合并处理。数据库我选择的是 postgres，以上 6 个文件对于 6 个建表语句：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="n">SEQUENCE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="n">health_id_seq</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;BodyFatPercentage&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;id&#34;</span><span class="w"> </span><span class="n">int4</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">nextval</span><span class="p">(</span><span class="s1">&#39;health_id_seq&#39;</span><span class="p">::</span><span class="n">regclass</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;type&#34;</span><span class="w"> </span><span class="nb">varchar</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;start_date&#34;</span><span class="w"> </span><span class="k">timestamp</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;BodyMass&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;id&#34;</span><span class="w"> </span><span class="n">int4</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">nextval</span><span class="p">(</span><span class="s1">&#39;health_id_seq&#39;</span><span class="p">::</span><span class="n">regclass</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;type&#34;</span><span class="w"> </span><span class="nb">varchar</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;start_date&#34;</span><span class="w"> </span><span class="k">timestamp</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;BodyMassIndex&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;id&#34;</span><span class="w"> </span><span class="n">int4</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">nextval</span><span class="p">(</span><span class="s1">&#39;health_id_seq&#39;</span><span class="p">::</span><span class="n">regclass</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;type&#34;</span><span class="w"> </span><span class="nb">varchar</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;start_date&#34;</span><span class="w"> </span><span class="k">timestamp</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;DistanceWalkingRunning&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;id&#34;</span><span class="w"> </span><span class="n">int4</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">nextval</span><span class="p">(</span><span class="s1">&#39;health_id_seq&#39;</span><span class="p">::</span><span class="n">regclass</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;type&#34;</span><span class="w"> </span><span class="nb">varchar</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;start_date&#34;</span><span class="w"> </span><span class="k">timestamp</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;LeanBodyMass&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;id&#34;</span><span class="w"> </span><span class="n">int4</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">nextval</span><span class="p">(</span><span class="s1">&#39;health_id_seq&#39;</span><span class="p">::</span><span class="n">regclass</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;type&#34;</span><span class="w"> </span><span class="nb">varchar</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;start_date&#34;</span><span class="w"> </span><span class="k">timestamp</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;StepCount&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;id&#34;</span><span class="w"> </span><span class="n">int4</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">nextval</span><span class="p">(</span><span class="s1">&#39;health_id_seq&#39;</span><span class="p">::</span><span class="n">regclass</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;type&#34;</span><span class="w"> </span><span class="nb">varchar</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;start_date&#34;</span><span class="w"> </span><span class="k">timestamp</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p>我想把这6个文件按照日期合并到一个表中，于是创建 health 表：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="s2">&#34;public&#34;</span><span class="p">.</span><span class="s2">&#34;health&#34;</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;day&#34;</span><span class="w"> </span><span class="nb">text</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;fat_pct&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;bmi&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;lean_weight&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;step_count&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;step_distance&#34;</span><span class="w"> </span><span class="nb">numeric</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;weight&#34;</span><span class="w"> </span><span class="n">float8</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;day&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p>接下来，通过 sql 合并数据插入到 health 表：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">health</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">f</span><span class="p">.</span><span class="k">day</span><span class="p">,</span><span class="n">t</span><span class="p">.</span><span class="n">fat_pct</span><span class="p">,</span><span class="n">t</span><span class="p">.</span><span class="n">bmi</span><span class="p">,</span><span class="n">t</span><span class="p">.</span><span class="n">lean_weight</span><span class="p">,</span><span class="n">f</span><span class="p">.</span><span class="n">step_count</span><span class="p">,</span><span class="k">g</span><span class="p">.</span><span class="n">step_distance</span><span class="p">,</span><span class="n">t</span><span class="p">.</span><span class="n">weight</span><span class="w"> </span><span class="k">from</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">select</span><span class="w"> </span><span class="n">to_char</span><span class="p">(</span><span class="n">start_date</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;YYYY-MM-DD&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="k">day</span><span class="p">,</span><span class="k">sum</span><span class="p">(</span><span class="s2">&#34;value&#34;</span><span class="p">)</span><span class="w"> </span><span class="n">step_count</span><span class="w">  </span><span class="k">from</span><span class="w"> </span><span class="s2">&#34;StepCount&#34;</span><span class="w"> </span><span class="k">group</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">to_char</span><span class="p">(</span><span class="n">start_date</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;YYYY-MM-DD&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="n">f</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">left</span><span class="w"> </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">select</span><span class="w"> </span><span class="n">to_char</span><span class="p">(</span><span class="n">start_date</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;YYYY-MM-DD&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="k">day</span><span class="p">,</span><span class="n">round</span><span class="p">(</span><span class="k">cast</span><span class="p">(</span><span class="k">sum</span><span class="p">(</span><span class="s2">&#34;value&#34;</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nb">numeric</span><span class="p">)</span><span class="w"> </span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">step_distance</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="s2">&#34;DistanceWalkingRunning&#34;</span><span class="w"> </span><span class="k">group</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">to_char</span><span class="p">(</span><span class="n">start_date</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;YYYY-MM-DD&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="k">g</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">f</span><span class="p">.</span><span class="k">day</span><span class="o">=</span><span class="k">g</span><span class="p">.</span><span class="k">day</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">left</span><span class="w"> </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">select</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="k">day</span><span class="p">,</span><span class="n">a</span><span class="p">.</span><span class="n">weight</span><span class="p">,</span><span class="n">e</span><span class="p">.</span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="s2">&#34;lean_weight&#34;</span><span class="p">,</span><span class="k">cast</span><span class="p">(</span><span class="k">c</span><span class="p">.</span><span class="s2">&#34;value&#34;</span><span class="o">*</span><span class="mi">100</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nb">numeric</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="s2">&#34;fat_pct&#34;</span><span class="p">,</span><span class="n">d</span><span class="p">.</span><span class="s2">&#34;value&#34;</span><span class="w"> </span><span class="s2">&#34;bmi&#34;</span><span class="w"> </span><span class="k">from</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">		</span><span class="k">select</span><span class="w"> </span><span class="n">to_char</span><span class="p">(</span><span class="n">start_date</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;YYYY-MM-DD&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="k">day</span><span class="p">,</span><span class="k">min</span><span class="p">(</span><span class="n">start_date</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">min_start_date</span><span class="p">,</span><span class="k">min</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">weight</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="s2">&#34;BodyMass&#34;</span><span class="w"> </span><span class="k">group</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="k">day</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="p">)</span><span class="w"> </span><span class="n">a</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">left</span><span class="w"> </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="s2">&#34;BodyFatPercentage&#34;</span><span class="w"> </span><span class="k">c</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">min_start_date</span><span class="o">=</span><span class="k">c</span><span class="p">.</span><span class="n">start_date</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">left</span><span class="w"> </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="s2">&#34;BodyMassIndex&#34;</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">min_start_date</span><span class="o">=</span><span class="n">d</span><span class="p">.</span><span class="n">start_date</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">left</span><span class="w"> </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="s2">&#34;LeanBodyMass&#34;</span><span class="w"> </span><span class="n">e</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="n">min_start_date</span><span class="o">=</span><span class="n">e</span><span class="p">.</span><span class="n">start_date</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">a</span><span class="p">.</span><span class="k">day</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="n">t</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">t</span><span class="p">.</span><span class="k">day</span><span class="o">=</span><span class="n">f</span><span class="p">.</span><span class="k">day</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="n">f</span><span class="p">.</span><span class="k">day</span><span class="w"> </span><span class="k">asc</span><span class="w">
</span></span></span></code></pre></div><p>最后的数据如下：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-05.png" alt="weekly-review-17-05"  />
</p>
<p>完整的 csv 文件保存在 <a href="https://github.com/chensoul/chensoul/blob/main/data/health.csv">health.csv</a> 。有些记录中体重相关的数据为空，这是因为体重相关数据是通过其他和电子秤关联的 app 写进去的。<code>要想每天都有体重相关的数据，则需要每天使用电子称测量体重。</code></p>
<p>得到这份数据之后，就可以进行统计了，比如统计体重的变化、每天走路的步数等等。</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 732 元，明细如下：</p>
<ul>
<li>4月25日：117元，100元加油</li>
<li>4月26日：59元，买药</li>
<li>4月28日：419元，加油360元</li>
<li>4月29日：21元</li>
<li>4月30日：116元</li>
</ul>
<p>4 月累计支出共 3048 元，比 3 月支出 3520 元少了 472 元。主要支出来自这几个：</p>
<ul>
<li>交通：1177元，其中300元是缴纳 ETC 押金</li>
<li>餐饮：827元</li>
<li>购物：751元</li>
<li>娱乐：216元，看电影</li>
</ul>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-07.png" alt="weekly-review-17-07" style="width:50%;" />
<h2 id="健身">健身</h2>
<p>四月跑步记录如下，总计跑了16小时、125公里。更详细数据，可以参考我的 <a href="https://run.chensoul.com/">跑步主页</a>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-09.png" alt="weekly-review-17-09"  />
</p>
<h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>请参考 <a href="/posts/2023/05/05/enforce-noninstantiability-with-a-private-constructor/">《Effective Java 3》笔记4：用私有构造函数使类不可实例化</a> 和 《Effective Java 3》笔记7：<a href="/posts/2023/05/05/eliminate-obsolete-object-references/">排除过时的对象引用</a>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-17-10.png" alt="weekly-review-17-10"  />
</p>
<h3 id="flexypool">FlexyPool</h3>
<p>FlexyPool 是一个用于监控数据库连接池的开源工具。它支持监控和报告连接池的使用情况、性能和瓶颈，以及自动调整连接池的大小和行为。FlexyPool 支持多种流行的 Java 数据库连接池，例如 HikariCP、Tomcat JDBC Pool、C3P0、BoneCP 等等。</p>
<p>FlexyPool 主要提供以下功能：</p>
<ol>
<li>监控连接池的使用情况，包括连接数、请求数、等待时间、执行时间等等。</li>
<li>报告连接池的性能和瓶颈，例如最慢的查询、最频繁的错误、最短的连接时间等等。</li>
<li>自动调整连接池的大小和行为，以提高性能和减少资源消耗。</li>
<li>集成到常见的监控工具中，例如 Prometheus、Grafana、InfluxDB 等等。</li>
</ol>
<p>FlexyPool 的使用相对简单，只需要将其添加到应用程序的依赖中，然后配置连接池和 FlexyPool 的参数即可。例如，如果你正在使用 HikariCP 连接池，可以按照以下步骤配置 FlexyPool：</p>
<p>1、添加 FlexyPool 的依赖到应用程序的 pom.xml 文件中：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;groupId&gt;</span>com.vladmihalcea.flexypool<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;artifactId&gt;</span>flexy-pool-core<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;version&gt;</span>2.0.2<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/dependency&gt;</span>
</span></span></code></pre></div><p>2、在应用程序的配置文件中，配置连接池和 FlexyPool 的参数：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-properties" data-lang="properties"><span class="line"><span class="cl"><span class="c1"># HikariCP 数据库连接池配置</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.dataSourceClassName</span><span class="o">=</span><span class="s">com.mysql.jdbc.jdbc2.optional.MysqlDataSource</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.dataSource.url</span><span class="o">=</span><span class="s">jdbc:mysql://localhost:3306/mydb</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.dataSource.user</span><span class="o">=</span><span class="s">root</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.dataSource.password</span><span class="o">=</span><span class="s">secret</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.minimumIdle</span><span class="o">=</span><span class="s">10</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.maximumPoolSize</span><span class="o">=</span><span class="s">20</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.idleTimeout</span><span class="o">=</span><span class="s">30000</span>
</span></span><span class="line"><span class="cl"><span class="na">hikari.poolName</span><span class="o">=</span><span class="s">hikariPool</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># FlexyPool 配置</span>
</span></span><span class="line"><span class="cl"><span class="na">flexyPool.metricsFactory</span><span class="o">=</span><span class="s">histogram</span>
</span></span><span class="line"><span class="cl"><span class="na">flexyPool.metric.log.enabled</span><span class="o">=</span><span class="s">true</span>
</span></span><span class="line"><span class="cl"><span class="na">flexyPool.metric.log.level</span><span class="o">=</span><span class="s">info</span>
</span></span><span class="line"><span class="cl"><span class="na">flexyPool.metric.log.interval</span><span class="o">=</span><span class="s">10</span>
</span></span><span class="line"><span class="cl"><span class="na">flexyPool.metric.prometheus.enabled</span><span class="o">=</span><span class="s">true</span>
</span></span><span class="line"><span class="cl"><span class="na">flexyPool.metric.prometheus.port</span><span class="o">=</span><span class="s">9090</span>
</span></span></code></pre></div><p>在这个配置中，我们首先配置了 HikariCP 连接池的参数，然后配置了 FlexyPool 的参数。这些参数包括度量工厂、日志和度量记录的级别、度量记录的间隔、是否启用 Prometheus 集成等等。</p>
<p>3、在应用程序启动时，将 FlexyPool 的代理对象添加到连接池中：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">DataSource</span> <span class="n">dataSource</span> <span class="o">=</span> <span class="o">...;</span> <span class="c1">// 获取连接池对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">FlexyPoolDataSource</span> <span class="n">flexyPoolDataSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FlexyPoolDataSource</span><span class="o">&lt;&gt;(</span><span class="n">dataSource</span><span class="o">);</span>
</span></span></code></pre></div><p>在这个代码中，我们首先获取 HikariCP 连接池对象，然后将其包装成 FlexyPool 的代理对象。这样，所有的数据库操作都将通过 FlexyPool 进行代理和监控。</p>
<p>Baeldung 网站上有一篇介绍 Spring Boot 中如何使用 FlexyPool 连接池监控工具的教程，名为 <a href="https://www.baeldung.com/spring-flexypool-guide">A Guide to FlexyPool in Spring Boot</a>。</p>
<p>这篇文章首先介绍了 FlexyPool 工具的作用，以及如何将其集成到 Spring Boot 应用程序中。FlexyPool 可以监控和报告连接池的使用情况、性能和瓶颈，以及自动调整连接池的大小和行为，以提高性能和减少资源消耗。</p>
<p>然后，文章介绍了如何在 Spring Boot 应用程序中使用 FlexyPool。具体步骤包括：</p>
<ol>
<li>添加 FlexyPool 的依赖到应用程序的 pom.xml 文件中。</li>
<li>配置连接池和 FlexyPool 的参数，例如 HikariCP 连接池的参数、FlexyPool 的度量工厂、日志和度量记录的级别、度量记录的间隔、是否启用 Prometheus 集成等等。</li>
<li>创建 FlexyPoolDataSource 对象，作为连接池的代理对象。该对象将自动创建和管理连接池，并使用 FlexyPool 工具进行监控和调整。</li>
<li>在应用程序中使用连接池，例如获取连接、执行 SQL 语句、关闭连接等等。</li>
</ol>
<p>最后，文章总结了一些连接池监控和优化的最佳实践，例如：</p>
<ol>
<li>使用 FlexyPool 工具监控连接池的使用情况和性能瓶颈，以及调整连接池的大小和行为，以提高性能和减少资源消耗。</li>
<li>配置连接池和 FlexyPool 的参数，以适应应用程序的负载和性能要求。</li>
<li>避免连接池泄漏和死锁等问题，例如及时关闭连接、设置合理的超时时间等等。</li>
</ol>
<h2 id="本周分享">本周分享</h2>
<p>大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中。我写了一个 python 脚本从 memos读取最近一周的 memos 记录。</p>
<ul>
<li><strong>2023-04-28 09:01:43</strong> 4个文生图AI工具 <a href="https://xugaoxiang.com/2023/04/27/4-text-to-image-ai-tools/">查看链接</a>  <code>#memos</code></li>
<li><strong>2023-04-27 13:29:50</strong> 这是 Jony Ive 的 LoveFrom 团队出品的一本关于乔布斯的书，书中几乎全部引用乔布斯自己的话，没有解读，更加「原汁原味」，同时也收录了一些珍贵的照片。 <a href="https://stevejobsarchive.com/book">查看链接</a>  <a href="https://limboy.me/books/make-something-wonderful/">查看链接</a>  <code>#memos</code></li>
<li><strong>2023-04-27 09:52:58</strong> Alpine, Tailwind, Deno, SQLite 我的本地服务四件套 <a href="https://limboy.me/posts/local-services-tools/">查看链接</a>  Update: 用 Remix 替代了 Alpine 和 Deno，确实方便。  <code>#web</code> <code>#memos</code></li>
<li><strong>2023-04-27 08:32:37</strong> FlexyPool 是一个用于监控数据库连接池的开源工具。它支持监控和报告连接池的使用情况、性能和瓶颈，以及自动调整连接池的大小和行为。FlexyPool 支持多种流行的 Java 数据库连接池，例如 HikariCP、Tomcat JDBC Pool、C3P0、BoneCP 等等。  FlexyPool 主要提供以下功能：  监控连接池的使用情况，包括连接数、请求数、等待时间、执行时间等等。  报告连接池的性能和瓶颈，例如最慢的查询、最频繁的错误、最短的连接时间等等。  自动调整连接池的大小和行为，以提高性能和减少资源消耗。  集成到常见的监控工具中，例如 Prometheus、Grafana、InfluxDB 等等。  <a href="https://www.baeldung.com/spring-flexypool-guide">查看链接</a>  <code>#java</code> <code>#memos</code></li>
<li><strong>2023-04-27 07:24:03</strong> 人一生中最重要的两天就是出生那天和发现人生目标的那天。   &mdash;&mdash;马克吐温  <code>#摘录</code></li>
<li><strong>2023-04-25 20:07:58</strong> 受 <a href="https://github.com/yihong0618/2023/blob/main/get_up.py">查看链接</a> 启发，在 iPhone上，创建了一个自动化捷径。当早起闹铃响起时，往memos发送一条早起记录，内容如下：  早起时间：2023年4月25日 20:02  今日语录： 有些事情本身我们无法控制，只好控制自己。  起床啦，喝杯咖啡，去跑步，每天进步一点点。  <code>#memos</code></li>
<li><strong>2023-04-25 08:57:03</strong> 【怎样种时间的种子？】  时间不够用，如何种时间的种子？ 1.走电梯时耐心等候自动关门，让更多的人进来，节约了他们的时间。（这还是一颗空间、房子的种子） 2.帮父母完成她的心愿或者事务性工作。 3.教会家里的小孩子如何节约父母的时间，这个就非常高级了。 4.路上随手捡走垃圾、不乱扔垃圾，让清洁工人有更多的时间。 5.帮助老师或者有更多能量的平台做事情。 6.经常性的做义工。 7.打电话长话短说，简洁明了节约对方的时间。 8.微信尽可能用打字，让对方快速简单地知道事情。 9.开会提前到，至少准时到，千万不能迟到，会议迟到，那种下的都是巨大的种子。 10.开车让人，腾出时间给别人。 11.开心收拾家务，让家人更加容易找到东西。 12.主动收拾公共办公区域，让同事快速有效工作。 13.不闲聊八卦浪费别人时间（这颗闲聊八卦的坏种子，还会让你在工作中没有人听从你的好意见，缺乏领导力） 14.参加任何会议提前准备，积极回应。 15.与别人分享时间的管理工具，分享获得富裕时间的好种子，这可也是法布施的好种子。 16.提醒、帮助或者关注拖延症的朋友。 17.不爽约父母安排的聚餐吃饭，不回家吃饭提前说。（恩田的大种子） 18.鼓励别人的梦想，真诚由心地赞美别人。  <code>#金刚智慧</code></li>
<li><strong>2023-04-24 19:21:02</strong> 有一个想法，可以写一段脚本从 telegram 或者 memos 读取上周的分享记录，然后，转换为 markdown 格式发布在周报中。这样，周报就可以变成半自动化了。 于是，写了一个 python 脚本实现了从 memos 读取记录。😁  <code>#skill</code></li>
<li><strong>2023-04-24 17:26:52</strong> 晚唐李商隐的《锦瑟》  锦瑟无端五十弦，一弦一柱思华年。 庄生晓梦迷蝴蝶，望帝春心托杜鹃。 沧海月明珠有泪，蓝田日暖玉生烟。 此情可待成追忆，只是当时已惘然。  <code>#诗词</code></li>
<li><strong>2023-04-24 14:07:04</strong> 使用一行代码为网站的输入框增加上 AI 能力。 <a href="https://www.enhanceai.dev/">查看链接</a>  <code>#skill</code></li>
<li><strong>2023-04-24 14:04:23</strong> 平常是糊里糊涂的，现在变得出人意外的小心谨慎，这正是由于报复的欲望，而这种欲望多么能够锻炼人！  —— 大仲马   <code>#摘录</code></li>
<li><strong>2023-04-24 14:03:59</strong> 使人疲乏的不是远方的深谷，而是鞋子里的一粒沙子。  —— 伏尔泰 <code>#摘录</code></li>
<li><strong>2023-04-24 11:00:30</strong> 📝 《Effective Java 3》笔记：避免创建不必要的对象 <code>#blog</code>   <a href="https://blog.chensoul.com/posts/2023/04/24/avoid-creating-unnecessary-objects/">查看链接</a></li>
<li><strong>2023-04-24 08:20:31</strong> 使用 Python 实现 RSS 转 Newsletter.   <a href="https://www.skyue.com/23042217.html">查看链接</a>  <code>#python</code></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-16｜《灌篮高手》电影、《春山如笑》话剧</title>
      <link>https://blog.chensoul.com/posts/2023/04/25/weekly_review_16/</link>
      <pubDate>Tue, 25 Apr 2023 08:30:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/04/25/weekly_review_16/</guid>
      <description>前言 本篇是对 2023-04-17 到 2023-04-23 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周的工作，手上累积了三个迭代版本，因为临近五一</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-01.png" alt="weekly-review-16-01"  />
</p>
<p>本篇是对 <code>2023-04-17</code> 到 <code>2023-04-23</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周的工作，手上累积了三个迭代版本，因为临近五一及其他原因，短期内无法发布上线。开发过程中，想着这些版本都会一个个上线，所以三个版本之间合并了代码，存在了依赖关系。以后，还是需要小版本迭代、上一个版本发布之后再从 main 分支合并代码。</p>
<p>这周先后看了《灌篮高手》电影、《春山如笑》话剧，体验了两种艺术表现形式，都让人失望。</p>
<p>利用空余时间，将 n8n 进行了调整，只将我在豆瓣、github、spotify、blog、strava上的活动同步到telegram，而直接不同步到 memos，单独创建一个 workflow 将 telegram 同步到 memos。这样 telegram 是一个对外分享的频道，而 memos 可以分享一些个人的心情或者说说。另外，为了减少对大家的干扰，不再将 rss 订阅内容同步到我的 <a href="https://t.me/chensoul_share">telegram 频道</a>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-16.png" alt="weekly-review-16-16"  />
</p>
<h2 id="灌篮高手">灌篮高手</h2>
<p>4月20日，灌篮高手国内上映，抽时间下班和老婆去看了这场电影。看完之后发了一个朋友圈：</p>
<blockquote>
<p>两个小时的电影，一场篮球比赛，尽是回忆，留下的是半亩良田半亩差评</p>
</blockquote>
<p>这就是我对这个电影的评价。因为情怀而去看了这部电影，却被情怀出卖了，这年头情怀不值钱了么？整部电影以宫城良田为视角，不停的回忆，四十分钟的比赛节奏不停的中断。很多片段都是动画里的内容，没有多少新内容。流川枫的刻画太少、樱木花道还是那样勇猛、晴子就没出现几次。。。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-11.jpeg" alt="weekly-review-16-11"  />
</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-12.jpeg" alt="weekly-review-16-12"  />
</p>
<h2 id="看话剧">看话剧</h2>
<p>周六去中南剧场看了一个话剧《春山如笑》，这是第一次看话剧，第一次接触话剧这个艺术表现形式。相比较于电影，我还是更喜欢看电影。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-13.jpeg" alt="weekly-review-16-13"  />
</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-14.jpeg" alt="weekly-review-16-14"  />
</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-15.jpeg" alt="weekly-review-16-15"  />
</p>
<h2 id="理财">理财</h2>
<p>这周总计支出 292.5 元，明细如下：</p>
<ul>
<li>4月21日：59元，和同事一起吃饭</li>
<li>4月22日：232元，周末买菜做饭，买水果</li>
<li>4月24日：1.5元，跑步小腿抽筋，骑共享单车回公司</li>
</ul>
<p>四月累计支出共 2417 元，其中餐饮和购物占了一半。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-09.jpeg" alt="weekly-review-16-09" style="width:50%;" />
<h2 id="健身">健身</h2>
<p>每天走一万步，这周完成了目标。以后每天跑步的话，这个目标就很容易达成了，甚至这个目标会换成每天跑步。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-10.jpeg" alt="weekly-review-16-10" style="width:50%;" />
<p>从 strava 的训练日志，可以看到本周运动记录如下：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-07.png" alt="weekly-review-16-07"  />
</p>
<p>从 strava 的训练日历，可以看到截至24日，本月运动了20天，23次，一共跑步了100公里。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-08.png" alt="weekly-review-16-08"  />
</p>
<h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>请参考《<a href="https://blog.chensoul.com/posts/2023/04/24/avoid-creating-unnecessary-objects/">《Effective Java 3》笔记：避免创建不必要的对象</a>》。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-02.png" alt="weekly-review-16-02"  />
</p>
<p>上面这个图是使用 <a href="https://shots.so/">Shots</a>  制作的，它是免费的，可以制作好看的图片，强烈推荐使用。</p>
<h2 id="本周分享">本周分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li><a href="https://www.skyue.com/23042217.html">使用 Python 实现 RSS 转 Newsletter</a></li>
<li><a href="https://www.bilibili.com/read/cv23249529">5种微服务注册中心该如何选型？</a></li>
<li><a href="https://allisonseboldt.com/5-years-of-indie-hacking/">5 Years of Indie Hacking</a></li>
<li><a href="https://feizhaojun.com/?p=3832">一个技术精致的网站：接口设计和图片加载</a></li>
<li><a href="https://newzone.top/posts/2022-11-03-ffmpeg_screen_recording.html">抛弃又贵又难用的录屏软件，3 分钟入门 FFmpeg</a></li>
<li><a href="http://weishu.me/2021/09/26/start-to-use-Rust/">开始学习和使用 Rust</a></li>
</ul>
<h3 id="一些工具">一些工具</h3>
<ul>
<li>
<p><a href="https://www.enhanceai.dev/">EnhanceAI</a> 使用一行代码为网站的输入框增加上 AI 能力。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-03.png" alt="weekly-review-16-03"  />
</p>
</li>
<li>
<p><a href="https://avatarmaker.com/">Avatar Maker</a> 一款在线 2D 动漫头像生成器，效果比较偏美漫风格。针对于半身头像的一些特征，提供了丰富的选项。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-04.png" alt="weekly-review-16-04"  />
</p>
</li>
<li>
<p><a href="https://markflow.app/">Markflow</a> 网页元素快速拷贝的工具，支持复制粘贴到 Figma，React，Html 里。这个网页中可以试用，Inspector 的效果还是很不错的。就是 Free Plan 每个月只能拷贝 5 个 elements 有点过于没诚意。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-05.png" alt="weekly-review-16-05"  />
</p>
</li>
<li>
<p><a href="https://shots.so/">Shots</a> 一款在线 Mockup 工具，能非常快速的做出套壳的效果图，内置的模版很多，样式调整的颗粒度也很细。适合独立开发快速出图。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-16-06.png" alt="weekly-review-16-06"  />
</p>
</li>
</ul>
<h3 id="本周嘀咕">本周嘀咕</h3>
<p>其实，大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道或者我的 <a href="https://memos.chensoul.com/">memos</a> 中，如果有一个脚本可以读取 Telegram 或者 memos 接口获取上周的分享记录，则可以自动化生成分享内容了。于是，花了一点时间写了一个 python 脚本 <a href="https://github.com/chensoul/chensoul.github.io/blob/main/fetch_memos.py">fetch_memos.py</a> 来读取 memos 接口。</p>
<p>获取到的内容如下：</p>
<ul>
<li><strong>2023-04-21 08:31:23</strong> 📺 看过灌篮高手 <code>#douban</code> <code>#watched</code>   <a href="http://movie.douban.com/subject/35315950/">查看链接</a></li>
<li><strong>2023-04-18 20:33:47</strong> 📺 看过龙马精神 <code>#douban</code> <code>#watched</code>  <a href="http://movie.douban.com/subject/35595615/">查看链接</a></li>
<li><strong>2023-04-18 20:33:47</strong> 📖 最近在读Rust权威指南 <code>#douban</code> <code>#reading</code>  <a href="https://book.douban.com/subject/35081743/">查看链接</a></li>
<li><strong>2023-04-18 20:33:47</strong> 📖 最近在读Python编程 <code>#douban</code> <code>#reading</code>  <a href="https://book.douban.com/subject/35196328/">查看链接</a></li>
<li><strong>2023-04-18 20:33:47</strong> 📖 最近在读Python工匠 <code>#douban</code> <code>#reading</code>  <a href="https://book.douban.com/subject/35723705/">查看链接</a></li>
<li><strong>2023-04-18 18:40:50</strong> 📝 周报-15｜Umami升级到2.0、汉街蜡像馆、使用Strava跑步 <code>#blog</code>   <a href="https://blog.chensoul.com/posts/2023/04/18/weekly_review_15/">查看链接</a></li>
<li><strong>2023-04-17 17:48:43</strong> 🌟 chensoul starred chensoul/chensoul.github.io <code>#github</code> <code>#star</code>  <a href="https://github.com/chensoul/chensoul.github.io">查看链接</a></li>
<li><strong>2023-04-17 17:10:45</strong> 📝 《Effective Java 3》笔记：使用私有构造函数或枚举类型创建单例 <code>#blog</code>   <a href="https://blog.chensoul.com/posts/2023/04/17/prefer-dependency-injection-to-hardwiring-resources/">查看链接</a></li>
</ul>
<p>后续的想法：对上面内容进行分类，比如，将带有豆瓣、Github、Strava、Spotfy、Blog标签的内容，归纳为我最近的活动；将带有 tool、skill 等标签其他内容归纳为我的分享（技术相关）；将其他内容归纳为我发表的说说。</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-15｜Umami升级到2.0、汉街蜡像馆、使用Strava跑步</title>
      <link>https://blog.chensoul.com/posts/2023/04/18/weekly_review_15/</link>
      <pubDate>Tue, 18 Apr 2023 17:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/04/18/weekly_review_15/</guid>
      <description>前言 ​ 题图：楚河汉街蜡像馆 本篇是对 2023-04-10 到 2023-04-16 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周的工作不算忙碌，继续学</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-01.png" alt="weekly-review-15-01"  />
</p>
<p>​														<em>题图：楚河汉街蜡像馆</em></p>
<p>本篇是对 <code>2023-04-10</code> 到 <code>2023-04-16</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周的工作不算忙碌，继续学习《Effective Java 3》这本书，并花了一些时间学习 Rust、Python 的基础语法。</p>
<p>这个月已经过了一半，减肥也进行了两周，体重从72公斤减到了现在的68.4公斤。在之前每天走路1万步的基础上，打算开始每天跑步，比记录跑步数据。</p>
<p>这周总计支出916元，明细如下：</p>
<ul>
<li>4月12日：329元，开通ETC预存300元</li>
<li>4月15日：116元，周末买菜做饭</li>
<li>4月16日：471元，老婆过生，吃饭和看电影</li>
</ul>
<p>四月累计支出共 2025 元，其中餐饮和购物占了一半。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-05.jpeg" alt="weekly-review-15-05" style="width:50%;" />
<h2 id="健身">健身</h2>
<p>这周每天走路步数如下，其中有一天因为加班而没有完成一万步的目标。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-06.png" alt="weekly-review-15-06" style="width:50%;" />
<p>受 <a href="https://conge.livingwithfcs.org/">@Conge</a> 博客影响，开始记录每天的跑步数据。首先是注册了 strava 账号，然后参考 <a href="https://github.com/yihong0618/running_page">running_page</a> 部署了一个我的跑步主页 <a href="https://run.chensoul.com/">run.chensoul.com</a>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-02.png" alt="weekly-review-15-02"  />
</p>
<p>因为我之前是使用悦跑圈 APP 记录跑步，所以又参考<a href="https://github.com/yihong0618/running_page/blob/master/README-CN.md#joyrun%E6%82%A6%E8%B7%91%E5%9C%88">这篇文章</a>导出 gpx 数据，然后<a href="https://github.com/yihong0618/running_page/blob/master/README-CN.md#gpx_to_strava">同步</a>到 Strava。最后，可以把悦跑圈 APP 卸载了。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-03.png" alt="weekly-review-15-03"  />
</p>
<p>上周跑步数据如下，总计28.64公里，比上周的19.05公里多了9.6公里。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-04.png" alt="weekly-review-15-04"  />
</p>
<p>上面搞定了之后，就可以使用 Strava 来跑步了。为了增加社交乐趣性，我在 n8n 里面创建了一个 workflow，将 Strava 活动发送到我的『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，效果如下。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-07.png" alt="weekly-review-15-07" style="width:50%;" />
<h2 id="umami升级到20">Umami升级到2.0</h2>
<p>1、首先备份数据库</p>
<p>2、升级数据库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/umami-software/migrate-v1-v2.git
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> migrate-v1-v2
</span></span><span class="line"><span class="cl">yarn install
</span></span><span class="line"><span class="cl">yarn build
</span></span></code></pre></div><p>创建 .env 文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-properties" data-lang="properties"><span class="line"><span class="cl"><span class="c1">#修改为你的数据库地址</span>
</span></span><span class="line"><span class="cl"><span class="na">DATABASE_URL</span><span class="o">=</span><span class="s">postgresql://umami:xxxxx@postgres.chensoul.com:5432/umami</span>
</span></span></code></pre></div><p>运行：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn start
</span></span></code></pre></div><p>3、重新部署静态页面</p>
<p>日志提示报错：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-16.png" alt="weekly-review-15-16"  />
</p>
<p>解决办法是修改 scripts/check-db.js：</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-17.png" alt="weekly-review-15-17"  />
</p>
<p>4、修改跟踪脚本，把站点中所有追踪脚本名字<code>umami.js</code>改为<code>script.js</code>。</p>
<p>5、最后查看实时仪表盘。我的 umami 实时 <a href="https://umami.chensoul.com/realtime/f110cfa0-b737-4690-a032-2b9073a57fc3">访问地址</a></p>
<h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>请参考《<a href="/posts/2023/04/17/prefer-dependency-injection-to-hardwiring-resources">Effective Java 3 笔记：依赖注入优于硬编码资源</a>》。</p>
<h2 id="汉街蜡像馆">汉街蜡像馆</h2>
<p>周末趁武汉旅游大年卡还没过期，跑到楚河汉街蜡像馆去溜达了一圈。因为有年卡，省去了150元的门票。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-08.png" alt="weekly-review-15-08" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-09.png" alt="weekly-review-15-09" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-10.png" alt="weekly-review-15-10" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-11.png" alt="weekly-review-15-11" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-12.png" alt="weekly-review-15-12" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-13.png" alt="weekly-review-15-13" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-14.png" alt="weekly-review-15-14" style="width:67%;" />
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-15-15.png" alt="weekly-review-15-15" style="width:67%;" />
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<p>1、<a href="https://www3.ntu.edu.sg/home/ehchua/programming/index.html">Java 编程教程</a></p>
<p><img loading="lazy" src="https://cdn.beekka.com/blogimg/asset/202301/bg2023011504.webp" alt="img"  />
</p>
<p>这个网站是新加坡南洋理工大学的一位老师的教案（英文），主要内容为新生的 Java 编程</p>
<p>2、<a href="https://offsec.tools/">offsec.tools</a></p>
<p><img loading="lazy" src="https://cdn.beekka.com/blogimg/asset/202301/bg2023012101.webp" alt="img"  />
</p>
<p>这个网站收集各种安全相关的软件工具，目前共有600多个。</p>
<p>3、<a href="https://juemuren4449.com/archives/habit-formation-plan">我的习惯养成计划：五分钟规则+打卡</a></p>
<p>4、<a href="https://www.jitao.tech/posts/my-guiding-principles-after-20-years-of-programming/">我编程 20 年的指导原则</a></p>
<p>5、<a href="https://lenciel.com/2022/10/renaming-with-zmv/">用 zmv 批量重命名文件</a></p>
<h3 id="一些工具">一些工具</h3>
<ul>
<li><a href="https://webperformancereport.com/">WebPerformance Report</a> 这个网站可以用邮箱订阅你的网站性能的个性化报告。它会监控指定网站的性能，每周会发送一封报告邮件给你。</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-14｜如何学习一门编程语言</title>
      <link>https://blog.chensoul.com/posts/2023/04/13/weekly_review_14/</link>
      <pubDate>Thu, 13 Apr 2023 09:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/04/13/weekly_review_14/</guid>
      <description>前言 本篇是对 2023-04-03 到 2023-04-09 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周还是和以前一样每天运动，并开始施行断食。因为</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekl-review-14-01.jpg" alt="weekl-review-14-01"  />
</p>
<p>本篇是对 <code>2023-04-03</code> 到 <code>2023-04-09</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周还是和以前一样每天运动，并开始施行断食。因为是刚开始断食，有时候忍不住饥饿感而吃了一些东西。</p>
<p>本周工作主要是发布了一个版本，其余时间用来学习 Rust 和 Python，初学这两种语言，他们语法上有很多相似之处。如何学习一门编程语言？整理了一些步骤。尝试了一下用多种语言编写猜数游戏，这些语言包括 Rust、Ptyhon、Go、NodeJs、JavaScript、Kotlin、Bash，除了 Java。这是一个很有意思的事情，如果能够把这些语言都熟练掌握，那就更好了。</p>
<h2 id="关于健身">关于健身</h2>
<p>完成了每天一万步的计划，并且共跑步 5 次，一共 18.6 公里，平均配速 7 分钟4 9 秒，每天跳绳 500+。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekl-review-14-03.jpg" alt="weekl-review-14-03" style="width:67%;" />
<h2 id="关于记账">关于记账</h2>
<p>本周继续使用微信记账本记录每天支出。累计消费835元，明细如下：</p>
<ul>
<li>
<p>4月3日，周一：支出 59 元，餐饮</p>
</li>
<li>
<p>4月4日，周二：支出 0 元，</p>
</li>
<li>
<p>4月5日，周三：支出 228 元，超市购物</p>
</li>
<li>
<p>4月6日，周四：支出 15 元，停车费</p>
</li>
<li>
<p>4月7日，周五：支出 12 元</p>
</li>
<li>
<p>4月8日，周六：支出 415 元，加油+餐饮</p>
</li>
<li>
<p>4月8日，周日：支出 106 元，餐饮</p>
</li>
</ul>
<h2 id="如何学习一门编程语言">如何学习一门编程语言</h2>
<p>学习一门编程语言的基础语法对于初学者来说非常重要，以下是一些详细的步骤：</p>
<ol>
<li>了解编程语言的基础概念：在学习编程语言之前，了解编程的基础概念是非常重要的。例如，变量、数据类型、条件语句、循环、函数等等。</li>
<li>寻找学习资源：学习编程语言的基础语法可以通过各种学习资源来实现，如书籍、教程、在线视频和交互式学习平台等。选择适合自己的学习资源是非常重要的。</li>
<li>学习变量和数据类型：在学习编程语言之前，学习变量和数据类型是必须的。了解如何定义变量、赋值和使用不同的数据类型，例如字符串、整数、浮点数、布尔值等等。</li>
<li>学习条件语句：条件语句是编程语言中的重要概念之一。例如，学习如何使用if语句和else语句，使程序在特定条件下执行不同的代码块。</li>
<li>学习循环：循环是编程语言中的另一个重要概念。例如，学习如何使用while循环和for循环，使程序在特定条件下重复执行代码块。</li>
<li>学习函数：函数是编程语言中的重要概念之一。学习如何定义和使用函数，以将代码结构化并重用。</li>
<li>练习编写代码：练习编写代码是学习编程语言基础语法的重要方式。编写小程序或项目，例如打印&quot;Hello World&quot;、计算器或猜数字游戏等。</li>
<li>学习调试和错误处理：学习如何调试代码和处理常见错误，例如语法错误、逻辑错误和运行时错误等。</li>
</ol>
<p>总结一下，学习一门编程语言的步骤：</p>
<ul>
<li>
<p>安装</p>
</li>
<li>
<p>Hello World</p>
<ul>
<li>注释</li>
<li>格式化输出</li>
</ul>
</li>
<li>
<p>变量和常量</p>
</li>
<li>
<p>数据类型</p>
<ul>
<li>基本类型
<ul>
<li>运算</li>
<li>类型转换</li>
</ul>
</li>
<li>复杂类型</li>
</ul>
</li>
<li>
<p>表达式和语句</p>
<ul>
<li>条件</li>
<li>循环</li>
<li>断言</li>
</ul>
</li>
<li>
<p>函数</p>
</li>
<li>
<p>类和对象</p>
</li>
<li>
<p>包和模块</p>
</li>
<li>
<p>异常处理</p>
</li>
<li>
<p>标准库</p>
<ul>
<li>IO</li>
<li>网络</li>
<li>多线程</li>
</ul>
</li>
<li>
<p>单元测试</p>
</li>
</ul>
<p>接下来，打算按照上面的步骤来学习 Rust、Python、Go，也许还会有 NodeJs 和 Kotlin，并整理相关笔记。</p>
<h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>请参考 <a href="/posts/2023/04/11/enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type/">《Effective Java 3》笔记：使用私有构造函数或枚举类型创建单例</a></p>
<h3 id="rust">Rust</h3>
<p>因为对 <a href="https://tauri.app/">Tauri</a> 这个 GUI 框架挺感兴趣，所以我开始学习 Rust 了，目前在参考 <a href="https://rustwiki.org/">https://rustwiki.org/</a> 上的 <a href="https://rustwiki.org/zh-CN/rust-by-example/">通过例子学 Rust</a> 和 《Rust权威指南》 学习 Rust。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekl-review-14-02.jpg" alt="weekl-review-14-02" style="width:50%;" />
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li><a href="http://ebookconverter.blogspot.com/2013/11/where-to-find-epub-file-in-ibooks-for.html">Where to find the EPUB file in iBooks for Mac under OS X 10.9 Mavericks</a></li>
<li><a href="https://roy.wang/umami-js-quicken/">使用 CDN 加速 Umami 静态资源</a></li>
<li><a href="https://blog.alswl.com/2023/04/web-api-guidelines/">实用 Web API 规范</a></li>
<li><a href="https://utgd.net/article/9367">一次本地免费过滤 RSS 的尝试：NetNewsWire</a></li>
<li><a href="https://catcoding.me/p/redis-antriez/">不想当作家的程序员写不出 Redis</a></li>
<li><a href="https://www.lijiaocn.com/%E7%BC%96%E7%A8%8B/2023/03/30/kotlin-syntax.html">Kotlin 语法一站式手册</a></li>
</ul>
<h3 id="一些工具">一些工具</h3>
<ul>
<li><a href="https://listmonk.app/">Listmonk</a> 一款自主托管的电子邮件列表管理工具。它允许您将邮件列表导入到自己的服务器中，并使用它来管理您的邮件列表和发送电子邮件。Listmonk具有良好的可扩展性和自定义性，可通过REST API进行操作，并支持高级功能，例如自定义字段、模板和自动化工作流程，从而使其成为一个非常有用和灵活的电子邮件列表管理工具。与其他在线邮件列表服务相比，Listmonk的优势之一是您完全掌控自己的数据和服务器，因此您不必担心第三方公司的数据隐私问题。</li>
<li><a href="https://ricks-apps.com/osx/sitesucker/index.html">SiteSucker</a> SiteSucker是一款MacOS平台上的免费工具，它可以帮助用户将整个网站下载到本地电脑中。使用SiteSucker，用户只需要输入目标网站的URL，它就会自动下载该网站的所有页面、图像、视频和其他资源，并将它们保存在本地硬盘上，以便用户离线浏览或备份。SiteSucker支持多线程下载和断点续传，可以在不中断下载的情况下暂停和恢复下载任务。此外，它还可以过滤URL，以便用户只下载特定类型的文件，例如HTML、图像或视频文件。总之，SiteSucker是一款非常实用的工具，适用于需要离线浏览网站、备份网站或进行网站抓取的用户。</li>
<li><a href="https://montaigne.io/">Montaigne</a> 用苹果笔记来创建网站、博客或作品集</li>
<li><a href="https://github.com/BlueMatthew/WechatExporter">WechatExporter</a> 聊天记录导出</li>
<li><a href="https://paw.cloud/">RapidAPI</a> 一款MacOS平台上的API开发工具，它旨在帮助开发人员更轻松地设计、测试和调试API。Paw提供了一个直观的用户界面，可以让用户轻松地构建和调试API请求，并查看服务器响应。Paw支持多种API协议和格式，例如REST、SOAP、GraphQL、JSON和XML等，可以与多种服务器端点和身份验证方式进行集成。此外，Paw还具有强大的自动化和脚本化功能，允许用户使用JavaScript或Python编写自定义脚本，以自动化API测试和集成工作流程。</li>
<li><a href="https://gist.github.com/VincentSit/a682f4162b998c7f24d08ab34bf233da">卸载MacOS微信键盘</a></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-13｜健身、记账、更新SSL证书、代码提交百度站点收录</title>
      <link>https://blog.chensoul.com/posts/2023/04/04/weekly_review_13/</link>
      <pubDate>Tue, 04 Apr 2023 15:40:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/04/04/weekly_review_13/</guid>
      <description>前言 本篇是对 2023-03-27 到 2023-04-02 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 本周是三月的最后一周，想到这，就想对随便对三月份</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-13-01.jpeg" alt="weekly-review-13-01"  />
</p>
<p>本篇是对 <code>2023-03-27</code> 到 <code>2023-04-02</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>本周是三月的最后一周，想到这，就想对随便对三月份做个总结。总结的方面，大概包括工作、生活、学习、健身、财务、娱乐几个方面。万事开头难，不知道能者多少，但是，相信不管写多少，都是有意义的。</p>
<p>先来说说最近一周做了什么。查看一下 gitlab 上标签提交记录，这周发布了一个版本，其余时间是进行测试，为下周发布做准备。在工作之余，开始学习《Effective Java 3》，并用 chatgpt 作为辅助工作，加深对技术的理解。另外，有了想学习 React、Rust、Go、Pyhon 的想法。想学的东西有点多，只能一步步来。争取每天利用下班之后的一个小时进行碎片化的学习，并且做好相关笔记，如有可能发布在这个博客上面。加油！</p>
<p>这周完成了每天一万步的计划，其中周末走了 3 万多步，并且还开始了跑步。</p>
<h2 id="关于健身">关于健身</h2>
<p>完成了每天一万步的计划，并且共跑步 8 次，一共 26 公里，最高平均配速 7 分钟，还跳绳一次（550 下）。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-13-03.jpeg" alt="weekly-review-13-03" style="width:50%;" />
<p>跑步的目的不是快，而是乐此不疲。每天跑步 5 公里，每次消耗 300 卡路里的热量，大概需要 10 周才能瘦 10 斤。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-13-02.jpeg" alt="weekly-review-13-02" style="width:50%;" />
<p>光靠走路和跑步，想在 4 月完成瘦 10 斤的目标，应该是不可能的，打算辅助间歇性断食，看下效果。</p>
<blockquote>
<p>跑步是一种有氧运动，可以促进身体代谢，消耗体内的脂肪和热量，达到减肥的效果。但是减肥的效果受到很多因素的影响，如个人的体重、身高、年龄、性别、饮食习惯、跑步强度、频率和时长等。</p>
<p>通常来说，减肥的基本原理是消耗更多的热量，从而达到体重减轻的效果。每天跑步 5 公里的运动量相对较小，一般在一个小时左右可以完成。如果每天坚持跑步，同时注意饮食控制，增加其他有氧运动和合理的休息，可能会在几个月内看到一定的减肥效果。</p>
<p>根据一般的减肥经验，每消耗 3500 卡路里的热量就可以减少一斤体重。假设每次跑步消耗 300 卡路里的热量，那么每天跑步 5 公里约消耗 300 ~ 400 卡路里的热量。如果每天坚持跑步，并且保持每天消耗 300 ~ 400 卡路里的热量，那么大约需要 10 周时间才能减少 10 斤体重。</p>
</blockquote>
<h2 id="关于记账">关于记账</h2>
<p>上周开始，在寻找一个记账的 APP，想开始记录每天的收入与支出。当然，更多的应该是支出了。现在，大环境不行，公司裁员不停，必须要开源节流，手上储备足够的现金。</p>
<p>找来找去，发现微信里没有有个『微信记账本』小程序就可以在微信里自动记账，也支持手动记账。于是，这周试了一下这个小程序，并有意的控制自己每天的输出。因为每天都有带饭，这样中饭就不用花钱了；早餐呢，是泡之前买的黑芝麻糊喝，省去了早餐费用。结果是，这周的支出只有 4.5 元。一次是早上买了一本豆浆，一次是早上跑步怕迟到就骑了一次动感单车。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-13-05.jpeg" alt="weekly-review-13-05" style="width:50%;" />
<p>正好三月结束了，查看了一下三月的支出报表。总的来说，三月支出的有点多，超乎了我的想象。如果每个月都是支出这么多，那以后的零花钱就不够用了。还是要勒紧裤腰带过日子啊。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-13-04.jpeg" alt="weekly-review-13-04" style="width:50%;" />
<h2 id="更新-ssl-证书">更新 SSL 证书</h2>
<p>安装 acme.sh</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl https://get.acme.sh <span class="p">|</span> sh -s <span class="nv">email</span><span class="o">=</span>chensoul.eth@gmail.com
</span></span></code></pre></div><p><strong>我的域名托管在cloudflare</strong>，故需要获取 <a href="https://dash.cloudflare.com/profile/api-tokens">cloudflare API key</a>，在 <code>API 令牌</code> 页面，点击查看 <code>Global API Key</code>。</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-13-06.png" alt="weekly-review-13-06"  />
</p>
<p>保存 <code>CF_Key</code> 和 <code>CF_Email</code>：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">CF_Key</span><span class="o">=</span><span class="s2">&#34;cloudflare 中查看你的 key&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">CF_Email</span><span class="o">=</span><span class="s2">&#34;chensoul.eth@gmail.com&#34;</span>
</span></span></code></pre></div><p>生成证书，并重启 nginx：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">acme.sh --issue -d <span class="s2">&#34;chensoul.com&#34;</span> -d <span class="s2">&#34;*.chensoul.com&#34;</span> --dns dns_cf <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--cert-file      /usr/local/nginx/ssl/chensoul.com.cer  <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--key-file       /usr/local/nginx/ssl/chensoul.com.key  <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--fullchain-file /usr/local/nginx/ssl/fullchain.cer <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--reloadcmd <span class="s2">&#34;nginx -s reload&#34;</span>
</span></span></code></pre></div><p>移除域名证书自动更新</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">acme.sh --remove -d chensoul.com -d <span class="s2">&#34;*.chensoul.com&#34;</span>
</span></span></code></pre></div><h2 id="百度站点收录">百度站点收录</h2>
<p>参考 <a href="https://ifttl.com/push-urls-to-baidu/">向百度主动推送网站链接</a> 使用脚本定时推送网站链接到百度站点。对 <code>push_to_baidu.sh</code> 脚本的  parse 方法做了如下修改，以解决 <code>xmllint 解析带有命名空间的 xml 文件报错</code> 的问题。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="k">function</span> parse <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">local</span> <span class="nv">file</span><span class="o">=</span><span class="nv">$1</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$file</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$XMLLINT</span> --format --xpath <span class="s2">&#34;//*[local-name()=&#39;loc&#39; and namespace-uri()=&#39;http://www.sitemaps.org/schemas/sitemap/0.9&#39;]/text()&#34;</span> <span class="s2">&#34;</span><span class="nv">$file</span><span class="s2">&#34;</span> <span class="p">|</span> sed -e <span class="s1">&#39;s/https/\nhttps/g&#39;</span> &gt; <span class="s2">&#34;</span><span class="nv">$URL_TEMP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$URL_TEMP</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>请参考 <a href="/posts/2023/04/03/builder-instead-of-constructors/">《Effective Java 3》笔记：使用构造器代替构造函数</a></p>
<h3 id="rust">Rust</h3>
<p>因为对 <a href="https://tauri.app/">Tauri</a> 这个 GUI 框架挺感兴趣，所以我开始学习 Rust 了，目前在参考 <a href="https://rustwiki.org/">https://rustwiki.org/</a> 上的 <a href="https://rustwiki.org/zh-CN/rust-by-example/">通过例子学 Rust</a> 和 <a href="https://rustwiki.org/zh-CN/book/">Rust 程序设计语言</a> 学习 Rust。</p>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p><a href="https://www.lijiaocn.com/%E7%BC%96%E7%A8%8B/2023/03/28/go-wasm-usage.html">Go wasm 使用：Go 代码编译成 WebAssembly 及调用</a></p>
</li>
<li>
<p><a href="https://ourai.ws/posts/what-i-have-done-in-2023-q1/">失业三个月，我都干了啥？</a></p>
</li>
<li>
<p><a href="https://www.bboy.app/2023/04/04/%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8Bgitea%E7%9A%84action/">介绍一下gitea的action</a></p>
</li>
<li>
<p><a href="https://blog.p2hp.com/archives/10711">作为绝对初学者学习 Web 开发</a></p>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<ul>
<li>
<p>数据统计分析：<a href="https://usefathom.com/">https://usefathom.com</a></p>
</li>
<li>
<p>Cloudflare 图床：<a href="https://www.cloudflare.com/zh-cn/products/cloudflare-images/">Cloudflare Images</a></p>
</li>
<li>
<p>Java 单元测试插件：<a href="https://squaretest.com/">Squaretest for IntelliJ IDEA</a></p>
</li>
<li>
<p>基于标记的科学排版系统：<a href="https://typst.app/">Typst</a>。可以协同工作，且界面更友好。旨在成为 LaTeX、Word 和 Google Docs 等的替代品。</p>
</li>
<li>
<p>数据可视化资源库：<a href="https://vis.zone/lib/">https://vis.zone/lib/</a>。网站提供非常全面的可视化图表类型供参考，还收集了很多实现可视化的代码、工具、课程、书籍。</p>
</li>
<li>
<p>一个免费的 chatgpt 在线 web：https://chatbot.theb.ai/#/chat/1002</p>
</li>
</ul>
<h3 id="一些视频">一些视频</h3>
<p>以下是最近在看的电视、动画片</p>
<p>-《飚速宅男》第五季。一群高中生骑自行车的热血故事。</p>
<p>-《潘多拉伪造的乐园》。此剧讲述了一名拥有令人称羡生活的女子在恢复过往的记忆后，为保护自己和家人对随意操纵自己命运的人展开报复的故事</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-12｜车辆被堵、开车总结、Effective Java3笔记</title>
      <link>https://blog.chensoul.com/posts/2023/03/28/weekly_review_12/</link>
      <pubDate>Tue, 28 Mar 2023 09:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/03/28/weekly_review_12/</guid>
      <description>前言 本篇是对 2023-03-20 到 2023-03-26 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 上周去同济医院检查鼾症，检查结果是轻度症状，医生</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-12-01.jpeg" alt="weekly-review-12-01"  />
</p>
<p>本篇是对 <code>2023-03-20</code> 到 <code>2023-03-26</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>上周去同济医院检查鼾症，检查结果是轻度症状，医生建议多运动减肥。这周每天走路 1 万步的目标已达成。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-12-02.png" alt="weekly-review-12-02" style="width:50%;" />
<p>工作上发布了一个版本，另外两个迭代正在进行中，预计这周再发布一个版本。从飞书通讯录看到又有三个非技术类同事被裁，这周周会，部门领导说最近又有一个做商务的同事被优化了。</p>
<p>上周有一天早上，车子停在小区里面，被两个车子挡住了前后道路，联系不上车主，只好坐地铁上班。话说，自从开车上班之后，使用手机的频率明显降低了很多。</p>
<p>上周末阳光正好，于是回家去给已故的亲人扫墓。周六回老家，周日回老婆家。逝者已逝，活着的人要善待自己，好好吃饭，好好睡觉，好好工作，好好运动。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-12-03.jpeg" alt="weekly-review-12-03" style="width:50%;" />
<h2 id="工作">工作</h2>
<h3 id="effective-java-3-笔记">Effective Java 3 笔记</h3>
<p>请参考 <a href="/posts/2023/04/03/static-factory-methods-instead-of-constructors/">《Effective Java 3》笔记：静态工厂方法代替构造函数</a>。</p>
<h3 id="machine-learning-with-go">Machine-Learning-With-Go</h3>
<p>B站视频：<a href="https://www.bilibili.com/video/BV1iW411w7ev">「课程」使用Go做机器学习</a></p>
<p>源代码：<a href="https://github.com/PacktPublishing/Machine-Learning-With-Go">Machine-Learning-With-Go</a></p>
<h2 id="生活">生活</h2>
<h3 id="车辆被堵">车辆被堵</h3>
<p>早上准备开车上班，发现车子前后道路都被车辆占道了。前面车辆占道，昨天晚上下班回来就发现了，也确认了这个车辆没有留挪车电话。当时就隐隐担忧今天早上会被挡住前后道路。没有想到，真的被挡了。后面的车辆留了挪车电话。六点半开始，我就给后面车的车主打电话发短信，对方一直没接电话，估计手机调静音还在睡觉吧。没有想到的是，截止到现在时间八点，他还没有给我回电话，这哥们睡得那是真香啊。</p>
<p>在道路被占用之后，我做了什么？除了给留了号码的那个车主打电话之外，我还想到交管 12123 APP 上面有一个一键挪车功能。于是，试了一下这个功能。原以为这个功能可以电话通知到对方挪车。实际情况却只是提交了一个工单而已，真是一个鸡肋的功能。用户使用这个功能，是希望及时联系到车主过来挪车，而不是提交一个工单之后，傻傻的等待。另外，这个功能也不能叫一键挪车，因为点击了这个功能之后，还要输入车牌号、上传照片。更好的体验应该是只用上传占用道路的车辆照片，由系统识别出车牌号，然后后台找到车主的手机号，生成一个临时号码并调用手机的拨号功能。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-12-04.jpeg" alt="weekly-review-12-04" style="width:50%;" />
<p>在道路被占用之后，我的心态是怎样的？刚开始想生气愤怒，后来想了想，事已至此，没有必要生气，生气只能影响自己一天的心情和好运。并尝试把这种对自己不利的一面转化为对自己有利的一面。原想六点半开车上班，道路被占之后，就可以体验一下七点多甚至八点多开车上班需要多长时间以及是否堵车。</p>
<p>如果是我把道路占用了，我该怎么做呢？首先，是车上留一个手机号码；其次，是第二天早上保证手机不关机并且没有静音。</p>
<p>如何避免再次出现这样的情况呢？一是通过电话或者便条的形式提醒车主要在车上留一个挪车电话并保证电话畅通，二是反馈给物业让物业来提醒小区里的车主不要随意占用车道。</p>
<h3 id="开车总结">开车总结</h3>
<p>学到了新知识：</p>
<ul>
<li>学会了如何调节前灯的高度。数字越大，灯光照射的越近。</li>
</ul>
<p>开车需要改进的地方：</p>
<ul>
<li>1、今天在菜场点火的时候，错把油门当刹车</li>
<li>2、准备加速超过左边货车的时候，货车打了右前灯，下意识地把方向盘向右打了一点</li>
<li>3、遇到红绿灯变黄灯时，刹车太急。想冲过去，但犹豫了。这样做太危险，不能存在侥幸心理。下次遇到这种情况，宁可提前刹车，等红灯过了，再向前行驶。</li>
</ul>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p><a href="https://lutaonan.com/blog/things-i-learnt-after-6-years-as-software-engineer/">做了 6 年程序员，我学到的 10 条经验</a></p>
</li>
<li>
<p><a href="https://mritd.com/2021/06/06/jetbrains-plugins/">JetBrains 常用插件</a></p>
</li>
<li>
<p><a href="https://blog.skyju.cc/post/v2ray-warp-go-unlock-new-bing/">v2ray + warp-go 非全局使用Cloudflare WARP解锁New Bing等服务</a></p>
</li>
<li>
<p><a href="https://blog.17lai.site/posts/8f152670/">如何创建属于自己的私人资料库与私人搜索引擎 _</a></p>
</li>
<li>
<p><a href="https://1byte.io/google-large-scale-dev/">如何高效地协作开发：一些 Google 的实践</a></p>
</li>
<li>
<p><a href="https://jasonkayzk.github.io/2023/03/28/Java%E9%AB%98%E6%80%A7%E8%83%BD%E7%BC%93%E5%AD%98%E5%BA%93Caffeine/">Java高性能缓存库Caffeine</a></p>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<ul>
<li>
<p><a href="https://hao.uisdc.com/">优设导航官网</a>：设计导航2013年上线至今，是优设网旗下最专业好用的设计师导航网站！设计导航为设计师提供UI设计、设计教程、素材下载、高清图库、配色方案、App设计、网页设计等设计网站导航指引。设计导航每周更新，设计风向标就看优设网！</p>
</li>
<li>
<p><a href="https://dusays.com/567/">Zeabur 属于国人的免费托管平台</a></p>
</li>
<li>
<p><a href="https://luyuhuang.tech/2023/03/21/nvim.html">Neovim 使用体验</a></p>
</li>
<li>
<p><a href="https://www.domon.cn/github-copilotmian-fei-ping-ti-codeium/">Github Copilot免费平替 - Codeium</a></p>
</li>
<li>
<p><a href="https://chatdoc.com/">Chat with documents</a></p>
</li>
<li>
<p><a href="https://codeium.com/">Codeium</a>：一款免费的类 Github Copilot 的 AI 代码辅助产品，可以便捷的和 AI 进行结对编程。初步使用下来和主流的 IDE 的集成很好，感兴趣的朋友可以先到<a href="https://codeium.com/playground">浏览器里在线尝试一番</a>。</p>
</li>
</ul>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-12-05.jpeg" alt="codeium"  />
</p>
<h3 id="一些视频">一些视频</h3>
<ul>
<li>飚速宅男第五季</li>
<li>魔女</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-11｜从语雀迁移到Obsidian</title>
      <link>https://blog.chensoul.com/posts/2023/03/20/weekly_review_11/</link>
      <pubDate>Mon, 20 Mar 2023 11:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/03/20/weekly_review_11/</guid>
      <description>前言 ​ 图片：涨渡湖湿地水上森林公园 本篇是对 2023-03-13 到 2023-03-19 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周的工作主要是重</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-11-04.jpeg" alt="weekly-review-11-04"  />
</p>
<p>​														              					图片：<em>涨渡湖湿地水上森林公园</em></p>
<p>本篇是对 <code>2023-03-13</code> 到 <code>2023-03-19</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周的工作主要是重构、优化系统，工作节奏比之前轻缓了很多。这周也开始了开车上下班，除去周五去医院做检查，一共开了 4 天车。从汉口到光谷，一共 29 公里，如果早上 6:30 出发，就只需要 50 分钟；如果 6:45 出发，竟然需要两个小时，真是无语了。无奈之下，只能每天早点出门早点到公司，然后，打完卡之后，在公司楼下走路。</p>
<p>这周开始心里默默定了一个 flag，就是每天走路 10000 步。看了一下微信运动，基本上达成了，除了周五晚上因为加班，而少走了 64 步。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-11-03.png" alt="weekly-review-11-03" style="width:67%;" />
<h2 id="从语雀迁移到obsidian">从语雀迁移到Obsidian</h2>
<p>上周提到开始使用格志 APP 来写日志，使用了一段时间之后，发现了一些缺点：</p>
<ul>
<li>部分功能收费</li>
<li>导出的 markdown 不支持图片显示</li>
<li>不支持本地存储</li>
</ul>
<p>于是，放弃了使用格志 APP，继而在使用了一段时间 Obsidian 之后，改为使用 Obsidian 来写日志和周报。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-11-02.png" alt="weekly-review-11-02" style="width:67%;" />
<p>为了不给自己太大压力，日报每天复盘内容包括以下几方面：</p>
<ul>
<li>
<p>今日待办</p>
</li>
<li>
<p>学习</p>
</li>
<li>
<p>工作</p>
</li>
<li>
<p>生活</p>
</li>
<li>
<p>健身</p>
</li>
</ul>
<h3 id="导出语雀文档为-markdown">导出语雀文档为 markdown</h3>
<p>参考 <a href="https://github.com/yuque/yuque-exporter">yuque/yuque-exporter</a> 文档，下载 yuque-exporter  之后进行导出操作，发现以下问题：</p>
<ul>
<li>该项目需要使用的 nodejs 版本为 18.0.4</li>
<li>nodejs 使用正确的版本还是导出失败</li>
</ul>
<p>于是，改为使用源码编译和运行导出。</p>
<p>1、先下载代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/yuque/yuque-exporter.git
</span></span></code></pre></div><p>2、修改 main.ts 中需要导出的语雀知识库地址为自己的仓库地址：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="c1">// Determining if an ESM module is main then run the code
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">if</span> <span class="p">(</span><span class="kr">import</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;file:&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="kr">module</span><span class="nx">Path</span> <span class="o">=</span> <span class="nx">fileURLToPath</span><span class="p">(</span><span class="kr">import</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">===</span> <span class="kr">module</span><span class="nx">Path</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">urlPaths</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;chensoul/rose&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;chensoul/growup&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;chensoul/tech&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">await</span> <span class="nx">start</span><span class="p">({</span> <span class="nx">urlPaths</span> <span class="p">});</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>3、参考 <a href="https://www.yuque.com/yuque/developer/api#785a3731">文档</a> 申请语雀 TOKEN。</p>
<p>4、下载项目依赖：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npm i
</span></span></code></pre></div><p>5、运行项目，开始导出：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">YUQUE_TOKEN</span><span class="o">=</span>XXXXXX npm start
</span></span></code></pre></div><blockquote>
<p>导出的文件在 storage 目录，接下来可以拷贝到 Obsidian 目录里。</p>
</blockquote>
<p>6、另外，可以对 yuque-exporter 源码做一些修改：</p>
<ul>
<li>导出的 markdown 文件不要有 frontmatter，修改 doc.ts 中 buildDoc 方法：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kr">export</span> <span class="kr">async</span> <span class="kd">function</span> <span class="nx">buildDoc</span><span class="p">(</span><span class="nx">doc</span>: <span class="kt">TreeNode</span><span class="p">,</span> <span class="nx">mapping</span>: <span class="kt">Record</span><span class="p">&lt;</span><span class="nt">string</span><span class="err">,</span> <span class="na">TreeNode</span><span class="p">&gt;)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">docDetail</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">readJSON</span><span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">metaDir</span><span class="p">,</span> <span class="nx">doc</span><span class="p">.</span><span class="kr">namespace</span><span class="p">,</span> <span class="s1">&#39;docs&#39;</span><span class="p">,</span> <span class="sb">`</span><span class="si">${</span><span class="nx">doc</span><span class="p">.</span><span class="nx">url</span><span class="si">}</span><span class="sb">.json`</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">content</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">remark</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;settings&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">bullet</span><span class="o">:</span> <span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="nx">listItemIndent</span><span class="o">:</span> <span class="s1">&#39;one&#39;</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="p">.</span><span class="nx">use</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span> <span class="nx">replaceHTML</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span> <span class="nx">relativeLink</span><span class="p">,</span> <span class="p">{</span> <span class="nx">doc</span><span class="p">,</span> <span class="nx">mapping</span> <span class="p">}],</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span> <span class="nx">downloadAsset</span><span class="p">,</span> <span class="p">{</span> <span class="nx">doc</span><span class="p">,</span> <span class="nx">mapping</span> <span class="p">}],</span>
</span></span><span class="line"><span class="cl">    <span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">docDetail</span><span class="p">.</span><span class="nx">body</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">//  doc.content = frontmatter(doc) + content.toString();
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">doc</span><span class="p">.</span><span class="nx">content</span> <span class="o">=</span> <span class="nx">content</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// FIXME: remark will transform `*` to `\*`
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">doc</span><span class="p">.</span><span class="nx">content</span> <span class="o">=</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s1">&#39;\\*&#39;</span><span class="p">,</span> <span class="s1">&#39;*&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">doc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>导出的段落之间增加换行，修改 doc.ts 中 replaceHTML 方法：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">replaceHTML() {</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">tree</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">htmlNodes</span> <span class="o">=</span> <span class="nx">selectAll</span><span class="p">(</span><span class="s1">&#39;html&#39;</span><span class="p">,</span> <span class="nx">tree</span><span class="p">)</span> <span class="kr">as</span> <span class="nx">Text</span><span class="p">[];</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">node</span> <span class="k">of</span> <span class="nx">htmlNodes</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span> <span class="p">(</span><span class="nx">node</span><span class="p">.</span><span class="nx">value</span> <span class="o">===</span> <span class="s1">&#39;&lt;br /&gt;&#39;</span> <span class="o">||</span> <span class="nx">node</span><span class="p">.</span><span class="nx">value</span> <span class="o">===</span> <span class="s1">&#39;&lt;br/&gt;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">node</span><span class="p">.</span><span class="kr">type</span> <span class="o">=</span> <span class="s1">&#39;text&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">node</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="s1">&#39;\n\n\n&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>7、删除导出的 markdown 文件当中的锚点标签（例如：<code>&lt;a name=&quot;xx&quot;&gt;&lt;/a&gt;</code>）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> storage
</span></span><span class="line"><span class="cl"><span class="c1"># macos 上执行</span>
</span></span><span class="line"><span class="cl">find . -type f -name <span class="s1">&#39;*.md&#39;</span> -exec sed -i <span class="s1">&#39;&#39;</span> <span class="s1">&#39;s/&lt;a name=\&#34;[^\&#34;]*\&#34;&gt;&lt;\/a&gt;//g&#39;</span> <span class="o">{}</span> +
</span></span></code></pre></div><img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-11-01.png" alt="weekly-review-11-01" style="width:67%;" />
<p>在上面的示例代码中，我们使用了 sed 命令来删除 Markdown 文件中所有的类似 <code>&lt;a name=&quot;xx&quot;&gt;&lt;/a&gt;</code> 的锚点标签。其中：</p>
<ul>
<li><code>-i ''</code> 参数表示直接修改源文件，而不是输出到标准输出流。<code>''</code> 表示在 macOS 系统上备份修改前的文件，如果在 Linux 系统上使用该命令，可以省略该参数。</li>
<li><code>s/&lt;a name=\&quot;[^\&quot;]*\&quot;&gt;&lt;\/a&gt;//g</code> 表示用空字符串替换所有符合正则表达式 <code>&lt;a name=\&quot;[^\&quot;]*\&quot;&gt;&lt;\/a&gt;</code> 的字符串。该正则表达式匹配所有以 <code>&lt;a name=</code> 开头，以 <code>&quot;&gt;&lt;/a&gt;</code> 结尾的标签，且中间的文本不包含双引号。</li>
</ul>
<p>8、将导出的 markdown 文件中的本地图片批量上传到图床，操作方法：使用 typora 打开 storage 目录，然后依次点击 格式、图像、上传所有本地图片</p>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p><a href="https://moelove.info/2023/03/21/GitHub-Actions-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%9B%A2%E9%98%9F%E6%9B%B4%E5%85%B7%E7%AB%9E%E4%BA%89%E5%8A%9B/">GitHub Actions 成本优化：让你的团队更具竞争力</a></p>
</li>
<li>
<p><a href="https://juemuren4449.com/archives/open-gzip-on-nginx">Nginx 开启 gzip 压缩</a></p>
</li>
<li>
<p><a href="https://www.superheaoz.top/2022/06/57091/">Obsidan日记、记账与自动同步</a></p>
</li>
<li>
<p><a href="https://elmagnifico.tech/2023/03/16/Doprax-V2ray/">Doprax搭建免费V2ray节点</a></p>
</li>
<li>
<p><a href="https://elizen.me/posts/2023/03/hi-icloud/">Hi，土区 iCloud</a></p>
</li>
<li>
<p><a href="https://btsogiwudc.feishu.cn/docx/CgoJdHyWKopl3UxV12GcG3psnjf">国区使用土耳其iCloud服务，手把手保姆级上车教程</a></p>
</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-10｜通过Cloudflare Tunnel访问服务、Vercel部署Cusdis和Umami</title>
      <link>https://blog.chensoul.com/posts/2023/03/13/weekly_review_10/</link>
      <pubDate>Mon, 13 Mar 2023 11:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/03/13/weekly_review_10/</guid>
      <description>前言 本篇是对 2023-03-06 到 2023-03-12 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周发现 VPS 上 某些使用 docker 部署的服务（cusdis、</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-00.jpeg" alt="weekly-review-10-00"  />
</p>
<p>本篇是对 <code>2023-03-06</code> 到 <code>2023-03-12</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周发现 VPS 上 <a href="https://blog.chensoul.com/posts/2023/01/25/notes-about-deploy-services-in-vps/">某些使用 docker 部署的服务</a>（cusdis、umami、uptime、n8n、rsshub、memos）国内用户无法访问了，于是就折腾了一下使用 Cloudflare Tunnel 来代理这些服务。配置成功之后，又发现本地如果开启 VPN，Cloudflare Tunnel 代理的域名还是无法访问，于是放弃了使用 Cloudflare Tunnel，改为将这些国内无法访问的服务部署到免费的 VPS 服务器上，比如：Railway、Vercel。</p>
<p>这周工作忙完之后，就开始着手通知系统的重构改造服务，想着 chatgpt 这么火，于是就试试让它来写代码。在不断地修改需求的情况下，chatgpt 写出来的代码稍加调整逐渐可以使用了。</p>
<p>周六从汉口开车去白沙洲湖北财税职业学院，全程 20 公里，回来的时候不小心把路边的面包车擦碰了一下。于是一脸懵的经历了一次保险定损维修。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-07.jpeg" alt="weekly-review-10-07"  />
</p>
<p>周六开始使用 格志 APP 写日志，选择它来记录日志的原因是它支持批量导出 mardkown、pdf、图片等。唯一有个小遗憾的是，这个应用没有图床，导出的 markdown 文件里面图片的链接不是 http 协议。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-08.png" alt="weekly-review-10-08" style="width:67%;" />
<p>周日去新荣龙湖天耀天街售房部看了一下房子。107 平三室两厅两卫，单价 2 万 5 带精装修，公积金贷款 90 万，商业贷款 30 年，每个月房贷 6000。目前来说，买不起这里的房子，但是，作为一个买房目标还是可以的，加油！</p>
<h2 id="开车总结">开车总结</h2>
<p>最近刷视频，总结的一些开车经验如下：</p>
<ul>
<li>
<p>提前预判，前面车子刹车，不管是正前方，还是左右前方，这时候也要刹车</p>
</li>
<li>
<p>前面有大货车，不要从右边超车</p>
</li>
<li>
<p>会车时，看路宽</p>
</li>
<li>
<p>不要连续变道，变道时既要看后视镜，又要看窗边</p>
</li>
<li>
<p>红灯路口右转时，要看地面或者路边是否有禁止右转标识</p>
</li>
</ul>
<h2 id="通过-cloudflare-tunnel-访问服务">通过 Cloudflare Tunnel 访问服务</h2>
<p>以下内容参考 <a href="https://dejavu.moe/posts/cloudflare-tunnel-access-uptime/">初探 Cloudflare 零信任 - 通过 Cloudflare Tunnel 访问服务</a>。</p>
<h3 id="1创建-cloudflare-tunnel">1、创建 Cloudflare Tunnel</h3>
<p>登录 <a href="https://one.dash.cloudflare.com/">Cloudflare Zero Trust</a> 控制台，选择左侧导航栏的 Access 菜单，进入 Tunnels 配置，点击 Create a tunnel 创建一个 Tunnel，输入 Tunnel 隧道名称</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-01.png" alt="weekly-review-10-01"  />
</p>
<p>选择服务器的操作系统和平台架构：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-02.webp" alt="weekly-review-10-02"  />
</p>
<p>可以看到安装命令：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-03.png" alt="weekly-review-10-03"  />
</p>
<p>复制左边命令粘贴到 SSH 会话里安装 Cloudflared（注意保护 Refresh Token 不要泄漏）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install cloudflare/cloudflare/cloudflared <span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo cloudflared service install eyJhIjoiMmUxOTgwYTBlZjQzZjU3YjkyMGVhMjhjZGY5ZDM4ZDEiLCJ0IjoiYzU1ZTU3MmUtMTEyMS00OWJkLTgzMTgtNjc3NDIyYWMwMjU0IiwicyI6Ik1qZGtZakkyTldFdE5XVTRNUzAwTXpWaExXRXlNRFl0T0RobE5EbGpObVZpWmpJMSJ9
</span></span></code></pre></div><h3 id="2删除-cloudflare-dns-的-a-记录解析">2、删除 Cloudflare DNS 的 A 记录解析</h3>
<p>我的域名托管在 Cloudflare 上，所以需要将原来的域名解析记录删除，主要涉及以下两个需要被国内用户访问的域名（其余域名是我个人使用，所以只需要我开启 VPN 访问即可。）：</p>
<ul>
<li>cusdis.chensoul.com</li>
<li>umami.chensoul.com</li>
</ul>
<h3 id="3在--cloudflare-tunnel-添加-hostname">3、在  Cloudflare Tunnel 添加 hostname</h3>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-04.png" alt="weekly-review-10-04"  />
</p>
<p>如果需要对 ssh 服务开启代理，请参考：<a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/use_cases/ssh/">Connect with SSH through Cloudflare Tunnel</a>。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-05.png" alt="weekly-review-10-05"  />
</p>
<p>关键步骤是：</p>
<ul>
<li>
<p>为 ssh 通道创建 Hostname</p>
</li>
<li>
<p>在本地安装 <a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation/"><code>cloudflared</code></a></p>
</li>
<li>
<p>配置 ~/.ssh/config，添加下面配置（注意：我使用 Homebrew 安装的 cloudflared）：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">Host ssh.chensoul.com
</span></span><span class="line"><span class="cl">ProxyCommand /opt/homebrew/bin/cloudflared access ssh --hostname %h
</span></span></code></pre></div></li>
<li>
<p>通过 ssh 访问 ssh.chensoul.com：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh root@ssh.chensoul.com
</span></span></code></pre></div></li>
</ul>
<h3 id="4在-vps-上启用防火墙停止-nginx-服务">4、在 vps 上启用防火墙，停止 nginx 服务</h3>
<p>将 vps 上 nginx 配置的反向代理删除，并可以禁用这些服务暴露的端口。</p>
<h3 id="5测试">5、测试</h3>
<p>经过测试，<del>又发现本地如果开启 VPN，Cloudflare Tunnel 代理的域名还是无法访问</del>，于是放弃了使用 Cloudflare Tunnel，改为将这些国内无法访问的服务部署到免费的 VPS 服务器上，比如：Railway、Vercel。</p>
<h2 id="vercel-部署-cusdisumami">Vercel 部署 Cusdis、umami</h2>
<p>参考 <a href="https://www.pseudoyu.com/zh/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案（Cusdis + Railway）</a> 在 Railway 上部署 cusdis，数据库还是可以使用 vps 上部署的 postgresql，只需要配置一个 jdbc 链接即可：</p>
<ul>
<li>postgresql://cusdis:xxxxxx@postgres.chensoul.com:5432/cusdis</li>
</ul>
<p>部署完之后，发现存在跨域问题，故全部改为使用 Vercel 来部署。</p>
<p>参考 <a href="https://cusdis.com/doc#/self-host/vercel">Cusdis 官方文档</a> 来部署 Cusdis，对于 Cusdis 存在跨域问题，参考 <a href="https://github.com/djyde/cusdis/issues/135">Sometimes form shows on page, sometimes not - CORS issue #135</a>，修改你的 github 的 cusdis 仓库中的 next.config.js 文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">async</span> <span class="nx">headers</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">source</span><span class="o">:</span> <span class="s2">&#34;/:path*&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">headers</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span> <span class="nx">key</span><span class="o">:</span> <span class="s2">&#34;Access-Control-Allow-Origin&#34;</span><span class="p">,</span> <span class="nx">value</span><span class="o">:</span> <span class="s2">&#34;*&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span></code></pre></div><p>参考 <a href="https://umami.is/docs/running-on-vercel">Umami 官方文档</a> 来部署 Umami，umami 的 postgresql jdbc 链接还是使用 vps 上面部署的 postgresql</p>
<ul>
<li>postgresql://umami:xxxxxxpostgres.chensoul.com:5432/umami</li>
</ul>
<h2 id="chatgpt-写代码">Chatgpt 写代码</h2>
<p>在 <a href="https://poe.com/chatgpt">https://poe.com/chatgpt</a> 里面输入下面文字：</p>
<blockquote>
<p>请用 java 实现一个通知系统，给出完整的代码，需求如下：</p>
<p>1、通知事件，指业务平台触发的事件，通知事件有名称，描述，编码。通知事件可以定义多个属性。属性有名称、描述、编码，类型。类型有整形、字符串、日期、时间、浮点数、列表几种。</p>
<p>2、通知规则。通知规则有名称、生效时间（一直生效，或者指定时间段生效），通知事件（从创建好的事件选择一个）、描述。通知规则可以创建多个规则项。每个规则项要选择事件下面的某一个属性，并且可以对该事件属性选择一个操作符（大于、小于、等于、在两个指之间）和设置对应的值。如果是大于、小于、等于，则只用选择一个值。如果是在两个指之间，则需要选择两个值。多个执行条件在规则执行时，是按与执行。规则可以指定多个通知用户（姓名、手机号）。</p>
<p>3、通知策略。一个规则可以定义多个通知策略。通知策略有通知模版、通知渠道。每个通知模版有标题、描述以及模版内容（模板内容支持变量替换）。</p>
<p>4、通知渠道有类型、配置属性，可以发送消息，支持的通知渠道有飞书、邮件。</p>
<p>5、通知规则测试。给定一个事件码和事实数据，系统查询出该事件码关联的多个规则。每个规则通过 easy-rule 4.1.0 框架去执行。每个规则项执行前，需要校验事实数据里的值的类型和事件属性定义的类型是否一致。多个规则项的执行结果求交集。当最后结果为 true 时，将通知策略中的模板内容进行变量替换，然后通过渠道发送消息给这些人。</p>
<p>注意：相同的消息内容，在一分钟内，只通过一个渠道给某一个用户发送一次，不要重复发送。</p>
</blockquote>
<p>chatgpt 回答如下：</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-10-06.png" alt="weekly-review-10-06" style="width:67%;" />
<p><strong>总结：</strong></p>
<p>让 chatgpt 写代码相对来说，还是很方便的，可以提供一些编程示例或者开阔编程思路，但是也有一些缺陷：</p>
<ul>
<li>chatgpt 写的代码不一定准确，或者说没有考虑一些异常情况。需要不断地和 chatgpt 聊天，描述清楚需求，让 chatgpt 来修正代码，这样交互式聊天，相对来说会有点耗时。</li>
<li>提供的 url 链接可能 404。</li>
</ul>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p><a href="https://www.infoq.cn/article/txS9hHTfxasv2uHBATgL">Java 近期新闻：Gradle 8.0、Maven、Payara 平台、Piranha、Spring Framework、MyFaces 和 Piranha</a></p>
</li>
<li>
<p><a href="https://blognas.hwb0307.com/ad">RackNerd VPS 推荐</a></p>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<h4 id="zedhttpszeddev"><a href="https://zed.dev/">Zed</a></h4>
<p>Atom 作者新开发的编辑器 Zed 速度确实非常快，基本的功能也都支持，现在还在内测阶段，暂时不支持安装 extension。</p>
<h4 id="图片转-webphttpsdevelopersgooglecomspeedwebpdocscwebphlzh-cn"><a href="https://developers.google.com/speed/webp/docs/cwebp?hl=zh-cn">图片转 webp</a></h4>
<p>mac 上安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install webp
</span></span></code></pre></div><p>使用示例：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cwebp -q <span class="m">50</span> -lossless picture.png -o picture_lossless.webp
</span></span><span class="line"><span class="cl">cwebp -q <span class="m">70</span> picture_with_alpha.png -o picture_with_alpha.webp
</span></span><span class="line"><span class="cl">cwebp -sns <span class="m">70</span> -f <span class="m">50</span> -size <span class="m">60000</span> picture.png -o picture.webp
</span></span></code></pre></div><h3 id="一些影视">一些影视</h3>
<ul>
<li>
<p><a href="https://movie.douban.com/subject/6538807/">冰海陷落</a>，推荐指数：☆☆☆☆。疯狂的芭堤雅将军杜罗夫（米哈伊尔・戈尔沃伊 Mikhail Gorevoy 饰）预谋发动第三次世界大战，他制造了一场巨大的水域爆炸，致使附近的美军潜艇队遇袭。美国海军派出了海底经验丰富但名声寥寥的乔・格拉斯潜水艇船长（杰拉德・巴特勒 Gerard Butler 饰）率领潜艇队前去调查。</p>
</li>
<li>
<p><a href="https://movie.douban.com/subject/36193784/">黑暗荣耀第二季</a>，推荐指数：☆☆☆☆。</p>
</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-9｜开车总结、博客该写什么、Web3批量空投</title>
      <link>https://blog.chensoul.com/posts/2023/03/07/weekly_review_9/</link>
      <pubDate>Tue, 07 Mar 2023 11:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/03/07/weekly_review_9/</guid>
      <description>前言 本篇是对 2023-02-27 到 2023-03-05 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周的主要工作是版本测试和项目上线，在大家的共同</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-07.png" alt="将军山"  />
</p>
<p>本篇是对 <code>2023-02-27</code> 到 <code>2023-03-05</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周的主要工作是版本测试和项目上线，在大家的共同努力下，最后是成功上线。</p>
<p>由于公司最近在裁员，留下来的都开始卷起来，每天晚上 8 点之后下班，这样平均一天的工作时间才有 11 小时。据说，旁边组的同事平均每天都是 12 个小时工作时间。裁了三位同事之后，我们软件组还有 8 人，算法组有 7 人，产品组有 6 人，终端组有 4 人。距集团公司六月上市还有两个月，裁员估计还会继续，同志们还需努力加班，争取被裁的不是自己。</p>
<p>这周还是没有开车，每天坐地铁上下班，刷刷 rss 看看 b 站视频，了解一些行业最新动态，同时也看看同样在写博客的那些独立开发者每周都在做什么，也学习一些新技术或者新技能。</p>
<p>这周接触了 web3 空投，花了几个小时使用自动加手动的方式刷了 120 多个账号。自动的方式，就是用 nodejs 代码在 bsc 网络批量创建账号并保存为 csv 文件；其次，通过 onekey web 上的批量转账功能，给每个账户转了 0.00125bnb。手动操作的部分就是，一个个的将账号私钥导入狐狸钱包，然后，用 lifeform cartoon 连接钱包账户，mint 成功之后，分享链接，再继续连接狐狸的下一个账号，重复上面操作。</p>
<p>因为太耗时间，所以只刷了 120 个账号。趁工作不忙的时候，用 chatgpt 搜索一下如何将上面的操作全部自动化。</p>
<p>周末两天，继续练车，从汉口到阳逻，再到新洲，最后去新洲的将军山爬山、去道观河看风景。算下来，最近这三个周末六天时间，我一共开了 800 多公里了。目前，暂时没有收到违规通知，但还是存在很多不足的地方。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-08.png" alt="weekly-review-09-08"  />
</p>
<h2 id="开车总结">开车总结</h2>
<p>这周开车，发现存在以下问题：</p>
<ul>
<li>1、停车还是会忘记熄火拔钥匙。</li>
<li>2、红绿灯口，停在大货车后面，并靠得近，前方视线受阻。经过红绿灯时，感觉像是闯了红灯。</li>
<li>3、超车时候，没有加速。</li>
<li>4、在山路行驶，入弯和出弯都会减速。</li>
<li>5、判断车距的经验不足。表现在行驶过程中、侧方停车、倒车入库。</li>
</ul>
<p>针对以上问题，晚上刷了一些视频，做了一些笔记，希望能够帮助自己改正上面这些问题。</p>
<ul>
<li>
<p>1、目光看远。入弯提前收油，脚备刹车。如果弯道过急，就带点刹车，如果车速你可以控制，直接收油过弯；出弯加油，眼睛看出弯口。身体跟随方向盘靠。这样，车速不降，可以控制车速。如果以 80 码速度过弯，且这个车还在车道内，这个车的速度你就控制住了。但凡有点越线，说明车速过快，你就要降低速度。</p>
</li>
<li>
<p>2、靠右行驶。会车时，主动靠右。转弯时，发现对面有来车，鸣笛示意。</p>
</li>
<li>
<p>3、路口远道的原则，跟小车不跟大车。如果跟着大车，留一个车位空间，让大车先走，确认绿灯再走。</p>
</li>
<li>
<p>4、红绿灯路口，提前减速，提醒后面车减速，不要急刹车，防止后面车追尾。特别是在绿灯闪的时候，不要没有减速，突然停车。否则后面车会以为你要加速冲过去，他也加速，这样，他就会追尾你。</p>
</li>
</ul>
<h2 id="博客该写什么">博客该写什么</h2>
<p>看到一篇博客 <a href="https://simonwillison.net/2022/Nov/6/what-to-blog-about/">What to blog about</a>，里面聊到了博客该写什么。一时兴起，想翻译成中文。于是，分别使用了 chrome 沉浸式翻译插件和 chatgpt 来翻译这篇文章，得到结果如下：</p>
<p>1、<strong>使用 <a href="https://chrome.google.com/webstore/detail/immersive-translate/bpoadfkcbjbfhfodiogcnhhhpibjhbnh">chrome 沉浸式翻译插件</a> 翻译这篇文章：</strong></p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-01.png" alt="weekly-review-01"  />
</p>
<p>总结来说，博客可以写两部分内容：</p>
<ul>
<li>今天学到的东西</li>
<li>正在做的项目</li>
</ul>
<p>2、<strong>使用 chatgpt 翻译这篇文章：</strong></p>
<p>请 chatgpt 翻译这篇文章 <a href="https://simonwillison.net/2022/Nov/6/what-to-blog-about/">https://simonwillison.net/2022/Nov/6/what-to-blog-about/</a> 为中文，得到的结果如下：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-02.png" alt="weekly-review-02"  />
</p>
<p>标题：该写什么博客？</p>
<p>随着我写了一篇新的博客文章，我想分享一下我最近学到的关于写博客的一些事情。</p>
<p>一旦你开始写博客，你就必须保持一定的频率和持续的内容更新。这不仅是为了吸引和保持读者，也是为了让自己不断成长和发展。对于我来说，博客是我最有价值的自我表达形式之一，因为它迫使我去思考和组织我的想法，而这些想法可能会被淹没在日常生活的喧嚣中。</p>
<p>但是，选择博客内容可以很困难，特别是当你有多个感兴趣的话题和项目。以下是一些我最近学到的有关选择博客主题的技巧：</p>
<ul>
<li>每周至少写一篇文章</li>
</ul>
<p>尽管这可能听起来像一个艰巨的任务，但保持每周至少写一篇文章的频率可以帮助你保持写作的习惯和进展。这也有助于避免长时间的空白期，这可能会使你失去写作的动力和读者的兴趣。</p>
<ul>
<li>写下你的目标和想法清单</li>
</ul>
<p>在开始写博客之前，先写下你感兴趣的话题和你想写的内容。这可以帮助你保持焦点并避免浪费时间在想要的内容上。</p>
<ul>
<li>关注你的读者</li>
</ul>
<p>虽然你的博客可能是一个人的项目，但是考虑到你的读者的兴趣和需求是至关重要的。试着想一下你的读者会对哪些话题感兴趣，并尝试写出他们会发现有趣或有用的内容。</p>
<ul>
<li>保持开放和灵活</li>
</ul>
<p>不要把自己局限在一个主题或领域中。保持开放和灵活，尝试不同的话题和领域。这不仅可以让你发现新的兴趣和机会，还可以让你在写作方面更有创意和灵感。</p>
<ul>
<li>尝试不同的博客格式</li>
</ul>
<p>不仅可以通过写作来表达自己，还可以通过不同的博客格式来实现这一点。尝试写一篇教程、一篇演示、一篇评论或一篇问题解答文章。这可以让你更好地探索和展示你的技能和知识。</p>
<p>总之，写博客可以是一种令人满意的表达方式，可以帮助你探索和发现新的想法和机会。关键是要保持频率和灵活性，并尝试不同的博客格式。</p>
<h2 id="web3-批量空投">Web3 批量空投</h2>
<p>最近，参与了 <a href="https://cartoon.lifeform.cc/login">Lifeform Cartoon</a> 的空投，这是我第一次参与 web3。下面是记录一下操作步骤：</p>
<ul>
<li>下载狐狸钱包</li>
<li>批量创建账号</li>
<li>批量从一个账号转币到多个账号</li>
<li>批量导入账号到狐狸钱包</li>
<li>访问 Lifeform Cartoon 的邀请链接地址，比如：https://cartoon.lifeform.cc?referral=0x068b021B7d44e4795c6ec07234D66c144644dC37，然后，连接狐狸钱包里的账号，mint 之后，分享链接再使用新的链接重复上面动作</li>
</ul>
<p>上面的步骤，如果是几百个账号手动执行，则需要花费很长时间。作为一个程序员，有没有办法让程序自动实现呢？</p>
<p>在网上查找了一些资料，同时使用 chatgpt（备注：https://poe.com/chatgpt）找到了使用  nodejs 实现的相关代码。</p>
<h3 id="1批量创建账号">1、批量创建账号</h3>
<p>在BSC网络上使用Node.js编程语言批量创建账户并保存为CSV文件的完整代码，不使用csv-writer库</p>
<p><img loading="lazy" src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-03.png" alt="weekly-review-03"  />
</p>
<h3 id="2批量转账">2、批量转账</h3>
<p>在BSC网络上使用Node.js编程语言从一个账号批量转 0.0125bnb 到前面创建的多个账号，输出完整的可以运行的代码</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-05.png" alt="weekly-review-05"  />
</p>
<h3 id="3批量导入账号到-metamask-钱包">3、批量导入账号到 metamask 钱包</h3>
<p>通过编程实现在 BSC 网络 批量导入账号到浏览器的 metamask 钱包</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-04.png" alt="weekly-review-04"  />
</p>
<p>下一步，就是测试上面代码，实现全流程代码托管。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-09-06.png" alt="weekly-review-09-06"  />
</p>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li><a href="https://feeds.feedblitz.com/~/729974291/0/baeldung~Service-Profiles-in-Docker">Service Profiles in Docker | Baeldung</a></li>
<li><a href="https://geekr.dev/posts/chatgpt-ultimate-guide">ChatGPT 终极指南</a></li>
<li><a href="https://reorx.com/makers-daily/004-prompts-and-parameters-transparancy/">谈谈我对 ChatGPT 应用的 prompt 的看法</a></li>
<li><a href="https://anotherdayu.com/2023/4866/">支持 OpenAI ChatGPT API 的优秀软件</a></li>
<li><a href="https://geekr.dev/posts/chatgpt-start">编程新手如何通过ChatGPT一天完成一个MVP产品</a></li>
<li><a href="https://github.com/Zhengqbbb/cz-git">让 OpenAI 生成 git commit message</a></li>
<li><a href="https://insights.thoughtworks.cn/good-code-five-qualities-cupid/">好代码的五个特质 - Thoughtworks洞见</a></li>
<li><a href="https://www.joshwcomeau.com/blog/how-i-built-my-blog/">我如何搭建自己的博客</a>（英文）</li>
<li><a href="https://zedex.cn/8399.html">从Mac开箱开始 设置一个开发环境 - ZedeX</a></li>
<li><a href="https://mp.weixin.qq.com/s/eil_zYS4ISK-4ojezzP-pg">创始人CEO为什么要写作（原创5000字长文尝试说透）</a></li>
<li><a href="https://mp.weixin.qq.com/s/xfphy67PTbtjeggo7LpjSA">从抄书到开源之巅：章亦春的程序人生</a></li>
</ul>
<h3 id="一些工具">一些工具</h3>
<h4 id="1poecomhttpspoecom">1、<a href="https://poe.com/"><strong>poe.com</strong></a></h4>
<p>美国问答网站Quora开发的ChatBot产品，整合不同聊天机器，包括ChatGPT。响应速度非常快，比chat.openai.com的免费账户快非常多。有ios版，手机也能用了。ios版有社区，可以分享聊天记录。</p>
<h4 id="2founderbeatshttpsfounderbeatscom">2、<a href="https://founderbeats.com/"><strong>FounderBeats</strong></a></h4>
<p>Founder Beats是一家面向初创企业和创业者的音乐制作工作室，专门为他们提供高质量的背景音乐和音效。Founder Beats的音乐库包含了各种类型的音乐，如流行、摇滚、电子、嘻哈、民谣等，以及各种音效和配乐，可以满足不同用户的需求。Founder Beats的音乐都是由专业音乐人和制作人制作的，具有高品质和原创性。</p>
<p>除了音乐制作，Founder Beats还提供了其他服务，如音频制作、混音和母带处理等，可以帮助客户制作高质量的音频内容。Founder Beats的团队拥有丰富的音乐制作和音频处理经验，可以为客户提供专业的建议和支持。</p>
<p>Founder Beats的客户包括初创企业、广告代理商、视频制作公司、游戏开发商等，他们可以使用Founder Beats的音乐和音效来增强他们的品牌形象、视频内容、游戏体验等。Founder Beats的定价模式灵活，客户可以根据自己的需求选择适合自己的价格和许可证。</p>
<h4 id="3manticore-searchhttpsgithubcommanticoresoftwaremanticoresearch">3、<a href="https://github.com/manticoresoftware/manticoresearch">Manticore Search</a></h4>
<p>Manticore Search是一款开源的全文搜索引擎，支持高性能的搜索和分析。它是Sphinx Search的后继者，使用了类似的架构和API，并且在功能和性能方面有很多改进。Manticore Search使用C++编写，具有高效的索引和查询引擎，可以处理大量的数据和高并发访问。它支持多种数据源和数据格式，包括MySQL、PostgreSQL、XML、JSON、CSV等。</p>
<p>Manticore Search提供了丰富的查询语言和API，包括SQL、SPHINQL和HTTP API等，可以满足不同用户的需求。它支持全文搜索、模糊搜索、短语搜索、近义词搜索、地理位置搜索等多种搜索方式，并且支持高级过滤、排序、分组、聚合等功能。Manticore Search还具有高可用性和可扩展性，支持主从复制、分片、集群等部署方式，可以满足不同规模和负载的应用场景。</p>
<p>Manticore Search是一款使用广泛的全文搜索引擎，它被广泛应用于电子商务、社交网络、新闻媒体、在线教育等领域，帮助用户快速检索和发现所需信息。Manticore Search在GitHub上开源，拥有活跃的社区和开发者，用户可以通过GitHub社区获得支持和贡献代码。</p>
<h4 id="4unsilencehttpsgithubcomlagmoellertimunsilence">4、<a href="https://github.com/lagmoellertim/unsilence">Unsilence</a></h4>
<p>unsilence是一个基于Python的命令行工具，用于检测和修复音频文件中的静音区域。它可以帮助用户自动检测和删除音频文件中的静音部分，从而提高音频的质量和可听性。unsilence支持多种音频格式，如MP3、WAV、OGG等，可以在不损失音频质量的情况下删除静音。</p>
<p>使用unsilence非常简单，用户只需在命令行中输入unsilence命令和音频文件名，unsilence就会自动检测和修复音频文件中的静音部分。用户也可以通过设置参数来调整unsilence的处理方式，如设置最小静音长度、最小音量阈值等。</p>
<h4 id="5css-bedhttpswwwcssbedcom">5、<a href="https://www.cssbed.com/">CSS Bed</a></h4>
<p>这个网页收集并展示各种无类的极简化 CSS 框架。如果你想选一个简单的 CSS 框架，可以看看它</p>
<h4 id="6lightrunhttpslightruncom">6、<a href="https://lightrun.com/">lightrun</a></h4>
<p>lightrun.com是一款基于云的实时Java和Kotlin应用程序调试和观察工具。它提供了一种无需修改代码即可实时调试Java和Kotlin应用程序的方式，减少了开发人员的调试时间，提高了应用程序的稳定性和可靠性。lightrun.com还提供了实时日志查看和分析，可以帮助开发人员快速定位问题和解决问题，提高了应用程序的可维护性。</p>
<p>lightrun.com可以与常见的Java开发工具集成，如Eclipse、IntelliJ IDEA和VS Code。它还支持多种操作系统和云平台，如Windows、Linux、Docker、AWS和Azure等。开发人员可以使用lightrun.com来调试和监视本地应用程序，也可以在云端快速诊断生产环境中的问题。</p>
<p>lightrun.com采用了安全的云架构，并且使用了端到端加密来保护用户数据的安全性。它还提供了灵活的计费模式，用户可以根据自己的需求选择适合自己的计费方式。</p>
<h4 id="7httpsgithubcomappscr-gpt">7、https://github.com/apps/cr-gpt</h4>
<p>基于 ChatGPT 的 Github Code Review 机器人</p>
<h4 id="8妙记多-mojidoc-httpsmojidoccom">8、<a href="https://mojidoc.com/">妙记多 Mojidoc </a></h4>
<p>新一代生产协同工具</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-8｜内存泄漏、公司裁员、练车</title>
      <link>https://blog.chensoul.com/posts/2023/02/27/weekly_review_8/</link>
      <pubDate>Mon, 27 Feb 2023 08:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/02/27/weekly_review_8/</guid>
      <description>前言 本篇是对 2023-02-20 到 2023-02-26 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这篇周报又是在地铁上完成编写的。回顾这一周的工作</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-20</code> 到 <code>2023-02-26</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这篇周报又是在地铁上完成编写的。回顾这一周的工作，还是项目测试、修复 bug 和准备上线发布。平静的工作节奏因为突如其来的裁员消息而变得内卷起来，大家下班的时间都纷纷往后移到了20 点左右。周末的时候，还是练车，从汉口开车到新洲。刚开始有点不敢，后来还是鼓起勇气，平安的到达。</p>
<h2 id="工作">工作</h2>
<h3 id="内存泄漏">内存泄漏</h3>
<p>这周线上环境，出现了告警，提示 jvm 出现了 full gc。于是赶紧 dump 内存进行分析查找原因。顺便整理了内存相关的知识。</p>
<p><strong>什么是内存泄漏？</strong></p>
<p>这个问题直接问 chatgpt：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-08-01.png" alt="weekly-review-08-01"  />
</p>
<p>内存泄漏（Memory Leak）是指在程序中动态分配的内存由于某些原因程序未能释放或无法释放，导致系统内存的实际可用空间不断减少的现象。内存泄漏的发生会导致程序占用的内存越来越多，最终导致程序崩溃或系统变慢。</p>
<p>在Java中，程序员通常使用new运算符在堆上分配内存，这些内存不再使用时必须释放，否则就会出现内存泄漏。下面是一些常见的Java内存泄漏的情况：</p>
<ol>
<li>对象持有过多的引用</li>
</ol>
<p>当一个对象持有其他对象的引用时，这些对象就不能被垃圾收集器回收，导致内存泄漏。比如，一个静态集合（如Map、List）持有了大量对象的引用，但是这些对象已经不再需要了，却因为集合中仍然持有这些对象的引用，导致这些对象无法被回收，造成内存泄漏。</p>
<ol start="2">
<li>长时间持有对象锁</li>
</ol>
<p>在Java中，如果一个线程获取了一个对象的锁，但是在释放锁之前发生了异常，那么这个锁就不会被释放，从而导致内存泄漏。这种情况特别容易发生在synchronized块中。</p>
<ol start="3">
<li>不正确的缓存使用</li>
</ol>
<p>如果程序员不正确地使用缓存，就会导致内存泄漏。比如，如果使用一个静态Map来缓存对象，但是不从Map中删除对象，那么这些对象就会一直存在于内存中，造成内存泄漏。</p>
<ol start="4">
<li>大量创建临时对象</li>
</ol>
<p>如果程序频繁地创建临时对象，而这些对象又没有被及时清除，就会导致内存泄漏。比如，在循环中创建大量的字符串对象，但是没有及时清除，就会导致内存泄漏。</p>
<p>为了避免内存泄漏，Java程序员可以使用一些技术来优化程序，比如使用缓存池、避免使用不必要的静态变量、使用finalize()方法释放资源等等。</p>
<p><strong>如何排查内存泄漏？</strong></p>
<ul>
<li>
<p>内存分析工具：内存分析工具可以帮助您找到哪些对象占用了大量的内存。一些常用的内存分析工具包括：Eclipse MAT、VisualVM 和 YourKit。这些工具可以帮助您分析内存快照、查找内存泄漏并确定导致内存泄漏的代码位置。</p>
</li>
<li>
<p>堆转储文件：堆转储文件是一个包含了 JVM 堆中所有对象的快照。您可以使用以下命令生成一个堆转储文件：jmap -dump:format=b,file=heap.bin <PID>，其中<PID>是您的 Java 应用程序的进程 ID。然后，您可以使用内存分析工具来分析该文件。</p>
</li>
<li>
<p>代码审查：在编写代码时，您可以使用一些技巧来避免内存泄漏。例如，您应该确保正确地关闭流和数据库连接，避免在循环中创建对象，以及使用软引用或弱引用来存储缓存数据等。通过仔细审查代码并识别可能导致内存泄漏的部分，可以避免这些问题在运行时发生。</p>
</li>
<li>
<p>监视工具：JVM 提供了一些监视工具，例如 jstat 和 jconsole，可以用于监视 JVM 的内存使用情况。通过监视这些指标，您可以识别是否存在内存泄漏的迹象。</p>
</li>
<li>
<p>代码注入：在您的应用程序中，您可以注入一些代码，例如使用 JMX、AOP 等，以便您可以实时监视内存使用情况，并记录任何内存泄漏迹象。</p>
</li>
</ul>
<p>参考文章</p>
<ul>
<li>
<p><a href="https://www.cnblogs.com/rude3knife/p/13570423.html">一次完整的JVM堆外内存泄漏故障排查记录</a></p>
</li>
<li>
<p><a href="https://droidyue.com/blog/2015/11/28/article-java-8-lambdas-a-peek-under-the-hood">深入探索Java 8 Lambda表达式</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/weixin_34722015/article/details/114815917">java lambda表达式内存泄露_浅谈Java内存泄露</a></p>
</li>
</ul>
<h3 id="裁员">裁员</h3>
<p>去年公司就在裁员，陆陆续续裁了几次，每次都是裁两三个，动作都不大，但是很高效。因为部门人数就在五十左右，所以谁没来上班，都能很快察觉。</p>
<p>公司要在六月份上市，上市之前要使财报好看，就要开源节流、降本增效。节约成本的一个方式就是裁员，据说这次裁员动作比以前都大都迅速，今天提出裁员人数，明天就要给出名单，月底就要走人。</p>
<p>现在还只是二月份，离六月还有三个月。谁也不知道，后面还会有什么更大的裁员动作。说不定哪天就空出一个工位，说不定哪天领导就换了人，说不定哪天部门就被拆散了。</p>
<p>互联网公司最大的变化就是变化。之前在阿里工作，公司的价值观里有一条就是拥抱变化。</p>
<p>拥抱变化的最好方式就是积极面对，主动加班，提高工作效率，增加工作产出。</p>
<h2 id="生活">生活</h2>
<h3 id="练车">练车</h3>
<p>这是买车之后的第二周，还是没有开车去上班。一是因为开车不过熟练，胆子小，不敢开得太快；二是公司楼下的停车位还没有办好。</p>
<p>周六本想叫朋友过来给我当陪练，后来因为要回新洲，就算了，还是自己开车，带着老婆回新洲。</p>
<p>老婆科目一考过了，后面因为工作原因就没去练车和考试。她坐副驾驶，一边剥豆子一边提醒我注意交通规则。</p>
<p>在老婆的坐镇之下，顺利的从汉口开车六十公里到达新洲，路上没有违反交通规则。</p>
<p>周六下午去看了一下潘塘花朝节，有点失望，没有想象中的热闹。可能因为这不是正宗的花朝节，正宗的应该是在旧街。</p>
<p>逛了一圈，买了两百菜刀、一个砧板、两颗果树、一盆墨兰花。</p>
<p>周六从新洲开回阳逻，周日又从阳逻开回老家去看父亲。买车后第一次回家，放了鞭炮🧨。</p>
<p>中午包饺子，吃完饭就去菜园收割青菜。农村对于城市里上班族来说，一大好处是，每次回家，都可以装满青菜带回城市。</p>
<p>下午，从老家驱车回阳逻再到汉口。在开车的过程中，发现和总结了一些问题。</p>
<p>之前开车，总是盯着仪表盘，看车速达到了多少。车速一到 70 多就下意识地松油门和踩刹车。现在开始把眼睛注意力放到前方，不去可以在意车速，只是当导航提示我超速的时候，我白降低一点速度。</p>
<p>在红绿灯之前，如果不转弯，不要提前换道或者超车，保持中间道路行驶即可。</p>
<h2 id="好物分享">好物分享</h2>
<p>虽然大部分有意思的内容会分享在 『<a href="https://t.me/chensoul_share">ChenSoul Share</a>』Telegram 频道，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p><a href="https://blog.baoshuo.ren/post/actions-ssl-cert/">使用 GitHub Actions 自动申请与部署 SSL 证书</a></p>
</li>
<li>
<p><a href="https://phind.com/">The AI search engine for developers</a></p>
</li>
<li>
<p><a href="https://magickpen.com/">用 AI 写文章</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/weixin_34722015/article/details/114815917">java lambda表达式内存泄露_浅谈Java内存泄露</a></p>
</li>
<li>
<p><a href="https://kenengba.com/post/3769.html">在家躺着拿工资，是挺过意不去的</a></p>
</li>
<li>
<p><a href="https://blog.mikeoperfect.com/posts/11517/">车辆违章和交通事故处理流程</a></p>
</li>
<li>
<p><a href="https://blog.alswl.com/2020/03/before-code-review/">浅谈 Code Review 之事前准备</a></p>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<h4 id="1raycasthttpswwwraycastcom">1、<a href="https://www.raycast.com/">Raycast</a></h4>
<p>Raycast是一款想要取代 Spotlight 的快捷启动器，通过 Mac 上面的一些组合键来为让你完成在 Mac 上面的快捷启动，提高你日常当中在 Mac 上面的操作效率，如果以 macOS 系统版本风格来比喻的话，Alfred 的 UI 风格应该能匹配几年前的 macOS 吧，而 Raycast 却是能够驾驭 macOS Big Sur 全新的视觉风格。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-08-02.png" alt="weekly-review-08-02"  />
</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-7｜练车、博客优化、注册ChatGPT账号</title>
      <link>https://blog.chensoul.com/posts/2023/02/21/weekly_review_7/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/02/21/weekly_review_7/</guid>
      <description>前言 本篇是对 2023-02-13 到 2023-02-19 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 练车 这周末开始练车，周六是第一次开自己的车，简单</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-13</code> 到 <code>2023-02-19</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<h2 id="练车">练车</h2>
<p>这周末开始练车，周六是第一次开自己的车，简单试驾了一样；周日则开了一百多公里，具体行程是从阳逻到新洲，从新洲单汉口，从汉口到光谷，从光谷回汉口。</p>
<p>这途中走了江北快速公路、二环、二七长江大桥、东湖隧道，从白天开到晚上夜行，经历过堵车，路上看到车祸后的事故现场。</p>
<p>一天下来，总共开车有五个多小时，感觉开车好累。作为新手，开车的过程中要全神贯注，铭记开车最重要的是慢这一原则，速度不敢过快。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-06.webp" alt="weekly-review-06"  />
</p>
<p>回顾这一天的练车过程，发现自己存在以下问题：</p>
<ul>
<li>
<p>对汽车不熟悉，不清楚车内每个按钮有什么作用。</p>
</li>
<li>
<p>不敢开的太快，油门踩到六十公里之后，就下意识地松油门。整个行驶过程中，平均车速大概在二十多公里每小时。</p>
</li>
<li>
<p>对交规不熟悉，第一次用高德地图，不知道什么时候改该变道、什么时候该走中间道路。要变道时候，不够果敢，打了灯光之后，没有快速变道，甚至还降速，等后面车子，而后面车子也在等我。</p>
</li>
<li>
<p>对车距不敏感。行驶过程中，和左右车辆相隔距离多近，没有一个直观的感受。观察后视镜，后面车距多远，有时候也判断不准，导致自己变道犹豫不决，险些擦碰。</p>
</li>
<li>
<p>变道、转弯，有时候忘记打灯。转弯时候，方向盘动得太早，没有等车过斑马线再打方向盘。左转弯时候，没有转大弯，导致车子有一次擦到了左边的石墩子，幸好不是很严重。</p>
</li>
<li>
<p>倒车和侧方停车不够熟练。</p>
</li>
<li>
<p>对上班路线不熟悉，不知道怎么进入公司楼下停车场。</p>
</li>
</ul>
<p>基于以上表现，接下来一周还是坐地铁上班。目前来说还是更喜欢坐地铁上班，可以看视频听音频，可以查看 RSS   订阅文章，可以写周报，可以闭目养神。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-07.png" alt="weekly-review-07"  />
</p>
<p>老婆给我买的实习期贴牌到了，后面司机看到这么可爱的牌子，估计以为是个妹子在开车吧，应该会喇叭下留情了吧😄。</p>
<p>接下来的周末，还要继续练车，和车子培养感情，从内到外熟悉车子，熟悉上班路线和交通规则，提高行驶速度。加油💪🏻！</p>
<h2 id="博客优化">博客优化</h2>
<p>这周重新对博客进行了优化，主要包括以下几个方面：</p>
<h3 id="1优化页面加载速度">1、优化页面加载速度</h3>
<p>每次打开博客首页，感觉页面加载有点慢，故想加快博客打开速度，第一个想到的是减少博客加载资源的次数，也就是去掉一些飞必须的 css 和 javascript 引用；其次，是对 css 进行压缩。</p>
<ul>
<li>去掉对 font-awesome css 的引用。这个对博客来说可有可无，所以直接去掉。</li>
<li>去掉对 jquery、bootstrap js 的引用。同样也不是必须的，自定义的 javascript 直接使用原生的操作就行。</li>
<li>移除未使用的 css。想参考这篇文章 <a href="https://dujun.io/cleancss-remove-unused-css.html">CleanCSS - 移除未使用的 CSS 代码</a>，对 css 进行瘦身，无奈文章中的服务器出现故障，无法访问服务。故，暂时搁浅。</li>
</ul>
<h3 id="2修改网站字体">2、修改网站字体</h3>
<p>参考这篇文章 <a href="https://www.albertaz.com/blog/web-font-best-practice">字体漫谈-网站字体最佳实践</a> 引入 open-sans 字体：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;preload&#34;</span> <span class="na">as</span><span class="o">=</span><span class="s">&#34;font&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;font/woff2&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;/css/font/open-sans.css&#34;</span> <span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span>  <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;/css/font/open-sans.css&#34;</span>  <span class="na">media</span><span class="o">=</span><span class="s">&#34;print&#34;</span> <span class="na">onload</span><span class="o">=</span><span class="s">&#34;this.media=&#39;all&#39;&#34;</span> <span class="p">/&gt;</span>
</span></span></code></pre></div><p>并修改网站 font-family 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="nt">body</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-family</span><span class="p">:</span> <span class="n">Open</span> <span class="n">Sans</span><span class="p">,</span><span class="n">system-ui</span><span class="p">,</span><span class="o">-</span><span class="n">apple-system</span><span class="p">,</span><span class="n">Arial</span><span class="p">,</span><span class="kc">sans-serif</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">word-break</span><span class="p">:</span> <span class="kc">break-word</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="3修改关于页面内容">3、修改关于页面内容</h3>
<p>参考这篇文章 <a href="https://rahuldkjain.github.io/gh-profile-readme-generator/">GitHub Profile README Generator</a>，对 GitHub <a href="https://github.com/chensoul/chensoul">首页</a> 进行改造，并通过 GitHub Action 同步到博客的 <a href="https://blog.chensoul.com/about/">关于</a> 页面。</p>
<h3 id="4dns-解析迁移到-cloudflare">4、dns 解析迁移到 cloudflare</h3>
<p>将 dns 解析从 AWS 迁移到 cloudflare，并开启 CDN 缓存。</p>
<h3 id="5博客测速">5、博客测速</h3>
<p>以上优化完成之后，在 <a href="https://pagespeed.web.dev/">PageSpeed Insights</a> 网站上对博客首页加载速度进行了测速。移动端测试结果为 93 分，如下图：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-01.png" alt="weekly-review-07-01"  />
</p>
<p>影响评分的原因在于：</p>
<ul>
<li>First Contentful Paint (3G)</li>
<li>加载的 <a href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">bootstrap.min.css</a> 文件过大，包括了一些未使用的 CSS</li>
</ul>
<p>桌面端测试结果评分为 99 分：</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/weekly-review-07-02.png" alt="weekly-review-07-02"  />
</p>
<p>另外，试了一下使用 chatgpt 来给出网站优化建议，回答如下：</p>
<h2 id="n8n-调整">n8n 调整</h2>
<p>新增了 3 个 workflow：</p>
<ul>
<li>
<p>定时获取 <a href="https://www.bitstamp.net/api/v2/ticker/btcusd">BTC 价格</a>，并发送到 <a href="https://t.me/chensoul_share">我的电报群组</a></p>
</li>
<li>
<p>定时获取 spotify 喜欢列表，并发送到电报和 memos</p>
</li>
<li>
<p>每天早上 7 点，发送天气预报给微信</p>
</li>
</ul>
<p>修改了以下 workflow：</p>
<ul>
<li>将豆瓣最近动态同步到电报群组以及 <a href="https://memos.chensoul.com/">memos</a></li>
<li>将 GitHub 最近动态同步到电报群组以及  <a href="https://memos.chensoul.com/">memos</a></li>
<li>将 <a href="https://blog.chensoul.com/index.xml">博客 RSS</a> 同步到电报群组以及  <a href="https://memos.chensoul.com/">memos</a></li>
</ul>
<p>此外，在苹果手机上添加了两个捷径：</p>
<ul>
<li><a href="https://sharecuts.cn/shortcut/12640">捷径一</a>：调用 memos API 创建 memos</li>
<li><a href="https://www.icloud.com/shortcuts/d990253f43e148469af5e85c296961cf">捷径二</a>：对网站通过 RSSBud 获取 RSS 订阅地址并发送到电报的 flowerrss 机器人进行订阅</li>
</ul>
<h2 id="chatgpt-注册账号">ChatGPT 注册账号</h2>
<p>参考 <a href="https://sms-activate.org/cn/info/ChatGPT">注册ChatGPT详细指南</a> 注册账号，我在 sms-activate 网站是购买的巴西的手机号来接验证码。</p>
<p>解决地区受限问题：在浏览器地址栏里输入 <code>javascript:</code>，然后粘贴下面代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">i</span><span class="p">=&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;@@auth0spajs&#39;</span><span class="p">)))</span>
</span></span></code></pre></div><blockquote>
<p>如果还是无效，则清理浏览器 cookie 和 session，再刷新页面。</p>
</blockquote>
<p>账号创建成功之后，创建了几个 chat：</p>
<ul>
<li>『文案小助手』：在今后的会话里，你都将扮演我的文案纠错润色助理，并综合给出优化后的版本。</li>
<li>『专业后端开发老师』：在今后的对话里，你是一个专业的后端语言开发者老师，会回答我所有关于后端开发相关的问题，尤其是 Java、Pyhon、Go 语言，同时也包括 Shell 脚本、Makefile、Docker、K8S 等运维部署相关的疑问，每次都会给出代码示例，不需要我再额外提醒。</li>
<li>『专业前端开发老师』：在今后的对话里，你是一个专业的前端开发者老师，会回答我所有关于前端语言开发相关的问题，尤其是 TypeScript、React、Vuejs、CSS、Html 和 Nextjs，每次都会给出代码示例，不需要我再额外提醒。</li>
<li>『个人搜索引擎』：在今后的会话里，请你扮演我的专业搜索引擎，为我搜索查阅相关问题的答案和信息，每个问题尽量给出链接和出处，不需要我额外再说明。</li>
</ul>
<p>点击 <a href="https://platform.openai.com/account/api-keys">链接</a>，可以创建应用。给飞书用户准备的 ChatGPT 机器人，参看 <a href="https://github.com/bestony/ChatGPT-Feishu">ChatGPT-Feishu</a>。</p>
<h1 id="-好物分享">💻 好物分享</h1>
<h3 id="一些文章">一些文章</h3>
<ul>
<li>
<p>技术类：</p>
<ul>
<li>
<p><a href="https://writings.stephenwolfram.com/2019/02/seeking-the-productive-life-some-details-of-my-personal-infrastructure/">我的个人 IT 基础设施（英文）</a></p>
</li>
<li>
<p><a href="https://arun.is/blog/desk-setup/">打造我的家庭办公环境（英文）</a></p>
</li>
<li>
<p><a href="https://www.ruanyifeng.com/blog/2022/01/weekly-issue-191.html">科技爱好者周刊（第 191 期）：一个程序员的财务独立之路</a></p>
</li>
<li>
<p><a href="https://www.zlovezl.cn/articles/programming-is-still-hard-after-14-years/">入行 14 年，我还是觉得编程很难</a></p>
</li>
<li>
<p><a href="https://www.piglei.com/articles/how-to-design-config-file-for-software/">设计服务端软件配置的 4 条建议</a></p>
</li>
</ul>
</li>
<li>
<p>非技术类：</p>
<ul>
<li>
<p><a href="https://tingtalk.me/health/">除了健康，都是小事</a></p>
</li>
<li>
<p><a href="https://tingtalk.me/driving-test/">驾考指南</a></p>
</li>
</ul>
</li>
</ul>
<h3 id="一些工具">一些工具</h3>
<h4 id="1亲戚关系计算器httpspasser-bycomrelationshipvue">1、<a href="https://passer-by.com/relationship/vue/#/">亲戚关系计算器</a></h4>
<h4 id="2imageoptimhttpsimageoptimcommac">2、<a href="https://imageoptim.com/mac">ImageOptim</a></h4>
<p>开源图片压缩软件：一款 Mac 小工具，可以方便的进行图片压缩，支持多格式、批量处理。值得注意的是，它压缩之后的图片会覆盖之前的图片。使用了这个工具之后，我就把  TinyPNG4Mac 卸载了。</p>
<h4 id="3沉浸式双语网页翻译扩展--immersive-translatehttpsimmersive-translateowenyoungcom">3、<a href="https://immersive-translate.owenyoung.com/">沉浸式双语网页翻译扩展 – immersive-translate</a></h4>
<p>强烈推荐这个网页翻译插件，和其他插件翻译整个页面相比，这个插件的优势是可以同时显示双语，中英文对照非常棒，是一个 <a href="https://github.com/immersive-translate/immersive-translate">开源</a> 的项目，完全免费使用。也支持 PDF，配合任何 <a href="https://epub-reader.online/">epub 在线阅读网站</a>对照翻译阅读书也非常方便。也支持了Deepl，腾讯翻译等等的翻译服务。开发者 <a href="https://twitter.com/OwenYoungZh">@OwenYoungZh</a></p>
<h4 id="4input-source-prohttpsinputsourceprozh-cn">4、<a href="https://inputsource.pro/zh-CN">Input Source Pro</a></h4>
<p>Input Source Pro 可以根据应用或是网站自动切换输入法，并且在切换窗口的时候还会贴心的提示当前的输入法是什么，比如设置 VSCode、iTerm、Xcode 默认为英文输入法，而笔记软件和企业微信默认为中文输入法，切换软件时再也不需要按 shift 键了！</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-6｜买车和选号、粉色理论</title>
      <link>https://blog.chensoul.com/posts/2023/02/13/weekly_review_6/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/02/13/weekly_review_6/</guid>
      <description>前言 本篇是对 2023-02-06 到 2023-02-12 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这篇周报又是在坐地铁的时候完成编写的，一边坐地铁</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-06</code> 到 <code>2023-02-12</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这篇周报又是在坐地铁的时候完成编写的，一边坐地铁，一边回顾上一周发生的事情，一边复盘和总结。坐地铁大概有一个半小时，从家到公司的一段通勤路程。现在还没有买车，所以都是坐地铁上下班。</p>
<p>说到车，周六去二手市场买了一辆 17 年出产的上汽宝来，今天周一去过了户并且选了一个幸运的车牌号，尾号是 8688，寓意着要发发发！</p>
<p>上个月报名的内观训练营，这周也结业了，训练营运营人员还给我发了一个结业证书。</p>
<p>这是写周报的第六周，观察了一下博客访问量，从开始统计起到这周不到一个月的时间，访问量突破了 1000。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/blog-pv-1000.png" alt="blog-pv-1000"  />
</p>
<h2 id="工作">工作</h2>
<p>这周的工作主要内容是在项目里实现用户可以切换租户和租户数据拆分。</p>
<p>第一个功能的需求是一个账号（有姓名、手机号、密码等属性）可以访问多个租户，在每个租户里有自己的数据权限和角色。第二个功能，主要是使用 SQL 进行数据加工。</p>
<p>总体上来说，这周工作处于充实忙碌的情况。而且，上下班的通勤时间，也在 B 站上看视频。这周主要看的是小马哥的 Java 训练营的公开视频。小马哥的 B 站视频，是我最近刷的比较多的一个视频，另外一个是 coder1v5 的视频，他们分享的视频都是关于 Java 的，里面有非常多的干货，而且还提供了源代码。如果你也是一名 Java 开发工程师，推荐你也关注他们。</p>
<h2 id="生活">生活</h2>
<h3 id="买车和选号">买车和选号</h3>
<p>去年 11 月 16 日，拿到了驾照，直到现在才买了一辆车。过年前，因为疫情加上工作忙，一直没有抽出时间去了解车子行情。可能是对于车子的需求感没有那么强的原因，才导致考驾照、买车不积极。结婚之前，住在公司旁边，走路五分钟上下班，根本就用不上车。结婚之后，从光谷搬到汉口，每天上下班在路上通勤时间都有三个小时了。每天早上七点就要起来做饭（带饭到公司，中午微波炉热着吃，每天可以省下一餐伙食费），然后去赶地铁。疫情放开之前，地铁上人不多，每次都有位置坐。疫情放开之后，地铁里都是人，不是每次都有位置坐，经常要站着。站着的时候，有时候就内观冥想，想想最近有没有做得不对的地方，想想工作下一步该怎么计划；有时候就看 B 站关于 Java 的视频。也算是充分利用了这段通勤时间。</p>
<p>为了上下班通勤更方便，才计划买车的，也不知道开车能够缩短多少通勤时间，也希望这节约下来的时间，可以用在读书和健身上。另外一方面，买车了之后，回家看望父母会更方便。这就是买车的原因。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/my-first-car.jpeg" style="width:60%"/>
<p>考虑到刚拿驾照、以后还要买房，这次就只买了一个二手车。原计划只买个三万左右的车，最后还是超出了预算。</p>
<p>去二手市场买车的时候，是在周六，周末过不了户，所以这周一又过来办理过户和选车牌号。过户的过程还是很快的，全部交给二手市场的人代办。至于，选车牌号，之前了解了一下，车牌号尽量选尾号都是数字的，这样好记；不要带数字 4，不吉利；选号有时间限制，超过了时间未选，会默认选第一个。点击 “选号开始” 按钮之前，心里还有点紧张。当看到第一屏的号码时候，很快地扫描了一遍，发现了一个尾号为 8688 的号码。于是，就跟一同过来买车的姐夫说，这个号码怎么样。姐夫激动地说这个号码好，就选这个。真的没有想到今天运气这么好，选到了这么好的一个号码。激动得想跟朋友圈里的好友分享。之前买车的时候，付完预付款，就有分享买车的喜悦的冲动。这时候，老婆在旁边跟我说，要低调，不要和身边的亲戚说。所以，就一直没有告诉亲人和身边的朋友。没想到，这次选了一个幸运的车牌号，还是没忍住发了一个部分好友不可见的朋友圈。</p>
<p>这说明自己定力还是不够，分享欲太强，不够谦虚和低调。满招损，谦受益。只是买了一个车和选到一个幸运的车牌号而已，不能高兴太早，后面还要花时间练车上路、开车还要慢和稳，不能出交通事故，铭记 “新手上路，多多指教”。</p>
<p>学英语，最重要的是练习。开车，最重要的是慢。</p>
<h2 id="学习">学习</h2>
<h3 id="内观冥想">内观冥想</h3>
<p>一月份报名内观冥想训练营的初衷是想学习内观冥想的方法，后来因为每天早上要赶地铁以及觉得课程内容和自己期望的有些差距，就没有坚持听课和打卡。</p>
<p>虽然，没有听完所有课程，但是从开始几节课程，初步体会和感受了一下什么是内观冥想，也认识了一些内观冥想的朋友。也没有想到，最后还收到了一个结业证书。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/vipassana-study-certificate.jpeg" style="width:60%"/>
<h3 id="python">Python</h3>
<p>最近有个机器学习的项目，用到了 Python，所以需要学习 Python 并掌握相关的业务知识。这一个机会，同时也是一个挑战。</p>
<h2 id="娱乐">娱乐</h2>
<p>-《粉色理论》。这部泰国双女主的同性电视剧，豆瓣上评分 9.2，在这周完结了。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/fenhonglilun.jpeg" alt="fenhonglilun"  />
</p>
<h2 id="分享">分享</h2>
<ul>
<li>
<p><a href="https://pdai.tech/md/spring/springboot/springboot-x-task-hashwheeltimer-timer.html">HashedWheelTimer</a>：是来自于 Netty 的工具类，在 netty-common 包中。它用于实现延时任务。</p>
</li>
<li>
<p><a href="https://github.com/killbill/killbill-commons">Killbill common queue</a>：一个基于DB实现的分布式的队列，它上层还包装了EventBus事件总线机制。</p>
</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-5｜项目事故、牙疼、Damus</title>
      <link>https://blog.chensoul.com/posts/2023/02/07/weekly_review_5/</link>
      <pubDate>Tue, 07 Feb 2023 00:00:00 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/02/07/weekly_review_5/</guid>
      <description>前言 本篇是对 2023-01-30 到 2023-02-05 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这周是过年后的第一个工作周，被国家安排了连上七天</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-30</code> 到 <code>2023-02-05</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这周是过年后的第一个工作周，被国家安排了连上七天班，算是体会了一次 “过年七天乐，上班七天累” 的过山车。七天的工作主要是测试并发布项目，每天忙的焦头乱额，生怕项目出了问题。有句话说，怕什么来什么。没想到周六还是报出了一个故障，还在睡觉中的我被一个电话吵醒，接着忙着找问题和解决方法，一天的时间就都花在这上面。万幸的是事故影响不大，发布了一个小版本进行修复。事故原因，还是值得警惕。</p>
<h2 id="工作总结">工作总结</h2>
<h3 id="项目事故">项目事故</h3>
<p>这周主要是自定义拦截器和 ErrorCoder 来记录 feign 请求的调用次数，包括调用成功的和失败的。另外，如果调用失败，设置了重试两次。这里重试的前提是 http 请求出现 4xx 或者 5xx 状态码错误，如果是状态码为 200 但返回了自定义业务异常，是不会触发重试机制的。这一点没有注意到，而发布前，我想当然的把一个接口的手动重试代码删掉了，导致调用该接口出现业务异常之后没有进行重试，影响了业务方的使用。</p>
<p>出现该问题的原因，一是没想出重试的前提条件，没有写代码注释；二是没有写单元测试；三是没有交叉代码审核。此外，还有一点，越是项目发布关键时期，越要注意休息，保持大脑足够清晰和敏捷。</p>
<h3 id="aop-日志记录">AOP 日志记录</h3>
<p>参考 【<a href="https://b23.tv/2HCODuM">每天进步一点点（二）-哔哩哔哩</a>】 在项目里添加代码对 controller 方法请求参数、返回结果、执行时间的记录。视频中讲的很清楚，这里就不贴代码了。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/spring-aop-customizable-trace-interceptor.png" alt="spring-aop-customizable-trace-interceptor"  />
</p>
<ul>
<li>
<p>该方法，可以对 controller 的所有方法（不管是 get 还是 post 或其他方法），都记录日志。如果想排除 get 方法（一个项目里查询比修改请求大很多），需要添加代码进行过滤。</p>
</li>
<li>
<p>另外，打印请求参数时，实际是记录的请求参数的 toString 方法，如果请求参数里有些对象没有定义toString 方法，则记录的是对象的引用地址。再者，如果对象里有些敏感字段不想输出到日志里，则需要重写toString 方法。一个可选的方法是，改为打印请求参数的 json 序列化值，这样做又会带来序列化开销。</p>
</li>
<li>
<p>如果 controller 层代码被代理了多次，则请求参数和返回结果会打印多次。</p>
</li>
</ul>
<h2 id="生活">生活</h2>
<h3 id="牙疼">牙疼</h3>
<p>一个月黑风高的晚上，加班回来的程序员偷偷喝了三杯牛奶，结果第二天牙齿开始疼了，特别是吃到冷热酸甜的东西，都会短暂的巨疼。去牙科诊所看了，医生说要做根管治疗，费用 800，可以报销 420，做完以后，牙套价格另算，有一千到几千的价格不等。刚不久还刷到视频说，有两个省要规范治疗牙齿费用。</p>
<p>忍着疼痛上了一周班，结果不仅牙痛，吃饭没胃口，还影响了上班，真是得不偿失。</p>
<p>周六晚上，在牙齿疼痛的地方，插了一点老爸给我的药水。睡觉时，先是畏冷，再就是牙疼的地方发炎，肚子发烧，烧到了不知道多少度，反正我是没有拿温度计去测量。烧的我大脑都是糊的，一晚上没睡好，中途还醒了几次。好在第二天，就好了一些，吃东西也没那么疼了。看来，专家顺发烧是体内细菌在和病毒做斗争，应该是对的啰。</p>
<p>经历了这一晚上，感觉像是体验了一次阳的过程。之前新冠阳了，我是轻症状，没有发烧。这次牙疼发烧，算是把之前新冠没有吃过的苦找补回来，人生也算是多了一种体验。</p>
<h3 id="娱乐">娱乐</h3>
<p>-《狂飙》。最近很火，也刚好完结了。我没有去看，没有时间去追，就看了前面几集。</p>
<p>-《粉红理论》。老婆在追的一部泰剧，她是在微博看些别人剪辑的几分钟的片段。叫我也去微博看看，我说我不用微博，我翻墙去找网站观看。老婆眼睛一亮，说那不是可以看到无删减版本，那个兴奋劲哟！很快，我找到了<a href="https://www.dandanzan.com/dianshiju/112399.html">网站</a>，发现已经上线了 11 集，而且每集都有 60 多分钟长（老婆看的都是阉割版～😯）。</p>
<h2 id="学习">学习</h2>
<p>最近 Damus 很火，我也去注册了一个账号，为此还重新下载了狐狸🦊钱包。随即，干脆也注册了 Mastodon 账号和 Crossbell 账号。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/damus-profile.png" alt="damus-profile"  />
</p>
<ul>
<li>
<p>我的 Damus 账号 npub1dav96pmjv58n60eqz7ctmhvsd7t2yljvzevf6uckmchz6zamx2wq0k7dm5</p>
</li>
<li>
<p>我的 Mastodon 账号 @chensoul@mas.to</p>
</li>
<li>
<p>我的 crossbell 账号 chensoul@crossbell</p>
</li>
</ul>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/xsync-profile.png" alt="xsync-profile"  />
</p>
<h2 id="好物分享">好物分享</h2>
<ul>
<li><strong><a href="https://ssnhd.com/2022/01/01/mac-inputdel/">Mac 删除原生英文 ABC</a></strong></li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-4｜过年、向上管理、工作周总结</title>
      <link>https://blog.chensoul.com/posts/2023/01/30/weekly_review_4/</link>
      <pubDate>Mon, 30 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/30/weekly_review_4/</guid>
      <description>前言 本篇是对 2023-01-23 到 2023-01-29 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 过年 这周处于过年吃喝拜年模式，除了腊月二十九和正</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-23</code> 到 <code>2023-01-29</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<h2 id="过年">过年</h2>
<p>这周处于过年吃喝拜年模式，除了腊月二十九和正月初一，其他时间都是和老婆在路上。因为是结婚第一个新年，需要带着老婆去各个亲戚家拜年。因为是第一次在新房过年，就把老爸从农村接过来一起过年。因为年前没有来得及买车，去哪里都不方便，都要需要滴滴打车。为此，打车花了不少钱，当然，给红包也给了不少钱。趁初一不用拜年的缝隙时间，带老婆和老爸去看了两场电影《无名》和《交换人生》。老爸很少去看电影院看电影，听到要去看电影，像个小孩似的，饭还吃完，就跑去电梯门口等电梯。这两场电影，看的我瞌睡来了，倒是初二晚上看《满江红》睡意全无。</p>
<p>总结下来，这个年过的不轻松，身体忙碌，心里幸福🥰。</p>
<h2 id="向上管理">向上管理</h2>
<p>年前，部门领导找我谈 2022 年绩效结果时候，提到我可以 “向上管理” 他。最近从 <a href="https://www.duyidong.com/">杜屹东</a> 的博客 <a href="https://www.duyidong.com/2020/01/01/2019-learn-from-alibaba/">这一年我在阿里学到的</a> 也看到了他在阿里工作一年后悟到对向上管理的理解。</p>
<ul>
<li>及时和老板表达想法</li>
<li>让老板知道你在忙什么</li>
<li>主动帮老板做一些脏活累活</li>
</ul>
<p>前两条是老板知道你的想法，后面一条是帮老板解决问题。此外，还可以帮老板规避风险。</p>
<h2 id="本周工作">本周工作</h2>
<p>这是年后的第一周，主要是处理年前没有完成的项目迭代。</p>
<h3 id="feign-集成-micometer">Feign 集成 Micometer</h3>
<p>OpenFeign 官方提供了 feign-micrometer 来支持 feign 集成 micrometer。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">GitHub</span> <span class="n">github</span> <span class="o">=</span> <span class="n">Feign</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">addCapability</span><span class="o">(</span><span class="k">new</span> <span class="n">MicrometerCapability</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">target</span><span class="o">(</span><span class="n">GitHub</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="s">&#34;https://api.github.com&#34;</span><span class="o">);</span>
</span></span></code></pre></div><p>其本质是对 feign 拦截器、client、encoder、decoder 进行封装，测试过程中在没有获取到指标。故，改为使用z自定义拦截器和 ErrorCoder 来记录请求次数和失败次数。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Bean</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">GitHub</span> <span class="nf">gihhub</span><span class="o">(</span><span class="n">MetricsInterceptor</span> <span class="n">metricsInterceptor</span><span class="o">){</span>
</span></span><span class="line"><span class="cl">  <span class="n">GitHub</span> <span class="n">github</span> <span class="o">=</span> <span class="n">Feign</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">requestInterceptor</span><span class="o">(</span><span class="n">metricsInterceptor</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">errorDecoder</span><span class="o">(</span><span class="k">new</span> <span class="n">MetricsErrorDecoder</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">target</span><span class="o">(</span><span class="n">GitHub</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="s">&#34;https://api.github.com&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>MetricsInterceptor 代码如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MetricsInterceptor</span> <span class="kd">implements</span> <span class="n">RequestInterceptor</span><span class="o">,</span> <span class="n">MeterBinder</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">static</span> <span class="n">MeterRegistry</span> <span class="n">meterRegistry</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">FEIGN_REQUEST</span> <span class="o">=</span> <span class="s">&#34;feign.requests&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">FEIGN_REQUEST_ERROR</span> <span class="o">=</span> <span class="s">&#34;feign.requests.error&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="nf">MetricsInterceptor</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">apply</span><span class="o">(</span><span class="n">RequestTemplate</span> <span class="n">template</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Micrometers</span><span class="o">.</span><span class="na">async</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">String</span> <span class="n">methodKey</span> <span class="o">=</span> <span class="n">template</span><span class="o">.</span><span class="na">methodMetadata</span><span class="o">().</span><span class="na">configKey</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">Counter</span> <span class="n">counter</span> <span class="o">=</span> <span class="n">Counter</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">&#34;feign.requests&#34;</span><span class="o">).</span><span class="na">tags</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&#34;method&#34;</span><span class="o">,</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">substringBefore</span><span class="o">(</span><span class="n">methodKey</span><span class="o">,</span> <span class="s">&#34;(&#34;</span><span class="o">)}).</span><span class="na">register</span><span class="o">(</span><span class="n">meterRegistry</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">counter</span><span class="o">.</span><span class="na">increment</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">        <span class="o">});</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">bindTo</span><span class="o">(</span><span class="n">MeterRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">meterRegistry</span> <span class="o">=</span> <span class="n">registry</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>MetricsErrorDecoder 代码如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MetricsErrorDecoder</span> <span class="kd">implements</span> <span class="n">ErrorDecoder</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">MetricsErrorDecoder</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">static</span> <span class="n">MeterRegistry</span> <span class="n">registry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleMeterRegistry</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="nf">MetricsErrorDecoder</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">metrics</span><span class="o">(</span><span class="n">String</span> <span class="n">methodKey</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Micrometers</span><span class="o">.</span><span class="na">async</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">Metrics</span><span class="o">.</span><span class="na">counter</span><span class="o">(</span><span class="s">&#34;feign.requests.error&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&#34;method&#34;</span><span class="o">,</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">substringBefore</span><span class="o">(</span><span class="n">methodKey</span><span class="o">,</span> <span class="s">&#34;(&#34;</span><span class="o">)}).</span><span class="na">increment</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">        <span class="o">});</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">Exception</span> <span class="nf">decode</span><span class="o">(</span><span class="n">String</span> <span class="n">methodKey</span><span class="o">,</span> <span class="n">Response</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="o">.</span><span class="na">metrics</span><span class="o">(</span><span class="n">methodKey</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">FeignException</span> <span class="n">exception</span> <span class="o">=</span> <span class="n">FeignException</span><span class="o">.</span><span class="na">errorStatus</span><span class="o">(</span><span class="n">methodKey</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">exception</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">static</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Counter</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">&#34;feign.requests.error&#34;</span><span class="o">).</span><span class="na">register</span><span class="o">(</span><span class="n">registry</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="sentry-集成飞书通知">Sentry 集成飞书通知</h3>
<p>参考 <a href="https://www.ytjia.xyz/blog/2022/05/20/sentry-webhook.html">通过Webhook实现Sentry错误自动化飞书机器人报警</a> 这篇文章，使用 fastapi 部署一个 http 服务将 sentry 的回调转发到飞书群的机器人。由于，fastapi 需要在服务器上安装 python3，为了不污染我的 vps，我创建一个 docker 镜像 <a href="https://github.com/chensoul/dockerfiles/tree/master/sentry-feishu-hook">sentry-feishu-hook</a>，修改了 python 脚本中的编译错误，并在 vps 上通过 docker 启动该服务。</p>
<p>先编译镜像，再运行：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker build -t sentry-feishu-hook .
</span></span><span class="line"><span class="cl">docker run -d --name sentry-feishu-hook -p 3080:3080 sentry-feishu-hook
</span></span></code></pre></div><p>接下来在 sentry 项目的 WebHooks 里添加 http://ip:3080/hook</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/sentry-feishu-webhooks-test.png" alt="sentry-feishu-webhooks-test"  />
</p>
<p>点击 Test Plugin，飞书群组可以收到消息：</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/sentry-feishu-webhooks-test-message.png" alt="sentry-feishu-webhooks-test-message" style="width: 60%"/>
<h2 id="好物分享">好物分享</h2>
<ul>
<li><a href="https://www.warp.dev/">https://www.warp.dev/</a>：一个 Rust 编写，使用 GPU 渲染的终端应用。目标是提升开发者的效率。</li>
<li><a href="https://strrl.dev/post/before-2022/restful-api-mock-%E5%B7%A5%E5%85%B7-jsonplaceholder/">Restful API Mock 工具：JSONPlaceholder</a></li>
<li><a href="https://netnewswire.com/">NetNewsWire</a>。Inoreader 最近总是抽风，就改为使用 NetNewsWire 了。使用起来，还是比较顺滑，遗憾的是没有安卓 App。</li>
<li><a href="https://cubox.pro/">Cubox</a>。最近看到这个收藏工具，下载了使用起来。</li>
</ul>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/cubox-screen.png" alt="cubox-screen" style="width: 60%"/>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-3｜博客定制、VPS部署服务</title>
      <link>https://blog.chensoul.com/posts/2023/01/25/weekly_review_3/</link>
      <pubDate>Wed, 25 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/25/weekly_review_3/</guid>
      <description>前言 本篇是对 2023-01-16 到 2023-01-22 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这是过年前的最后一周，上了三天班，请了两天假回去</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-16</code> 到 <code>2023-01-22</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这是过年前的最后一周，上了三天班，请了两天假回去准备年货、去亲戚家吃年饭。趁放假之前，继续对博客做了一些定制，也在我的 VPS 上通过 Docker 部署了一些服务。</p>
<h2 id="定制博客">定制博客</h2>
<p>基于 <a href="https://www.pseudoyu.com/">pseudoyu</a> 的博客和主题定制博客，发现并修复了bug，还做了一些改进，并在他的 github 提交 <a href="https://github.com/pseudoyu/pseudoyu/issues/2">issue</a> 和 merge request。</p>
<img src="https://chensoul.oss-cn-hangzhou.aliyuncs.com/images/github-issue-build-aboutme-py.png" alt="github-issue-build-aboutme-py" style="width: 80%"/>
<p>接着在他博客主页留言，几个来回下来，收获不少。一是解决了我提出的问题，二是给我分享了一个搬瓦工的 the plan 优惠码。这时候去看了下我原来的 vps 刚好还有一天要到期，就立即花了92 美元（原价是 99 美元）购买了一台 2G 内存托管在香港的服务器。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/vps-main-controlls.png" alt="vps-main-controlls"  />
</p>
<p>缘分就是这么奇妙，如果我不主动和这个博主联系，就不会知道搬瓦工还有这个优惠，就不会帮助我解决了博客定制过程中遇到的疑惑。</p>
<blockquote>
<p>当你想要什的时候，先给出去，你就会收获更。有舍才有得。</p>
</blockquote>
<h2 id="博客个人介绍">博客个人介绍</h2>
<p>我的博客源文件托管在 <a href="https://github.com/chensoul/chensoul.github.io">gihub</a>，在这个仓库可以看到我的一些个人介绍，当然，我的博客也有个人介绍（在<a href="https://blog.chensoul.com/about/">关于</a>页面），如果你仔细观察，可以发现他们基本上是一样的，这个是怎么实现的呢？</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/chensoul-github-io-readme.png" alt="chensoul-github-io-readme" style="width: 80%"/>
<p>首先，github 里面可以创建一个以 github 账号为名称的仓库，然后编辑好 README.md 文件，README.md 文件内容就会渲染成 html 显示到个人 github 主页。例如，我的 github 主页是 <a href="https://github.com/chensoul">https://github.com/chensoul</a>，我的个人仓库地址为 <a href="https://github.com/chensoul/chensoul">https://github.com/chensoul/chensoul</a>，这个仓库是通过 github actions 来构建 README.md，构建文件查看仓库的 workflows 文件，主要有两个文件：</p>
<ul>
<li>build.yml：周期性的调用 <a href="https://github.com/chensoul/chensoul/blob/main/build_readme.py">build_readme.py</a> 来生成 README.md 文件（包括：获取最近 5 篇博客文章、或者 豆瓣上最近 5 个电影书籍动态、获取 github 上发布的项目、显示 wakatime 报表）</li>
<li>waketime.yml：生成 wakatime-charts</li>
</ul>
<p>当 README.md 生成之后，只需要将该文件内容同步到博客的 about.md 文件即可。怎么实现呢？参考博客源文件里的 <a href="https://github.com/chensoul/chensoul.github.io/blob/main/build_about.py">build_about.py</a>。这样就可以实现一个自我介绍同步到多个平台（除了博客，还可以通过 api 接口同步到语雀等其他平台）。</p>
<h2 id="vps-上服务部署">vps 上服务部署</h2>
<p>购买了新的 VPS 之后，就将原来的 VPS 导出镜像，然后导入到新的 VPS，最后再安装了以下服务：</p>
<ul>
<li><a href="https://github.com/indes/flowerss-bot">flowerss-bot</a>：一个支持应用内阅读的 Telegram RSS Bot。</li>
<li><a href="https://n8n.io/">n8n</a>：一款开源的自动工作流服务，类似 IFTTT、Zapier，可以互联互通包括 GitHub、Dropbox、Google、NextCLoud、RSS、Slack、Telegram 在内的几十款在线服务。</li>
<li>memos：一个开源且免费的自托管知识库</li>
<li>cusdis：一个界面清爽、注重隐私的轻量级 (~5kb gzip) 评论系统，可以很方便地与 React、Vue 或其他博客系统结合，并且还提供了一个后台来管理所有的评论</li>
<li>umami：一个简单易用、自托管的开源网站访问流量<em>统计</em>分析工具</li>
<li>pgsql</li>
<li>uptime-kuma：一个开源免费的监控工具</li>
<li>rsshub：一个开源、简单易用、易于扩展的RSS 生成器，可以给任何奇奇怪怪的内容生成RSS 订阅源</li>
</ul>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/vps-docker-service.png" alt="vps-docker-service"  />
</p>
<p>通过 Docker 部署这些服务非常简单，主要是需要注意的一点是：将这些服务部署到同一个网路，这样各个服务之间可以互相通信。比如：很多服务都需要依赖数据库 postgresql，可以使用 docker-compose 来编排服务。安装部署过程参考：<a href="/posts/2023/01/25/notes-about-deploy-services-in-vps/">我的VPS服务部署记录</a></p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-2｜博客重构</title>
      <link>https://blog.chensoul.com/posts/2023/01/15/weekly_review_2/</link>
      <pubDate>Sun, 15 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/15/weekly_review_2/</guid>
      <description>前言 本篇是对 2023-01-09 到 2023-01-15 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这是年前倒数第二个工作周，工作上主要是完成项目一</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-09</code> 到 <code>2023-01-15</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这是年前倒数第二个工作周，工作上主要是完成项目一个版本的测试和发布。这个博客主要是分享一些技术相关笔记和个人的生活记录与思考，所以不会涉及具体的工作内容。</p>
<p>周三晚上是部门年会，领导提出了 2023 年收入 6.2 亿的目标，比 2022 年收入增长 140%。从公司领导层这乐观的年度规划，看得出来公司的发展属于上升趋势，同时意味着 2023 年又是忙碌和压力巨大的一年。</p>
<p>工作闲暇之余，看到了一些独立开发者的博客，并受他们博客文章的影响，立即决定重新捣鼓博客。于是，在一腔热情之下，花了三天时间重构了博客，也对博客以后的方向做了一些规划。</p>
<p>周末是过小年，小年伊始，年味渐浓。周六晚上，堂哥家吃年饭。周日中午，自己家吃年饭。这是新婚后第一次两边的家人一起吃年饭。虽然很早就确定了年饭时间大家都有时间的周末、预定了可以坐下 20 多人的大桌，但还是遗憾人没有到齐。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/new-year-dinner-20230115.png" alt="new-year-dinner-20230115"  />
</p>
<h2 id="博客重构">博客重构</h2>
<h3 id="博客主题">博客主题</h3>
<p>以前的博客主要是纯粹分享技术，很少有自己的思考，基本上就是代码比汉字要多不少。博客没有博主的思考，无法让读者认识、了解博主，并和博主产生深入的链接。这样的博客没有灵魂，就仅仅是一个纯分享的 wiki。</p>
<p>这次重新开始写博客之后，规划的博客主题是分享技术、记录生活、启发思考。技术上的文章，要有深度；生活的点滴，要有复盘；思考的内容，要有共鸣。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/blog-homepage-den-theme.png" alt="blog-homepage-den-theme"  />
</p>
<h3 id="博客规划">博客规划</h3>
<p>以前博客文章的分类有 java、database、devops、web，在删了一些文章之后，将博客的分类调整为想法（Ideas）、笔记（Notes）两类，后面再根据实际情况添加或者调整分类。</p>
<blockquote>
<p>健康，爱情和使命，按照这个顺序，其它的都不重要</p>
</blockquote>
<h3 id="文章链接">文章链接</h3>
<p>以前的博客链接格式是 <code>posts/:slug</code>，现在调整为 <code>posts/:year/:month/:day/:slug</code>。因为现在博客只有几篇文章，所以暂时不打算做原有链接路径到新路径的重定向工作。</p>
<h3 id="博客部署">博客部署</h3>
<p>目前有三种方案部署方案：</p>
<ul>
<li>github pages。国内访问速度受影响。</li>
<li>cloudflare pages。可以使用 cdn 加速。</li>
<li>Self hosted。需要购买云主机和手动运维。</li>
</ul>
<p>目前，是倾向于使用第二种方案。源码保存到 github 上，github actions 编译和部署静态文件到 cf-pages 分支，通过 cloudflare pages 链接 github 仓库、自动化部署静态文件并设置自定义域名 <code>blog.chensoul.com</code>。</p>
<h3 id="发布流程">发布流程</h3>
<p>本地编写 markdown 文件，图片保存到公有云，通过 git 提交到 github 仓库，使用 github actions 通过 n8n 自动发布到多平台，比如：公众号，语雀等。</p>
<h3 id="待办事项">待办事项</h3>
<p>本周对博客重构，计划完成以下功能：</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 在不修改原主题的前提下，通过 git log 记录对主题的改动</li>
<li><input checked="" disabled="" type="checkbox"> 添加 <a href="https://cusdis.com/">Cusdis </a>评论系统</li>
<li><input checked="" disabled="" type="checkbox"> 添加 <a href="https://umami.is/">Umami</a> 统计分析</li>
<li><input checked="" disabled="" type="checkbox"> 添加 <a href="https://uptime.kuma.pet/">Kuma</a> 服务监控</li>
<li><input checked="" disabled="" type="checkbox"> 添加搜索、回到顶部功能</li>
<li><input checked="" disabled="" type="checkbox"> 使用 <a href="https://oss.console.aliyun.com/overview">阿里云对象存储</a> 作为图床</li>
<li><input disabled="" type="checkbox"> github actions 集成 <a href="https://n8n.io/">n8n</a></li>
<li><input disabled="" type="checkbox"> 域名 dns 解析迁移到 cloudflare</li>
</ul>
<p>以下是使用 kuma 监控我的 VPS 上的服务。</p>
<p><img loading="lazy" src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/chensoul-uptime.png" alt="chensoul-uptime"  />
</p>
<p>以上。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>周报-1｜开始写周报、冥想</title>
      <link>https://blog.chensoul.com/posts/2023/01/08/weekly_review_1/</link>
      <pubDate>Sun, 08 Jan 2023 09:47:03 +0800</pubDate>
      
      <guid>https://blog.chensoul.com/posts/2023/01/08/weekly_review_1/</guid>
      <description>前言 本篇是对 2023-01-02 到 2023-01-08 这周生活的记录与思考。首发在我的个人 博客，你可以移步了解更多或者给我留言。 这是 2023 年的第一周，元旦放了三天假之后，就用投入了</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-02</code> 到 <code>2023-01-08</code> 这周生活的记录与思考。首发在我的个人 <a href="https://blog.chensoul.com/">博客</a>，你可以移步了解更多或者给我留言。</p>
<p>这是 2023 年的第一周，元旦放了三天假之后，就用投入了工作之中。元旦已过，过年就没多远了，很多公司也开始准备年会了。因为疫情，这个年注定不好过。现在疫情放开，不知道有多少公司能够熬过这个年，进入百废待兴的节奏。</p>
<p>最近把 rss 阅读器又用起来，每天阅读订阅的未读文章，关注到好几个独立开发者。他们每周都在坚持写博客、分享技术文章。从他们的分享里面，可以看到他们有在做自己的 side projects，也有在开源项目提交代码。看着他们的 github 主页每天都有提交代码，再看看我的 github 主页很久没有提交过代码，顿感惭愧。目前，公司使用的是自建的 gitlab 仓库托管代码，很多代码不方便公开分享，自己夜很少花时间写一些小项目公开分享到 github。干脆就清理一些 github 长期没有维护的仓库，取关了一些好友，更新了 github 主页，最后看了一下粉丝还有 574 人，相对而言也是少的可怜🥺。</p>
<h2 id="开始写周报">开始写周报</h2>
<p>前段时间，开始尝试在 <a href="https://www.yuque.com/chensoul">语雀</a> 上每天写日记，写了几天之后，没有坚持下来。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/yuque-life-note.png" alt="yuque-life-note" style="width: 50%"/>
<p>总结了一下，没有坚持下来的原因主要是在于每天没有积累足够的分享内容，也就是输入不够；另外，输出之后的反馈不够，这和观众流量有关。作为一个程序员，更喜欢自动化工作的快感和满足感。哟还是更倾向于将博客以 markdown 文件保存到本地或者 git 仓库，然后通过自动化脚本编译部署到多平台。在关注了一些独立开发者的博客之后，更是坚定了这种想法。于是有了这篇写周报的文章，以周为单位记录每一周的所看所思所感。</p>
<p>关于写博客的流程，电脑上使用 typora 编辑器有着很好的用户体验。如果也能在手机上用 markdown 写文章并提交到 github 上就更完美了。刚开始我使用的是 mweb 这个 app，最近在 ios 上又发现了 metion 这个 app 就可以支持和 git 同步。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/ios-app-metion.png" alt="ios-app-metion" style="width: 50%"/>
<p>这篇文章就是通过 metion 编写和提交的。图片是本地上传的，图片名称应该是一串随机数，待文章发布之后，需要将图片重命名为有意义的名称，这样方便在图床里查阅和管理。</p>
<img src="http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/metion-writing-first-blog.png" alt="metion-writing-first-blog" style="width: 50%"/>
<p>关于图片的宽度设置，特别是竖形图，建议将宽度设置为一半。设置方法是：在 md 文件里使用 <code>img</code> 标签引入图片，这样就可以添加一个 <code>sytle=&quot;width: 50%&quot;</code> 来设置宽度。例如，上面图片就是这样设置的。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://chensoul.oss-cn-hangzhou.aliyuncs.com/images/ios-app-metion.png&#34;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;ios-app-metion&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;width: 50%&#34;</span><span class="p">&gt;</span>
</span></span></code></pre></div><h2 id="内观冥想">内观冥想</h2>
<p>这个月参加了一个内观冥想 21 天训练营，每天早上 7 点到 8 点是上课时间，正好也是我上班时间。在听了几天课程并打卡之后，就放弃了。</p>
<p>21 天课程内容，每天的主题分别是：</p>
<ul>
<li>目标</li>
<li>计划</li>
<li>结果</li>
<li>比较</li>
<li>抱怨</li>
<li>后悔</li>
<li>他应该知道自己错了</li>
<li>不可能</li>
</ul>
<h3 id="目标">目标</h3>
<blockquote>
<p>今日内观冥想主题是目标</p>
<p>静静地放空自己，回想自己关注目标的记忆。好像自己曾经设立过很多目标，又好像什么都没有。目标是什么，好像描述不出来，又琢磨不透。</p>
<p>曾经立下的那些目标算是目标吗？他们可以实现吗？他们实现了吗？为什么没有实现呢？无志之人常立志，有志之人立常志。远的不说，先看看 2022 年实现了哪些目标。读书，是彻底放下了；健身，元旦前减到 130 斤的目标在 “阳康后不要剧烈运动” 的说辞下耽误了；定投，也是终止了；买车，车是消耗品；结婚，实现了。</p>
<p>算了下，实现了的目标也就是结婚了。少的可怜。为什么会这样呢？大抵是自己不够自律，没有持续的坚持，也没有及时的反思和调整。也就是自我察觉不够吧！或者说没有养成自我察觉的方法和习惯。这也就是为什么要参加 21 天内观训练营的原因吧。</p>
<p>一个人很难认清自身的局限性，很难扩大自己的认知，多与身边的人交流和学习，通过观他人，再来思自己，应该可以提升自己的察觉意识。</p>
</blockquote>
<h3 id="计划">计划</h3>
<blockquote>
<p>今日内观冥想主题是计划。</p>
<p>早上冥想是在地铁，冥想的时候放空自己，感受自己的思绪、情绪和身体的注意力。因为是站着，注意力一会儿在脚上，一会儿在手上，不能完全地放空自己。想必要是完全放松，估计就站不住了吧。</p>
<p>冥想地过程中，重要的是感受和观察。感受当下的感受，观察自己的观察，任有他们流动和发展。所谓没有绝对的对与错，冥想的过程中，重要的是作为一个旁观者，不要有过多的主观意识。</p>
</blockquote>
<h3 id="结果">结果</h3>
<blockquote>
<p>今天的内观冥想主题是结果。</p>
<p>把身体挂在钩子上，静静地观察和感受。一方面感受身体，一方面会思考自己对结果的理解。什么是结果？自己过去一年取得了什么样的结果？为什么没有取得？</p>
</blockquote>
<h3 id="比较">比较</h3>
<blockquote>
<p>今日内观冥想主题是比较。冥想时，观察自己的感受、情绪、想法，他们可能是任何样子的。不管是怎样的，他们都是正常的，都是他们本来的样子，也就是空性。</p>
<p>把比较这个念头挂起来，静静地看比较这两个字。然后开始觉察比较这两个字。这个时候，大脑开始在思考比较这个念头是什么。思绪在变化的时候，对对比较这个念头的感受也在变化。无论如何变化，自己都不要干预。当自己有了比较这个念头，自己的感受是失望的。失望自己不如别人，不如过去。失望过后，又不服气，又暗下决心要好好努力。这个过程中，我是我的主人，是我在有着各种各样的感受。如果我能控制自己的情绪，就能控制自己的行为。</p>
</blockquote>
<h3 id="抱怨">抱怨</h3>
<blockquote>
<p>今日冥想主题是抱怨。</p>
<p>生活中有什么抱怨的？抱怨又解决不了问题？问题又不是自己造成的，可能是别人造成的！别人的事情是别人的事情，自己的事情是自己造成。别人的事情，你管不了，你能管理的是你自己的。管好自己的心态情绪和行为，因为抱怨解决不了别人的问题，也解决不了自己的事情。甚至你的抱怨还会给别人带来负能量，给你们带来争吵，给自己带来蛮烦，给自己地能力和情绪带来消耗。与其消耗自己，还不如提升自己。有时候不要局限在自己的思维里，换个角度，提升格局，一切事情都不是事情了。这个世界哪有那么多所谓重要的事情。那些今天你看来很重要的事儿，在十年二十年之后，根本就不值得一提。所以很多时候，要用发展的眼光看问题。一切都会过去，一切都会好起来。当你这样想的时候，在你心里在你眼前，就没有什么烦恼了，也就不会抱怨了。</p>
</blockquote>
<h2 id="好物分享">好物分享</h2>
<p>几个截图软件：</p>
<ul>
<li>
<p><a href="https://immmmm.com/chrome-extensions-tinysnap/">TinySnap</a> Chrome 截图插件，支持设置背景</p>
</li>
<li>
<p>Snipaste 截图</p>
</li>
</ul>
<p>以上。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
